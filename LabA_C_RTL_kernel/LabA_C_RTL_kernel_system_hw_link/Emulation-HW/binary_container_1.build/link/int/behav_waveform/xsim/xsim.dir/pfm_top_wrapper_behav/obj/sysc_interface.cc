#pragma GCC diagnostic ignored "-Wdeprecated-declarations" 
#include "xsim.dir/pfm_top_wrapper_behav/obj/sysc_interface.h"
#include <map>
#include <list>


extern "C" { std::vector<void*> *_glb_hdl_sc_channel_map; } 



extern "C"
    void call_HDL_SC_WRITE_bv_1(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<1, sc_dt::sc_bv<1> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_2(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<2, sc_dt::sc_bv<2> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_3(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<3, sc_dt::sc_bv<3> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_4(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<4, sc_dt::sc_bv<4> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_6(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<6, sc_dt::sc_bv<6> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_7(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<7, sc_dt::sc_bv<7> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_8(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<8, sc_dt::sc_bv<8> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_9(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<9, sc_dt::sc_bv<9> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_12(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<12, sc_dt::sc_bv<12> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_14(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<14, sc_dt::sc_bv<14> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_16(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<16, sc_dt::sc_bv<16> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_17(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<17, sc_dt::sc_bv<17> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_18(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<18, sc_dt::sc_bv<18> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_22(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<22, sc_dt::sc_bv<22> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_24(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<24, sc_dt::sc_bv<24> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_32(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<32, sc_dt::sc_bv<32> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_33(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<33, sc_dt::sc_bv<33> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_38(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<38, sc_dt::sc_bv<38> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_64(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<64, sc_dt::sc_bv<64> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_96(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<96, sc_dt::sc_bv<96> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_114(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<114, sc_dt::sc_bv<114> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_128(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<128, sc_dt::sc_bv<128> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_192(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<192, sc_dt::sc_bv<192> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_256(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<256, sc_dt::sc_bv<256> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_384(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<384, sc_dt::sc_bv<384> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_512(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<512, sc_dt::sc_bv<512> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_int(unsigned int sc_net_index, char* pval)
    {
          int val = *((int*)(pval));
          ((xsim_sc_channel<0, int>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_bit(unsigned int sc_net_index, char* pval)
    {
            sc_dt::sc_bit val  =  (sc_dt::sc_bit)((*((int*)(pval)) & 0x1));
          ((xsim_sc_channel<0, sc_dt::sc_bit>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_logic(unsigned int sc_net_index, char* pval)
    {
          sc_dt::sc_logic val  =  (sc_dt::sc_logic_value_t) (((*((int*)(pval)+1) & 0x1) << 1) | (*((int*)(pval)) & 0x1));
          ((xsim_sc_channel<0, sc_dt::sc_logic>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_bool(unsigned int sc_net_index, char* pval)
    {
          bool val = *((bool*)(pval));
          ((xsim_sc_channel<0, bool>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void implicit_HDL_SCinstantiate()
    {
        _glb_hdl_sc_channel_map = new std::vector<void*> ();
        sc_inst_1 = new pfm_dynamic_auto_cc_2(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m00_couplers.auto_cc");
        sc_inst_1->xsim_set_dbg_index(1802);
        xsim_sc_channel<0, bool > *p_1_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_aclk.bind(*p_1_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_1_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_aresetn.bind(*p_1_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_awaddr.bind(*p_1_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_axi_awprot.bind(*p_1_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_1_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awvalid.bind(*p_1_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awready.bind(*p_1_s_axi_awready);
        p_1_s_axi_awready->set_sv_netview_offsetfromdp(6213032);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_wdata.bind(*p_1_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->s_axi_wstrb.bind(*p_1_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wvalid.bind(*p_1_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wready.bind(*p_1_s_axi_wready);
        p_1_s_axi_wready->set_sv_netview_offsetfromdp(6213256);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_bresp.bind(*p_1_s_axi_bresp);
        p_1_s_axi_bresp->set_sv_netview_offsetfromdp(6213312);
        xsim_sc_channel<0, bool > *p_1_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bvalid.bind(*p_1_s_axi_bvalid);
        p_1_s_axi_bvalid->set_sv_netview_offsetfromdp(6213368);
        xsim_sc_channel<0, bool > *p_1_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bready.bind(*p_1_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_araddr.bind(*p_1_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_axi_arprot.bind(*p_1_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_1_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arvalid.bind(*p_1_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arready.bind(*p_1_s_axi_arready);
        p_1_s_axi_arready->set_sv_netview_offsetfromdp(6213648);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_rdata.bind(*p_1_s_axi_rdata);
        p_1_s_axi_rdata->set_sv_netview_offsetfromdp(6213704);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_rresp.bind(*p_1_s_axi_rresp);
        p_1_s_axi_rresp->set_sv_netview_offsetfromdp(6213760);
        xsim_sc_channel<0, bool > *p_1_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rvalid.bind(*p_1_s_axi_rvalid);
        p_1_s_axi_rvalid->set_sv_netview_offsetfromdp(6213816);
        xsim_sc_channel<0, bool > *p_1_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rready.bind(*p_1_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_rready);
        xsim_sc_channel<0, bool > *p_1_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_aclk.bind(*p_1_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_1_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_aresetn.bind(*p_1_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->m_axi_awaddr.bind(*p_1_m_axi_awaddr);
        p_1_m_axi_awaddr->set_sv_netview_offsetfromdp(6214040);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->m_axi_awprot.bind(*p_1_m_axi_awprot);
        p_1_m_axi_awprot->set_sv_netview_offsetfromdp(6214096);
        xsim_sc_channel<0, bool > *p_1_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_awvalid.bind(*p_1_m_axi_awvalid);
        p_1_m_axi_awvalid->set_sv_netview_offsetfromdp(6214152);
        xsim_sc_channel<0, bool > *p_1_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_awready.bind(*p_1_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->m_axi_wdata.bind(*p_1_m_axi_wdata);
        p_1_m_axi_wdata->set_sv_netview_offsetfromdp(6214264);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->m_axi_wstrb.bind(*p_1_m_axi_wstrb);
        p_1_m_axi_wstrb->set_sv_netview_offsetfromdp(6214320);
        xsim_sc_channel<0, bool > *p_1_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_wvalid.bind(*p_1_m_axi_wvalid);
        p_1_m_axi_wvalid->set_sv_netview_offsetfromdp(6214376);
        xsim_sc_channel<0, bool > *p_1_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_wready.bind(*p_1_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->m_axi_bresp.bind(*p_1_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_1_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_bvalid.bind(*p_1_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_1_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_bready.bind(*p_1_m_axi_bready);
        p_1_m_axi_bready->set_sv_netview_offsetfromdp(6214600);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->m_axi_araddr.bind(*p_1_m_axi_araddr);
        p_1_m_axi_araddr->set_sv_netview_offsetfromdp(6214656);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->m_axi_arprot.bind(*p_1_m_axi_arprot);
        p_1_m_axi_arprot->set_sv_netview_offsetfromdp(6214712);
        xsim_sc_channel<0, bool > *p_1_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_arvalid.bind(*p_1_m_axi_arvalid);
        p_1_m_axi_arvalid->set_sv_netview_offsetfromdp(6214768);
        xsim_sc_channel<0, bool > *p_1_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_arready.bind(*p_1_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->m_axi_rdata.bind(*p_1_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->m_axi_rresp.bind(*p_1_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_1_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_rvalid.bind(*p_1_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_1_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_rready.bind(*p_1_m_axi_rready);
        p_1_m_axi_rready->set_sv_netview_offsetfromdp(6215048);
        sc_inst_2 = new pfm_dynamic_m00_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m00_couplers.m00_regslice");
        sc_inst_2->xsim_set_dbg_index(1803);
        xsim_sc_channel<0, bool > *p_2_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_2->aclk.bind(*p_2_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_2_aclk);
        xsim_sc_channel<0, bool > *p_2_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_2->aresetn.bind(*p_2_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_2_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_awaddr.bind(*p_2_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_awprot.bind(*p_2_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awvalid.bind(*p_2_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awready.bind(*p_2_s_axi_awready);
        p_2_s_axi_awready->set_sv_netview_offsetfromdp(6215432);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_wdata.bind(*p_2_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->s_axi_wstrb.bind(*p_2_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_2_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wvalid.bind(*p_2_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wready.bind(*p_2_s_axi_wready);
        p_2_s_axi_wready->set_sv_netview_offsetfromdp(6215656);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_bresp.bind(*p_2_s_axi_bresp);
        p_2_s_axi_bresp->set_sv_netview_offsetfromdp(6215712);
        xsim_sc_channel<0, bool > *p_2_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bvalid.bind(*p_2_s_axi_bvalid);
        p_2_s_axi_bvalid->set_sv_netview_offsetfromdp(6215768);
        xsim_sc_channel<0, bool > *p_2_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bready.bind(*p_2_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_araddr.bind(*p_2_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_arprot.bind(*p_2_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arvalid.bind(*p_2_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arready.bind(*p_2_s_axi_arready);
        p_2_s_axi_arready->set_sv_netview_offsetfromdp(6216048);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_rdata.bind(*p_2_s_axi_rdata);
        p_2_s_axi_rdata->set_sv_netview_offsetfromdp(6216104);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_rresp.bind(*p_2_s_axi_rresp);
        p_2_s_axi_rresp->set_sv_netview_offsetfromdp(6216160);
        xsim_sc_channel<0, bool > *p_2_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rvalid.bind(*p_2_s_axi_rvalid);
        p_2_s_axi_rvalid->set_sv_netview_offsetfromdp(6216216);
        xsim_sc_channel<0, bool > *p_2_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rready.bind(*p_2_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axi_awaddr.bind(*p_2_m_axi_awaddr);
        p_2_m_axi_awaddr->set_sv_netview_offsetfromdp(6216328);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->m_axi_awprot.bind(*p_2_m_axi_awprot);
        p_2_m_axi_awprot->set_sv_netview_offsetfromdp(6216384);
        xsim_sc_channel<0, bool > *p_2_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_awvalid.bind(*p_2_m_axi_awvalid);
        p_2_m_axi_awvalid->set_sv_netview_offsetfromdp(6216440);
        xsim_sc_channel<0, bool > *p_2_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_awready.bind(*p_2_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->m_axi_wdata.bind(*p_2_m_axi_wdata);
        p_2_m_axi_wdata->set_sv_netview_offsetfromdp(6216552);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->m_axi_wstrb.bind(*p_2_m_axi_wstrb);
        p_2_m_axi_wstrb->set_sv_netview_offsetfromdp(6216608);
        xsim_sc_channel<0, bool > *p_2_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_wvalid.bind(*p_2_m_axi_wvalid);
        p_2_m_axi_wvalid->set_sv_netview_offsetfromdp(6216664);
        xsim_sc_channel<0, bool > *p_2_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_wready.bind(*p_2_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->m_axi_bresp.bind(*p_2_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_2_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_bvalid.bind(*p_2_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_2_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_bready.bind(*p_2_m_axi_bready);
        p_2_m_axi_bready->set_sv_netview_offsetfromdp(6216888);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axi_araddr.bind(*p_2_m_axi_araddr);
        p_2_m_axi_araddr->set_sv_netview_offsetfromdp(6216944);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->m_axi_arprot.bind(*p_2_m_axi_arprot);
        p_2_m_axi_arprot->set_sv_netview_offsetfromdp(6217000);
        xsim_sc_channel<0, bool > *p_2_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_arvalid.bind(*p_2_m_axi_arvalid);
        p_2_m_axi_arvalid->set_sv_netview_offsetfromdp(6217056);
        xsim_sc_channel<0, bool > *p_2_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_arready.bind(*p_2_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->m_axi_rdata.bind(*p_2_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->m_axi_rresp.bind(*p_2_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_2_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_rvalid.bind(*p_2_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_2_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_rready.bind(*p_2_m_axi_rready);
        p_2_m_axi_rready->set_sv_netview_offsetfromdp(6217336);
        sc_inst_3 = new pfm_dynamic_auto_cc_3(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m01_couplers.auto_cc");
        sc_inst_3->xsim_set_dbg_index(1844);
        xsim_sc_channel<0, bool > *p_3_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_aclk.bind(*p_3_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_3_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_aresetn.bind(*p_3_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_awaddr.bind(*p_3_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_awprot.bind(*p_3_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_3_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awvalid.bind(*p_3_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awready.bind(*p_3_s_axi_awready);
        p_3_s_axi_awready->set_sv_netview_offsetfromdp(6253208);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_wdata.bind(*p_3_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->s_axi_wstrb.bind(*p_3_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_3_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wvalid.bind(*p_3_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wready.bind(*p_3_s_axi_wready);
        p_3_s_axi_wready->set_sv_netview_offsetfromdp(6253432);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_bresp.bind(*p_3_s_axi_bresp);
        p_3_s_axi_bresp->set_sv_netview_offsetfromdp(6253488);
        xsim_sc_channel<0, bool > *p_3_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bvalid.bind(*p_3_s_axi_bvalid);
        p_3_s_axi_bvalid->set_sv_netview_offsetfromdp(6253544);
        xsim_sc_channel<0, bool > *p_3_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bready.bind(*p_3_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_araddr.bind(*p_3_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_arprot.bind(*p_3_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_3_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arvalid.bind(*p_3_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arready.bind(*p_3_s_axi_arready);
        p_3_s_axi_arready->set_sv_netview_offsetfromdp(6253824);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_rdata.bind(*p_3_s_axi_rdata);
        p_3_s_axi_rdata->set_sv_netview_offsetfromdp(6253880);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_rresp.bind(*p_3_s_axi_rresp);
        p_3_s_axi_rresp->set_sv_netview_offsetfromdp(6253936);
        xsim_sc_channel<0, bool > *p_3_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rvalid.bind(*p_3_s_axi_rvalid);
        p_3_s_axi_rvalid->set_sv_netview_offsetfromdp(6253992);
        xsim_sc_channel<0, bool > *p_3_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rready.bind(*p_3_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_rready);
        xsim_sc_channel<0, bool > *p_3_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_aclk.bind(*p_3_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_3_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_aresetn.bind(*p_3_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axi_awaddr.bind(*p_3_m_axi_awaddr);
        p_3_m_axi_awaddr->set_sv_netview_offsetfromdp(6254216);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->m_axi_awprot.bind(*p_3_m_axi_awprot);
        p_3_m_axi_awprot->set_sv_netview_offsetfromdp(6254272);
        xsim_sc_channel<0, bool > *p_3_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_awvalid.bind(*p_3_m_axi_awvalid);
        p_3_m_axi_awvalid->set_sv_netview_offsetfromdp(6254328);
        xsim_sc_channel<0, bool > *p_3_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_awready.bind(*p_3_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->m_axi_wdata.bind(*p_3_m_axi_wdata);
        p_3_m_axi_wdata->set_sv_netview_offsetfromdp(6254440);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->m_axi_wstrb.bind(*p_3_m_axi_wstrb);
        p_3_m_axi_wstrb->set_sv_netview_offsetfromdp(6254496);
        xsim_sc_channel<0, bool > *p_3_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_wvalid.bind(*p_3_m_axi_wvalid);
        p_3_m_axi_wvalid->set_sv_netview_offsetfromdp(6254552);
        xsim_sc_channel<0, bool > *p_3_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_wready.bind(*p_3_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->m_axi_bresp.bind(*p_3_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_3_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_bvalid.bind(*p_3_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_3_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_bready.bind(*p_3_m_axi_bready);
        p_3_m_axi_bready->set_sv_netview_offsetfromdp(6254776);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axi_araddr.bind(*p_3_m_axi_araddr);
        p_3_m_axi_araddr->set_sv_netview_offsetfromdp(6254832);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->m_axi_arprot.bind(*p_3_m_axi_arprot);
        p_3_m_axi_arprot->set_sv_netview_offsetfromdp(6254888);
        xsim_sc_channel<0, bool > *p_3_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_arvalid.bind(*p_3_m_axi_arvalid);
        p_3_m_axi_arvalid->set_sv_netview_offsetfromdp(6254944);
        xsim_sc_channel<0, bool > *p_3_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_arready.bind(*p_3_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->m_axi_rdata.bind(*p_3_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->m_axi_rresp.bind(*p_3_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_3_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_rvalid.bind(*p_3_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_3_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_rready.bind(*p_3_m_axi_rready);
        p_3_m_axi_rready->set_sv_netview_offsetfromdp(6255224);
        sc_inst_4 = new pfm_dynamic_m01_regslice_5(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m01_couplers.m01_regslice");
        sc_inst_4->xsim_set_dbg_index(1845);
        xsim_sc_channel<0, bool > *p_4_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_4->aclk.bind(*p_4_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_4_aclk);
        xsim_sc_channel<0, bool > *p_4_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_4->aresetn.bind(*p_4_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_4_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_awaddr.bind(*p_4_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->s_axi_awprot.bind(*p_4_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_4_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awvalid.bind(*p_4_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awready.bind(*p_4_s_axi_awready);
        p_4_s_axi_awready->set_sv_netview_offsetfromdp(6255608);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_wdata.bind(*p_4_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->s_axi_wstrb.bind(*p_4_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_4_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wvalid.bind(*p_4_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wready.bind(*p_4_s_axi_wready);
        p_4_s_axi_wready->set_sv_netview_offsetfromdp(6255832);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_bresp.bind(*p_4_s_axi_bresp);
        p_4_s_axi_bresp->set_sv_netview_offsetfromdp(6255888);
        xsim_sc_channel<0, bool > *p_4_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bvalid.bind(*p_4_s_axi_bvalid);
        p_4_s_axi_bvalid->set_sv_netview_offsetfromdp(6255944);
        xsim_sc_channel<0, bool > *p_4_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bready.bind(*p_4_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_araddr.bind(*p_4_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->s_axi_arprot.bind(*p_4_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_4_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arvalid.bind(*p_4_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arready.bind(*p_4_s_axi_arready);
        p_4_s_axi_arready->set_sv_netview_offsetfromdp(6256224);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_rdata.bind(*p_4_s_axi_rdata);
        p_4_s_axi_rdata->set_sv_netview_offsetfromdp(6256280);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_rresp.bind(*p_4_s_axi_rresp);
        p_4_s_axi_rresp->set_sv_netview_offsetfromdp(6256336);
        xsim_sc_channel<0, bool > *p_4_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rvalid.bind(*p_4_s_axi_rvalid);
        p_4_s_axi_rvalid->set_sv_netview_offsetfromdp(6256392);
        xsim_sc_channel<0, bool > *p_4_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rready.bind(*p_4_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axi_awaddr.bind(*p_4_m_axi_awaddr);
        p_4_m_axi_awaddr->set_sv_netview_offsetfromdp(6256504);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->m_axi_awprot.bind(*p_4_m_axi_awprot);
        p_4_m_axi_awprot->set_sv_netview_offsetfromdp(6256560);
        xsim_sc_channel<0, bool > *p_4_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_awvalid.bind(*p_4_m_axi_awvalid);
        p_4_m_axi_awvalid->set_sv_netview_offsetfromdp(6256616);
        xsim_sc_channel<0, bool > *p_4_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_awready.bind(*p_4_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->m_axi_wdata.bind(*p_4_m_axi_wdata);
        p_4_m_axi_wdata->set_sv_netview_offsetfromdp(6256728);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->m_axi_wstrb.bind(*p_4_m_axi_wstrb);
        p_4_m_axi_wstrb->set_sv_netview_offsetfromdp(6256784);
        xsim_sc_channel<0, bool > *p_4_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_wvalid.bind(*p_4_m_axi_wvalid);
        p_4_m_axi_wvalid->set_sv_netview_offsetfromdp(6256840);
        xsim_sc_channel<0, bool > *p_4_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_wready.bind(*p_4_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->m_axi_bresp.bind(*p_4_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_4_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_bvalid.bind(*p_4_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_4_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_bready.bind(*p_4_m_axi_bready);
        p_4_m_axi_bready->set_sv_netview_offsetfromdp(6257064);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axi_araddr.bind(*p_4_m_axi_araddr);
        p_4_m_axi_araddr->set_sv_netview_offsetfromdp(6257120);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->m_axi_arprot.bind(*p_4_m_axi_arprot);
        p_4_m_axi_arprot->set_sv_netview_offsetfromdp(6257176);
        xsim_sc_channel<0, bool > *p_4_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_arvalid.bind(*p_4_m_axi_arvalid);
        p_4_m_axi_arvalid->set_sv_netview_offsetfromdp(6257232);
        xsim_sc_channel<0, bool > *p_4_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_arready.bind(*p_4_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->m_axi_rdata.bind(*p_4_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->m_axi_rresp.bind(*p_4_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_4_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_rvalid.bind(*p_4_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_4_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_rready.bind(*p_4_m_axi_rready);
        p_4_m_axi_rready->set_sv_netview_offsetfromdp(6257512);
        sc_inst_5 = new pfm_dynamic_auto_cc_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m02_couplers.auto_cc");
        sc_inst_5->xsim_set_dbg_index(1886);
        xsim_sc_channel<0, bool > *p_5_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_aclk.bind(*p_5_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_5_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_aresetn.bind(*p_5_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_awaddr.bind(*p_5_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->s_axi_awprot.bind(*p_5_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_5_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awvalid.bind(*p_5_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awready.bind(*p_5_s_axi_awready);
        p_5_s_axi_awready->set_sv_netview_offsetfromdp(6294536);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_wdata.bind(*p_5_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->s_axi_wstrb.bind(*p_5_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_5_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wvalid.bind(*p_5_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wready.bind(*p_5_s_axi_wready);
        p_5_s_axi_wready->set_sv_netview_offsetfromdp(6294760);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_bresp.bind(*p_5_s_axi_bresp);
        p_5_s_axi_bresp->set_sv_netview_offsetfromdp(6294816);
        xsim_sc_channel<0, bool > *p_5_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bvalid.bind(*p_5_s_axi_bvalid);
        p_5_s_axi_bvalid->set_sv_netview_offsetfromdp(6294872);
        xsim_sc_channel<0, bool > *p_5_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bready.bind(*p_5_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_araddr.bind(*p_5_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->s_axi_arprot.bind(*p_5_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_5_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arvalid.bind(*p_5_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arready.bind(*p_5_s_axi_arready);
        p_5_s_axi_arready->set_sv_netview_offsetfromdp(6295152);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_rdata.bind(*p_5_s_axi_rdata);
        p_5_s_axi_rdata->set_sv_netview_offsetfromdp(6295208);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_rresp.bind(*p_5_s_axi_rresp);
        p_5_s_axi_rresp->set_sv_netview_offsetfromdp(6295264);
        xsim_sc_channel<0, bool > *p_5_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rvalid.bind(*p_5_s_axi_rvalid);
        p_5_s_axi_rvalid->set_sv_netview_offsetfromdp(6295320);
        xsim_sc_channel<0, bool > *p_5_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rready.bind(*p_5_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_rready);
        xsim_sc_channel<0, bool > *p_5_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_aclk.bind(*p_5_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_5_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_aresetn.bind(*p_5_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axi_awaddr.bind(*p_5_m_axi_awaddr);
        p_5_m_axi_awaddr->set_sv_netview_offsetfromdp(6295544);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->m_axi_awprot.bind(*p_5_m_axi_awprot);
        p_5_m_axi_awprot->set_sv_netview_offsetfromdp(6295600);
        xsim_sc_channel<0, bool > *p_5_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_awvalid.bind(*p_5_m_axi_awvalid);
        p_5_m_axi_awvalid->set_sv_netview_offsetfromdp(6295656);
        xsim_sc_channel<0, bool > *p_5_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_awready.bind(*p_5_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->m_axi_wdata.bind(*p_5_m_axi_wdata);
        p_5_m_axi_wdata->set_sv_netview_offsetfromdp(6295768);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->m_axi_wstrb.bind(*p_5_m_axi_wstrb);
        p_5_m_axi_wstrb->set_sv_netview_offsetfromdp(6295824);
        xsim_sc_channel<0, bool > *p_5_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_wvalid.bind(*p_5_m_axi_wvalid);
        p_5_m_axi_wvalid->set_sv_netview_offsetfromdp(6295880);
        xsim_sc_channel<0, bool > *p_5_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_wready.bind(*p_5_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->m_axi_bresp.bind(*p_5_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_5_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_bvalid.bind(*p_5_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_5_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_bready.bind(*p_5_m_axi_bready);
        p_5_m_axi_bready->set_sv_netview_offsetfromdp(6296104);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axi_araddr.bind(*p_5_m_axi_araddr);
        p_5_m_axi_araddr->set_sv_netview_offsetfromdp(6296160);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->m_axi_arprot.bind(*p_5_m_axi_arprot);
        p_5_m_axi_arprot->set_sv_netview_offsetfromdp(6296216);
        xsim_sc_channel<0, bool > *p_5_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_arvalid.bind(*p_5_m_axi_arvalid);
        p_5_m_axi_arvalid->set_sv_netview_offsetfromdp(6296272);
        xsim_sc_channel<0, bool > *p_5_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_arready.bind(*p_5_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->m_axi_rdata.bind(*p_5_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->m_axi_rresp.bind(*p_5_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_5_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_rvalid.bind(*p_5_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_5_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_rready.bind(*p_5_m_axi_rready);
        p_5_m_axi_rready->set_sv_netview_offsetfromdp(6296552);
        sc_inst_6 = new pfm_dynamic_m02_regslice_5(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m02_couplers.m02_regslice");
        sc_inst_6->xsim_set_dbg_index(1887);
        xsim_sc_channel<0, bool > *p_6_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_6->aclk.bind(*p_6_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_6_aclk);
        xsim_sc_channel<0, bool > *p_6_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_6->aresetn.bind(*p_6_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_6_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->s_axi_awaddr.bind(*p_6_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->s_axi_awprot.bind(*p_6_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_6_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_awvalid.bind(*p_6_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_awready.bind(*p_6_s_axi_awready);
        p_6_s_axi_awready->set_sv_netview_offsetfromdp(6296936);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_axi_wdata.bind(*p_6_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->s_axi_wstrb.bind(*p_6_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_6_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_wvalid.bind(*p_6_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_wready.bind(*p_6_s_axi_wready);
        p_6_s_axi_wready->set_sv_netview_offsetfromdp(6297160);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_axi_bresp.bind(*p_6_s_axi_bresp);
        p_6_s_axi_bresp->set_sv_netview_offsetfromdp(6297216);
        xsim_sc_channel<0, bool > *p_6_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_bvalid.bind(*p_6_s_axi_bvalid);
        p_6_s_axi_bvalid->set_sv_netview_offsetfromdp(6297272);
        xsim_sc_channel<0, bool > *p_6_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_bready.bind(*p_6_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->s_axi_araddr.bind(*p_6_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->s_axi_arprot.bind(*p_6_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_6_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_arvalid.bind(*p_6_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_arready.bind(*p_6_s_axi_arready);
        p_6_s_axi_arready->set_sv_netview_offsetfromdp(6297552);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_axi_rdata.bind(*p_6_s_axi_rdata);
        p_6_s_axi_rdata->set_sv_netview_offsetfromdp(6297608);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_axi_rresp.bind(*p_6_s_axi_rresp);
        p_6_s_axi_rresp->set_sv_netview_offsetfromdp(6297664);
        xsim_sc_channel<0, bool > *p_6_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_rvalid.bind(*p_6_s_axi_rvalid);
        p_6_s_axi_rvalid->set_sv_netview_offsetfromdp(6297720);
        xsim_sc_channel<0, bool > *p_6_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_rready.bind(*p_6_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->m_axi_awaddr.bind(*p_6_m_axi_awaddr);
        p_6_m_axi_awaddr->set_sv_netview_offsetfromdp(6297832);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->m_axi_awprot.bind(*p_6_m_axi_awprot);
        p_6_m_axi_awprot->set_sv_netview_offsetfromdp(6297888);
        xsim_sc_channel<0, bool > *p_6_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_awvalid.bind(*p_6_m_axi_awvalid);
        p_6_m_axi_awvalid->set_sv_netview_offsetfromdp(6297944);
        xsim_sc_channel<0, bool > *p_6_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_awready.bind(*p_6_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->m_axi_wdata.bind(*p_6_m_axi_wdata);
        p_6_m_axi_wdata->set_sv_netview_offsetfromdp(6298056);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->m_axi_wstrb.bind(*p_6_m_axi_wstrb);
        p_6_m_axi_wstrb->set_sv_netview_offsetfromdp(6298112);
        xsim_sc_channel<0, bool > *p_6_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_wvalid.bind(*p_6_m_axi_wvalid);
        p_6_m_axi_wvalid->set_sv_netview_offsetfromdp(6298168);
        xsim_sc_channel<0, bool > *p_6_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_wready.bind(*p_6_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->m_axi_bresp.bind(*p_6_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_6_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_bvalid.bind(*p_6_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_6_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_bready.bind(*p_6_m_axi_bready);
        p_6_m_axi_bready->set_sv_netview_offsetfromdp(6298392);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->m_axi_araddr.bind(*p_6_m_axi_araddr);
        p_6_m_axi_araddr->set_sv_netview_offsetfromdp(6298448);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->m_axi_arprot.bind(*p_6_m_axi_arprot);
        p_6_m_axi_arprot->set_sv_netview_offsetfromdp(6298504);
        xsim_sc_channel<0, bool > *p_6_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_arvalid.bind(*p_6_m_axi_arvalid);
        p_6_m_axi_arvalid->set_sv_netview_offsetfromdp(6298560);
        xsim_sc_channel<0, bool > *p_6_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_arready.bind(*p_6_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->m_axi_rdata.bind(*p_6_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->m_axi_rresp.bind(*p_6_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_6_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_rvalid.bind(*p_6_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_6_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_rready.bind(*p_6_m_axi_rready);
        p_6_m_axi_rready->set_sv_netview_offsetfromdp(6298840);
        sc_inst_7 = new pfm_dynamic_auto_cc_5(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m03_couplers.auto_cc");
        sc_inst_7->xsim_set_dbg_index(1930);
        xsim_sc_channel<0, bool > *p_7_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_aclk.bind(*p_7_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_7_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_aresetn.bind(*p_7_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->s_axi_awaddr.bind(*p_7_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_axi_awprot.bind(*p_7_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_7_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_awvalid.bind(*p_7_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_7_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_awready.bind(*p_7_s_axi_awready);
        p_7_s_axi_awready->set_sv_netview_offsetfromdp(6334712);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_axi_wdata.bind(*p_7_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_axi_wstrb.bind(*p_7_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_7_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_wvalid.bind(*p_7_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_7_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_wready.bind(*p_7_s_axi_wready);
        p_7_s_axi_wready->set_sv_netview_offsetfromdp(6334936);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_axi_bresp.bind(*p_7_s_axi_bresp);
        p_7_s_axi_bresp->set_sv_netview_offsetfromdp(6334992);
        xsim_sc_channel<0, bool > *p_7_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_bvalid.bind(*p_7_s_axi_bvalid);
        p_7_s_axi_bvalid->set_sv_netview_offsetfromdp(6335048);
        xsim_sc_channel<0, bool > *p_7_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_bready.bind(*p_7_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->s_axi_araddr.bind(*p_7_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_axi_arprot.bind(*p_7_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_7_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_arvalid.bind(*p_7_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_7_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_arready.bind(*p_7_s_axi_arready);
        p_7_s_axi_arready->set_sv_netview_offsetfromdp(6335328);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_axi_rdata.bind(*p_7_s_axi_rdata);
        p_7_s_axi_rdata->set_sv_netview_offsetfromdp(6335384);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_axi_rresp.bind(*p_7_s_axi_rresp);
        p_7_s_axi_rresp->set_sv_netview_offsetfromdp(6335440);
        xsim_sc_channel<0, bool > *p_7_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_rvalid.bind(*p_7_s_axi_rvalid);
        p_7_s_axi_rvalid->set_sv_netview_offsetfromdp(6335496);
        xsim_sc_channel<0, bool > *p_7_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_rready.bind(*p_7_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_rready);
        xsim_sc_channel<0, bool > *p_7_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_aclk.bind(*p_7_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_7_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_aresetn.bind(*p_7_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->m_axi_awaddr.bind(*p_7_m_axi_awaddr);
        p_7_m_axi_awaddr->set_sv_netview_offsetfromdp(6335720);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->m_axi_awprot.bind(*p_7_m_axi_awprot);
        p_7_m_axi_awprot->set_sv_netview_offsetfromdp(6335776);
        xsim_sc_channel<0, bool > *p_7_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_awvalid.bind(*p_7_m_axi_awvalid);
        p_7_m_axi_awvalid->set_sv_netview_offsetfromdp(6335832);
        xsim_sc_channel<0, bool > *p_7_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_awready.bind(*p_7_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->m_axi_wdata.bind(*p_7_m_axi_wdata);
        p_7_m_axi_wdata->set_sv_netview_offsetfromdp(6335944);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->m_axi_wstrb.bind(*p_7_m_axi_wstrb);
        p_7_m_axi_wstrb->set_sv_netview_offsetfromdp(6336000);
        xsim_sc_channel<0, bool > *p_7_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_wvalid.bind(*p_7_m_axi_wvalid);
        p_7_m_axi_wvalid->set_sv_netview_offsetfromdp(6336056);
        xsim_sc_channel<0, bool > *p_7_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_wready.bind(*p_7_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->m_axi_bresp.bind(*p_7_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_7_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_bvalid.bind(*p_7_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_7_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_bready.bind(*p_7_m_axi_bready);
        p_7_m_axi_bready->set_sv_netview_offsetfromdp(6336280);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->m_axi_araddr.bind(*p_7_m_axi_araddr);
        p_7_m_axi_araddr->set_sv_netview_offsetfromdp(6336336);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->m_axi_arprot.bind(*p_7_m_axi_arprot);
        p_7_m_axi_arprot->set_sv_netview_offsetfromdp(6336392);
        xsim_sc_channel<0, bool > *p_7_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_arvalid.bind(*p_7_m_axi_arvalid);
        p_7_m_axi_arvalid->set_sv_netview_offsetfromdp(6336448);
        xsim_sc_channel<0, bool > *p_7_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_arready.bind(*p_7_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->m_axi_rdata.bind(*p_7_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->m_axi_rresp.bind(*p_7_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_7_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_rvalid.bind(*p_7_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_7_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_rready.bind(*p_7_m_axi_rready);
        p_7_m_axi_rready->set_sv_netview_offsetfromdp(6336728);
        sc_inst_8 = new pfm_dynamic_m03_regslice_5(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m03_couplers.m03_regslice");
        sc_inst_8->xsim_set_dbg_index(1931);
        xsim_sc_channel<0, bool > *p_8_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_8->aclk.bind(*p_8_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_8_aclk);
        xsim_sc_channel<0, bool > *p_8_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_8->aresetn.bind(*p_8_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_8_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->s_axi_awaddr.bind(*p_8_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_axi_awprot.bind(*p_8_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_8_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_awvalid.bind(*p_8_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_8_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_awready.bind(*p_8_s_axi_awready);
        p_8_s_axi_awready->set_sv_netview_offsetfromdp(6337112);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_axi_wdata.bind(*p_8_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_axi_wstrb.bind(*p_8_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_8_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_wvalid.bind(*p_8_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_8_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_wready.bind(*p_8_s_axi_wready);
        p_8_s_axi_wready->set_sv_netview_offsetfromdp(6337336);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_axi_bresp.bind(*p_8_s_axi_bresp);
        p_8_s_axi_bresp->set_sv_netview_offsetfromdp(6337392);
        xsim_sc_channel<0, bool > *p_8_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_bvalid.bind(*p_8_s_axi_bvalid);
        p_8_s_axi_bvalid->set_sv_netview_offsetfromdp(6337448);
        xsim_sc_channel<0, bool > *p_8_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_bready.bind(*p_8_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->s_axi_araddr.bind(*p_8_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_axi_arprot.bind(*p_8_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_8_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_arvalid.bind(*p_8_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_8_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_arready.bind(*p_8_s_axi_arready);
        p_8_s_axi_arready->set_sv_netview_offsetfromdp(6337728);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_axi_rdata.bind(*p_8_s_axi_rdata);
        p_8_s_axi_rdata->set_sv_netview_offsetfromdp(6337784);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_axi_rresp.bind(*p_8_s_axi_rresp);
        p_8_s_axi_rresp->set_sv_netview_offsetfromdp(6337840);
        xsim_sc_channel<0, bool > *p_8_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_rvalid.bind(*p_8_s_axi_rvalid);
        p_8_s_axi_rvalid->set_sv_netview_offsetfromdp(6337896);
        xsim_sc_channel<0, bool > *p_8_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_rready.bind(*p_8_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->m_axi_awaddr.bind(*p_8_m_axi_awaddr);
        p_8_m_axi_awaddr->set_sv_netview_offsetfromdp(6338008);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m_axi_awprot.bind(*p_8_m_axi_awprot);
        p_8_m_axi_awprot->set_sv_netview_offsetfromdp(6338064);
        xsim_sc_channel<0, bool > *p_8_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_awvalid.bind(*p_8_m_axi_awvalid);
        p_8_m_axi_awvalid->set_sv_netview_offsetfromdp(6338120);
        xsim_sc_channel<0, bool > *p_8_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_awready.bind(*p_8_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->m_axi_wdata.bind(*p_8_m_axi_wdata);
        p_8_m_axi_wdata->set_sv_netview_offsetfromdp(6338232);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->m_axi_wstrb.bind(*p_8_m_axi_wstrb);
        p_8_m_axi_wstrb->set_sv_netview_offsetfromdp(6338288);
        xsim_sc_channel<0, bool > *p_8_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_wvalid.bind(*p_8_m_axi_wvalid);
        p_8_m_axi_wvalid->set_sv_netview_offsetfromdp(6338344);
        xsim_sc_channel<0, bool > *p_8_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_wready.bind(*p_8_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m_axi_bresp.bind(*p_8_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_8_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_bvalid.bind(*p_8_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_8_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_bready.bind(*p_8_m_axi_bready);
        p_8_m_axi_bready->set_sv_netview_offsetfromdp(6338568);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->m_axi_araddr.bind(*p_8_m_axi_araddr);
        p_8_m_axi_araddr->set_sv_netview_offsetfromdp(6338624);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m_axi_arprot.bind(*p_8_m_axi_arprot);
        p_8_m_axi_arprot->set_sv_netview_offsetfromdp(6338680);
        xsim_sc_channel<0, bool > *p_8_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_arvalid.bind(*p_8_m_axi_arvalid);
        p_8_m_axi_arvalid->set_sv_netview_offsetfromdp(6338736);
        xsim_sc_channel<0, bool > *p_8_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_arready.bind(*p_8_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->m_axi_rdata.bind(*p_8_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m_axi_rresp.bind(*p_8_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_8_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_rvalid.bind(*p_8_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_8_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_rready.bind(*p_8_m_axi_rready);
        p_8_m_axi_rready->set_sv_netview_offsetfromdp(6339016);
        sc_inst_9 = new pfm_dynamic_auto_cc_6(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m04_couplers.auto_cc");
        sc_inst_9->xsim_set_dbg_index(1972);
        xsim_sc_channel<0, bool > *p_9_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_aclk.bind(*p_9_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_9_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_aresetn.bind(*p_9_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_axi_awaddr.bind(*p_9_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_axi_awprot.bind(*p_9_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_9_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_awvalid.bind(*p_9_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_9_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_awready.bind(*p_9_s_axi_awready);
        p_9_s_axi_awready->set_sv_netview_offsetfromdp(6374888);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_axi_wdata.bind(*p_9_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_axi_wstrb.bind(*p_9_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_9_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_wvalid.bind(*p_9_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_9_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_wready.bind(*p_9_s_axi_wready);
        p_9_s_axi_wready->set_sv_netview_offsetfromdp(6375112);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_axi_bresp.bind(*p_9_s_axi_bresp);
        p_9_s_axi_bresp->set_sv_netview_offsetfromdp(6375168);
        xsim_sc_channel<0, bool > *p_9_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_bvalid.bind(*p_9_s_axi_bvalid);
        p_9_s_axi_bvalid->set_sv_netview_offsetfromdp(6375224);
        xsim_sc_channel<0, bool > *p_9_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_bready.bind(*p_9_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_axi_araddr.bind(*p_9_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_axi_arprot.bind(*p_9_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_9_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_arvalid.bind(*p_9_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_9_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_arready.bind(*p_9_s_axi_arready);
        p_9_s_axi_arready->set_sv_netview_offsetfromdp(6375504);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_axi_rdata.bind(*p_9_s_axi_rdata);
        p_9_s_axi_rdata->set_sv_netview_offsetfromdp(6375560);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_axi_rresp.bind(*p_9_s_axi_rresp);
        p_9_s_axi_rresp->set_sv_netview_offsetfromdp(6375616);
        xsim_sc_channel<0, bool > *p_9_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_rvalid.bind(*p_9_s_axi_rvalid);
        p_9_s_axi_rvalid->set_sv_netview_offsetfromdp(6375672);
        xsim_sc_channel<0, bool > *p_9_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_rready.bind(*p_9_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_rready);
        xsim_sc_channel<0, bool > *p_9_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_aclk.bind(*p_9_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_9_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_aresetn.bind(*p_9_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->m_axi_awaddr.bind(*p_9_m_axi_awaddr);
        p_9_m_axi_awaddr->set_sv_netview_offsetfromdp(6375896);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->m_axi_awprot.bind(*p_9_m_axi_awprot);
        p_9_m_axi_awprot->set_sv_netview_offsetfromdp(6375952);
        xsim_sc_channel<0, bool > *p_9_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_awvalid.bind(*p_9_m_axi_awvalid);
        p_9_m_axi_awvalid->set_sv_netview_offsetfromdp(6376008);
        xsim_sc_channel<0, bool > *p_9_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_awready.bind(*p_9_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->m_axi_wdata.bind(*p_9_m_axi_wdata);
        p_9_m_axi_wdata->set_sv_netview_offsetfromdp(6376120);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->m_axi_wstrb.bind(*p_9_m_axi_wstrb);
        p_9_m_axi_wstrb->set_sv_netview_offsetfromdp(6376176);
        xsim_sc_channel<0, bool > *p_9_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_wvalid.bind(*p_9_m_axi_wvalid);
        p_9_m_axi_wvalid->set_sv_netview_offsetfromdp(6376232);
        xsim_sc_channel<0, bool > *p_9_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_wready.bind(*p_9_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->m_axi_bresp.bind(*p_9_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_9_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_bvalid.bind(*p_9_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_9_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_bready.bind(*p_9_m_axi_bready);
        p_9_m_axi_bready->set_sv_netview_offsetfromdp(6376456);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->m_axi_araddr.bind(*p_9_m_axi_araddr);
        p_9_m_axi_araddr->set_sv_netview_offsetfromdp(6376512);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->m_axi_arprot.bind(*p_9_m_axi_arprot);
        p_9_m_axi_arprot->set_sv_netview_offsetfromdp(6376568);
        xsim_sc_channel<0, bool > *p_9_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_arvalid.bind(*p_9_m_axi_arvalid);
        p_9_m_axi_arvalid->set_sv_netview_offsetfromdp(6376624);
        xsim_sc_channel<0, bool > *p_9_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_arready.bind(*p_9_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->m_axi_rdata.bind(*p_9_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->m_axi_rresp.bind(*p_9_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_9_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_rvalid.bind(*p_9_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_9_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_rready.bind(*p_9_m_axi_rready);
        p_9_m_axi_rready->set_sv_netview_offsetfromdp(6376904);
        sc_inst_10 = new pfm_dynamic_m04_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m04_couplers.m04_regslice");
        sc_inst_10->xsim_set_dbg_index(1973);
        xsim_sc_channel<0, bool > *p_10_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_10->aclk.bind(*p_10_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_10_aclk);
        xsim_sc_channel<0, bool > *p_10_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_10->aresetn.bind(*p_10_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_10_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s_axi_awaddr.bind(*p_10_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_axi_awprot.bind(*p_10_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_10_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_awvalid.bind(*p_10_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_10_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_awready.bind(*p_10_s_axi_awready);
        p_10_s_axi_awready->set_sv_netview_offsetfromdp(6377288);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_axi_wdata.bind(*p_10_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_axi_wstrb.bind(*p_10_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_10_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_wvalid.bind(*p_10_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_10_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_wready.bind(*p_10_s_axi_wready);
        p_10_s_axi_wready->set_sv_netview_offsetfromdp(6377512);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_axi_bresp.bind(*p_10_s_axi_bresp);
        p_10_s_axi_bresp->set_sv_netview_offsetfromdp(6377568);
        xsim_sc_channel<0, bool > *p_10_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_bvalid.bind(*p_10_s_axi_bvalid);
        p_10_s_axi_bvalid->set_sv_netview_offsetfromdp(6377624);
        xsim_sc_channel<0, bool > *p_10_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_bready.bind(*p_10_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s_axi_araddr.bind(*p_10_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_axi_arprot.bind(*p_10_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_10_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_arvalid.bind(*p_10_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_10_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_arready.bind(*p_10_s_axi_arready);
        p_10_s_axi_arready->set_sv_netview_offsetfromdp(6377904);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_axi_rdata.bind(*p_10_s_axi_rdata);
        p_10_s_axi_rdata->set_sv_netview_offsetfromdp(6377960);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_axi_rresp.bind(*p_10_s_axi_rresp);
        p_10_s_axi_rresp->set_sv_netview_offsetfromdp(6378016);
        xsim_sc_channel<0, bool > *p_10_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_rvalid.bind(*p_10_s_axi_rvalid);
        p_10_s_axi_rvalid->set_sv_netview_offsetfromdp(6378072);
        xsim_sc_channel<0, bool > *p_10_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_rready.bind(*p_10_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->m_axi_awaddr.bind(*p_10_m_axi_awaddr);
        p_10_m_axi_awaddr->set_sv_netview_offsetfromdp(6378184);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->m_axi_awprot.bind(*p_10_m_axi_awprot);
        p_10_m_axi_awprot->set_sv_netview_offsetfromdp(6378240);
        xsim_sc_channel<0, bool > *p_10_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_awvalid.bind(*p_10_m_axi_awvalid);
        p_10_m_axi_awvalid->set_sv_netview_offsetfromdp(6378296);
        xsim_sc_channel<0, bool > *p_10_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_awready.bind(*p_10_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->m_axi_wdata.bind(*p_10_m_axi_wdata);
        p_10_m_axi_wdata->set_sv_netview_offsetfromdp(6378408);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m_axi_wstrb.bind(*p_10_m_axi_wstrb);
        p_10_m_axi_wstrb->set_sv_netview_offsetfromdp(6378464);
        xsim_sc_channel<0, bool > *p_10_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_wvalid.bind(*p_10_m_axi_wvalid);
        p_10_m_axi_wvalid->set_sv_netview_offsetfromdp(6378520);
        xsim_sc_channel<0, bool > *p_10_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_wready.bind(*p_10_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m_axi_bresp.bind(*p_10_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_10_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_bvalid.bind(*p_10_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_10_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_bready.bind(*p_10_m_axi_bready);
        p_10_m_axi_bready->set_sv_netview_offsetfromdp(6378744);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->m_axi_araddr.bind(*p_10_m_axi_araddr);
        p_10_m_axi_araddr->set_sv_netview_offsetfromdp(6378800);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->m_axi_arprot.bind(*p_10_m_axi_arprot);
        p_10_m_axi_arprot->set_sv_netview_offsetfromdp(6378856);
        xsim_sc_channel<0, bool > *p_10_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_arvalid.bind(*p_10_m_axi_arvalid);
        p_10_m_axi_arvalid->set_sv_netview_offsetfromdp(6378912);
        xsim_sc_channel<0, bool > *p_10_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_arready.bind(*p_10_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->m_axi_rdata.bind(*p_10_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m_axi_rresp.bind(*p_10_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_10_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_rvalid.bind(*p_10_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_10_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_rready.bind(*p_10_m_axi_rready);
        p_10_m_axi_rready->set_sv_netview_offsetfromdp(6379192);
        sc_inst_11 = new pfm_dynamic_auto_cc_7(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m05_couplers.auto_cc");
        sc_inst_11->xsim_set_dbg_index(2014);
        xsim_sc_channel<0, bool > *p_11_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_aclk.bind(*p_11_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_11_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_aresetn.bind(*p_11_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s_axi_awaddr.bind(*p_11_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s_axi_awprot.bind(*p_11_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_11_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_awvalid.bind(*p_11_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_11_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_awready.bind(*p_11_s_axi_awready);
        p_11_s_axi_awready->set_sv_netview_offsetfromdp(6415064);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s_axi_wdata.bind(*p_11_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s_axi_wstrb.bind(*p_11_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_11_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_wvalid.bind(*p_11_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_11_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_wready.bind(*p_11_s_axi_wready);
        p_11_s_axi_wready->set_sv_netview_offsetfromdp(6415288);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s_axi_bresp.bind(*p_11_s_axi_bresp);
        p_11_s_axi_bresp->set_sv_netview_offsetfromdp(6415344);
        xsim_sc_channel<0, bool > *p_11_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_bvalid.bind(*p_11_s_axi_bvalid);
        p_11_s_axi_bvalid->set_sv_netview_offsetfromdp(6415400);
        xsim_sc_channel<0, bool > *p_11_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_bready.bind(*p_11_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s_axi_araddr.bind(*p_11_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s_axi_arprot.bind(*p_11_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_11_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_arvalid.bind(*p_11_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_11_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_arready.bind(*p_11_s_axi_arready);
        p_11_s_axi_arready->set_sv_netview_offsetfromdp(6415680);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s_axi_rdata.bind(*p_11_s_axi_rdata);
        p_11_s_axi_rdata->set_sv_netview_offsetfromdp(6415736);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s_axi_rresp.bind(*p_11_s_axi_rresp);
        p_11_s_axi_rresp->set_sv_netview_offsetfromdp(6415792);
        xsim_sc_channel<0, bool > *p_11_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_rvalid.bind(*p_11_s_axi_rvalid);
        p_11_s_axi_rvalid->set_sv_netview_offsetfromdp(6415848);
        xsim_sc_channel<0, bool > *p_11_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_rready.bind(*p_11_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_rready);
        xsim_sc_channel<0, bool > *p_11_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_aclk.bind(*p_11_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_11_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_aresetn.bind(*p_11_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->m_axi_awaddr.bind(*p_11_m_axi_awaddr);
        p_11_m_axi_awaddr->set_sv_netview_offsetfromdp(6416072);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m_axi_awprot.bind(*p_11_m_axi_awprot);
        p_11_m_axi_awprot->set_sv_netview_offsetfromdp(6416128);
        xsim_sc_channel<0, bool > *p_11_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_awvalid.bind(*p_11_m_axi_awvalid);
        p_11_m_axi_awvalid->set_sv_netview_offsetfromdp(6416184);
        xsim_sc_channel<0, bool > *p_11_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_awready.bind(*p_11_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->m_axi_wdata.bind(*p_11_m_axi_wdata);
        p_11_m_axi_wdata->set_sv_netview_offsetfromdp(6416296);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m_axi_wstrb.bind(*p_11_m_axi_wstrb);
        p_11_m_axi_wstrb->set_sv_netview_offsetfromdp(6416352);
        xsim_sc_channel<0, bool > *p_11_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_wvalid.bind(*p_11_m_axi_wvalid);
        p_11_m_axi_wvalid->set_sv_netview_offsetfromdp(6416408);
        xsim_sc_channel<0, bool > *p_11_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_wready.bind(*p_11_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m_axi_bresp.bind(*p_11_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_11_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_bvalid.bind(*p_11_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_11_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_bready.bind(*p_11_m_axi_bready);
        p_11_m_axi_bready->set_sv_netview_offsetfromdp(6416632);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->m_axi_araddr.bind(*p_11_m_axi_araddr);
        p_11_m_axi_araddr->set_sv_netview_offsetfromdp(6416688);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m_axi_arprot.bind(*p_11_m_axi_arprot);
        p_11_m_axi_arprot->set_sv_netview_offsetfromdp(6416744);
        xsim_sc_channel<0, bool > *p_11_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_arvalid.bind(*p_11_m_axi_arvalid);
        p_11_m_axi_arvalid->set_sv_netview_offsetfromdp(6416800);
        xsim_sc_channel<0, bool > *p_11_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_arready.bind(*p_11_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->m_axi_rdata.bind(*p_11_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m_axi_rresp.bind(*p_11_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_11_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_rvalid.bind(*p_11_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_11_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_rready.bind(*p_11_m_axi_rready);
        p_11_m_axi_rready->set_sv_netview_offsetfromdp(6417080);
        sc_inst_12 = new pfm_dynamic_m05_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m05_couplers.m05_regslice");
        sc_inst_12->xsim_set_dbg_index(2015);
        xsim_sc_channel<0, bool > *p_12_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_12->aclk.bind(*p_12_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_12_aclk);
        xsim_sc_channel<0, bool > *p_12_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_12->aresetn.bind(*p_12_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_12_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s_axi_awaddr.bind(*p_12_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s_axi_awprot.bind(*p_12_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_12_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_awvalid.bind(*p_12_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_12_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_awready.bind(*p_12_s_axi_awready);
        p_12_s_axi_awready->set_sv_netview_offsetfromdp(6417464);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s_axi_wdata.bind(*p_12_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s_axi_wstrb.bind(*p_12_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_12_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_wvalid.bind(*p_12_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_12_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_wready.bind(*p_12_s_axi_wready);
        p_12_s_axi_wready->set_sv_netview_offsetfromdp(6417688);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s_axi_bresp.bind(*p_12_s_axi_bresp);
        p_12_s_axi_bresp->set_sv_netview_offsetfromdp(6417744);
        xsim_sc_channel<0, bool > *p_12_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_bvalid.bind(*p_12_s_axi_bvalid);
        p_12_s_axi_bvalid->set_sv_netview_offsetfromdp(6417800);
        xsim_sc_channel<0, bool > *p_12_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_bready.bind(*p_12_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s_axi_araddr.bind(*p_12_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s_axi_arprot.bind(*p_12_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_12_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_arvalid.bind(*p_12_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_12_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_arready.bind(*p_12_s_axi_arready);
        p_12_s_axi_arready->set_sv_netview_offsetfromdp(6418080);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s_axi_rdata.bind(*p_12_s_axi_rdata);
        p_12_s_axi_rdata->set_sv_netview_offsetfromdp(6418136);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s_axi_rresp.bind(*p_12_s_axi_rresp);
        p_12_s_axi_rresp->set_sv_netview_offsetfromdp(6418192);
        xsim_sc_channel<0, bool > *p_12_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_rvalid.bind(*p_12_s_axi_rvalid);
        p_12_s_axi_rvalid->set_sv_netview_offsetfromdp(6418248);
        xsim_sc_channel<0, bool > *p_12_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_rready.bind(*p_12_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->m_axi_awaddr.bind(*p_12_m_axi_awaddr);
        p_12_m_axi_awaddr->set_sv_netview_offsetfromdp(6418360);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m_axi_awprot.bind(*p_12_m_axi_awprot);
        p_12_m_axi_awprot->set_sv_netview_offsetfromdp(6418416);
        xsim_sc_channel<0, bool > *p_12_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_awvalid.bind(*p_12_m_axi_awvalid);
        p_12_m_axi_awvalid->set_sv_netview_offsetfromdp(6418472);
        xsim_sc_channel<0, bool > *p_12_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_awready.bind(*p_12_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->m_axi_wdata.bind(*p_12_m_axi_wdata);
        p_12_m_axi_wdata->set_sv_netview_offsetfromdp(6418584);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m_axi_wstrb.bind(*p_12_m_axi_wstrb);
        p_12_m_axi_wstrb->set_sv_netview_offsetfromdp(6418640);
        xsim_sc_channel<0, bool > *p_12_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_wvalid.bind(*p_12_m_axi_wvalid);
        p_12_m_axi_wvalid->set_sv_netview_offsetfromdp(6418696);
        xsim_sc_channel<0, bool > *p_12_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_wready.bind(*p_12_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m_axi_bresp.bind(*p_12_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_12_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_bvalid.bind(*p_12_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_12_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_bready.bind(*p_12_m_axi_bready);
        p_12_m_axi_bready->set_sv_netview_offsetfromdp(6418920);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->m_axi_araddr.bind(*p_12_m_axi_araddr);
        p_12_m_axi_araddr->set_sv_netview_offsetfromdp(6418976);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m_axi_arprot.bind(*p_12_m_axi_arprot);
        p_12_m_axi_arprot->set_sv_netview_offsetfromdp(6419032);
        xsim_sc_channel<0, bool > *p_12_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_arvalid.bind(*p_12_m_axi_arvalid);
        p_12_m_axi_arvalid->set_sv_netview_offsetfromdp(6419088);
        xsim_sc_channel<0, bool > *p_12_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_arready.bind(*p_12_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->m_axi_rdata.bind(*p_12_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m_axi_rresp.bind(*p_12_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_12_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_rvalid.bind(*p_12_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_12_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_rready.bind(*p_12_m_axi_rready);
        p_12_m_axi_rready->set_sv_netview_offsetfromdp(6419368);
        sc_inst_13 = new pfm_dynamic_s00_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.s00_couplers.s00_regslice");
        sc_inst_13->xsim_set_dbg_index(2056);
        xsim_sc_channel<0, bool > *p_13_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_13->aclk.bind(*p_13_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_13_aclk);
        xsim_sc_channel<0, bool > *p_13_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->aresetn.bind(*p_13_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_13_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->s_axi_awaddr.bind(*p_13_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s_axi_awprot.bind(*p_13_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_13_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_awvalid.bind(*p_13_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_13_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_awready.bind(*p_13_s_axi_awready);
        p_13_s_axi_awready->set_sv_netview_offsetfromdp(6443008);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s_axi_wdata.bind(*p_13_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s_axi_wstrb.bind(*p_13_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_13_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_wvalid.bind(*p_13_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_13_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_wready.bind(*p_13_s_axi_wready);
        p_13_s_axi_wready->set_sv_netview_offsetfromdp(6443232);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_axi_bresp.bind(*p_13_s_axi_bresp);
        p_13_s_axi_bresp->set_sv_netview_offsetfromdp(6443288);
        xsim_sc_channel<0, bool > *p_13_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_bvalid.bind(*p_13_s_axi_bvalid);
        p_13_s_axi_bvalid->set_sv_netview_offsetfromdp(6443344);
        xsim_sc_channel<0, bool > *p_13_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_bready.bind(*p_13_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->s_axi_araddr.bind(*p_13_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s_axi_arprot.bind(*p_13_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_13_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_arvalid.bind(*p_13_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_13_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_arready.bind(*p_13_s_axi_arready);
        p_13_s_axi_arready->set_sv_netview_offsetfromdp(6443624);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s_axi_rdata.bind(*p_13_s_axi_rdata);
        p_13_s_axi_rdata->set_sv_netview_offsetfromdp(6443680);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_axi_rresp.bind(*p_13_s_axi_rresp);
        p_13_s_axi_rresp->set_sv_netview_offsetfromdp(6443736);
        xsim_sc_channel<0, bool > *p_13_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_rvalid.bind(*p_13_s_axi_rvalid);
        p_13_s_axi_rvalid->set_sv_netview_offsetfromdp(6443792);
        xsim_sc_channel<0, bool > *p_13_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_rready.bind(*p_13_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_m_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->m_axi_awaddr.bind(*p_13_m_axi_awaddr);
        p_13_m_axi_awaddr->set_sv_netview_offsetfromdp(6443904);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m_axi_awprot.bind(*p_13_m_axi_awprot);
        p_13_m_axi_awprot->set_sv_netview_offsetfromdp(6443960);
        xsim_sc_channel<0, bool > *p_13_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_awvalid.bind(*p_13_m_axi_awvalid);
        p_13_m_axi_awvalid->set_sv_netview_offsetfromdp(6444016);
        xsim_sc_channel<0, bool > *p_13_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_awready.bind(*p_13_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m_axi_wdata.bind(*p_13_m_axi_wdata);
        p_13_m_axi_wdata->set_sv_netview_offsetfromdp(6444128);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m_axi_wstrb.bind(*p_13_m_axi_wstrb);
        p_13_m_axi_wstrb->set_sv_netview_offsetfromdp(6444184);
        xsim_sc_channel<0, bool > *p_13_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_wvalid.bind(*p_13_m_axi_wvalid);
        p_13_m_axi_wvalid->set_sv_netview_offsetfromdp(6444240);
        xsim_sc_channel<0, bool > *p_13_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_wready.bind(*p_13_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m_axi_bresp.bind(*p_13_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_13_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_bvalid.bind(*p_13_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_13_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_bready.bind(*p_13_m_axi_bready);
        p_13_m_axi_bready->set_sv_netview_offsetfromdp(6444464);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_m_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->m_axi_araddr.bind(*p_13_m_axi_araddr);
        p_13_m_axi_araddr->set_sv_netview_offsetfromdp(6444520);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m_axi_arprot.bind(*p_13_m_axi_arprot);
        p_13_m_axi_arprot->set_sv_netview_offsetfromdp(6444576);
        xsim_sc_channel<0, bool > *p_13_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_arvalid.bind(*p_13_m_axi_arvalid);
        p_13_m_axi_arvalid->set_sv_netview_offsetfromdp(6444632);
        xsim_sc_channel<0, bool > *p_13_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_arready.bind(*p_13_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m_axi_rdata.bind(*p_13_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m_axi_rresp.bind(*p_13_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_13_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_rvalid.bind(*p_13_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_13_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_rready.bind(*p_13_m_axi_rready);
        p_13_m_axi_rready->set_sv_netview_offsetfromdp(6444912);
        sc_inst_14 = new pfm_dynamic_xbar_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.xbar");
        sc_inst_14->xsim_set_dbg_index(704);
        xsim_sc_channel<0, bool > *p_14_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->aclk.bind(*p_14_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_14_aclk);
        xsim_sc_channel<0, bool > *p_14_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->aresetn.bind(*p_14_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_14_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->s_axi_awaddr.bind(*p_14_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s_axi_awprot.bind(*p_14_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s_axi_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s_axi_awvalid.bind(*p_14_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s_axi_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s_axi_awready.bind(*p_14_s_axi_awready);
        p_14_s_axi_awready->set_sv_netview_offsetfromdp(6445296);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->s_axi_wdata.bind(*p_14_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s_axi_wstrb.bind(*p_14_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s_axi_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s_axi_wvalid.bind(*p_14_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s_axi_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s_axi_wready.bind(*p_14_s_axi_wready);
        p_14_s_axi_wready->set_sv_netview_offsetfromdp(6445520);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s_axi_bresp.bind(*p_14_s_axi_bresp);
        p_14_s_axi_bresp->set_sv_netview_offsetfromdp(6445576);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s_axi_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s_axi_bvalid.bind(*p_14_s_axi_bvalid);
        p_14_s_axi_bvalid->set_sv_netview_offsetfromdp(6445632);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s_axi_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s_axi_bready.bind(*p_14_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->s_axi_araddr.bind(*p_14_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s_axi_arprot.bind(*p_14_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_arprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s_axi_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s_axi_arvalid.bind(*p_14_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s_axi_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s_axi_arready.bind(*p_14_s_axi_arready);
        p_14_s_axi_arready->set_sv_netview_offsetfromdp(6445912);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->s_axi_rdata.bind(*p_14_s_axi_rdata);
        p_14_s_axi_rdata->set_sv_netview_offsetfromdp(6445968);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s_axi_rresp.bind(*p_14_s_axi_rresp);
        p_14_s_axi_rresp->set_sv_netview_offsetfromdp(6446024);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s_axi_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s_axi_rvalid.bind(*p_14_s_axi_rvalid);
        p_14_s_axi_rvalid->set_sv_netview_offsetfromdp(6446080);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s_axi_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s_axi_rready.bind(*p_14_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_rready);
        xsim_sc_channel<384, sc_dt::sc_bv<384> > *p_14_m_axi_awaddr = new xsim_sc_channel<384, sc_dt::sc_bv<384> >();
        sc_inst_14->m_axi_awaddr.bind(*p_14_m_axi_awaddr);
        p_14_m_axi_awaddr->set_sv_netview_offsetfromdp(6446192);
        xsim_sc_channel<18, sc_dt::sc_bv<18> > *p_14_m_axi_awprot = new xsim_sc_channel<18, sc_dt::sc_bv<18> >();
        sc_inst_14->m_axi_awprot.bind(*p_14_m_axi_awprot);
        p_14_m_axi_awprot->set_sv_netview_offsetfromdp(6446248);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_m_axi_awvalid = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->m_axi_awvalid.bind(*p_14_m_axi_awvalid);
        p_14_m_axi_awvalid->set_sv_netview_offsetfromdp(6446304);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_m_axi_awready = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->m_axi_awready.bind(*p_14_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_awready);
        xsim_sc_channel<192, sc_dt::sc_bv<192> > *p_14_m_axi_wdata = new xsim_sc_channel<192, sc_dt::sc_bv<192> >();
        sc_inst_14->m_axi_wdata.bind(*p_14_m_axi_wdata);
        p_14_m_axi_wdata->set_sv_netview_offsetfromdp(6446416);
        xsim_sc_channel<24, sc_dt::sc_bv<24> > *p_14_m_axi_wstrb = new xsim_sc_channel<24, sc_dt::sc_bv<24> >();
        sc_inst_14->m_axi_wstrb.bind(*p_14_m_axi_wstrb);
        p_14_m_axi_wstrb->set_sv_netview_offsetfromdp(6446472);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_m_axi_wvalid = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->m_axi_wvalid.bind(*p_14_m_axi_wvalid);
        p_14_m_axi_wvalid->set_sv_netview_offsetfromdp(6446528);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_m_axi_wready = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->m_axi_wready.bind(*p_14_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_wready);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_14_m_axi_bresp = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_14->m_axi_bresp.bind(*p_14_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_bresp);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_m_axi_bvalid = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->m_axi_bvalid.bind(*p_14_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_bvalid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_m_axi_bready = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->m_axi_bready.bind(*p_14_m_axi_bready);
        p_14_m_axi_bready->set_sv_netview_offsetfromdp(6446752);
        xsim_sc_channel<384, sc_dt::sc_bv<384> > *p_14_m_axi_araddr = new xsim_sc_channel<384, sc_dt::sc_bv<384> >();
        sc_inst_14->m_axi_araddr.bind(*p_14_m_axi_araddr);
        p_14_m_axi_araddr->set_sv_netview_offsetfromdp(6446808);
        xsim_sc_channel<18, sc_dt::sc_bv<18> > *p_14_m_axi_arprot = new xsim_sc_channel<18, sc_dt::sc_bv<18> >();
        sc_inst_14->m_axi_arprot.bind(*p_14_m_axi_arprot);
        p_14_m_axi_arprot->set_sv_netview_offsetfromdp(6446864);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_m_axi_arvalid = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->m_axi_arvalid.bind(*p_14_m_axi_arvalid);
        p_14_m_axi_arvalid->set_sv_netview_offsetfromdp(6446920);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_m_axi_arready = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->m_axi_arready.bind(*p_14_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_arready);
        xsim_sc_channel<192, sc_dt::sc_bv<192> > *p_14_m_axi_rdata = new xsim_sc_channel<192, sc_dt::sc_bv<192> >();
        sc_inst_14->m_axi_rdata.bind(*p_14_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_rdata);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_14_m_axi_rresp = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_14->m_axi_rresp.bind(*p_14_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_rresp);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_m_axi_rvalid = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->m_axi_rvalid.bind(*p_14_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_rvalid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_m_axi_rready = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->m_axi_rready.bind(*p_14_m_axi_rready);
        p_14_m_axi_rready->set_sv_netview_offsetfromdp(6447200);
        sc_inst_15 = new pfm_dynamic_dpa_hub_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_hub");
        sc_inst_15->xsim_set_dbg_index(313);
        xsim_sc_channel<0, bool > *p_15_s_aximm_clk = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_clk.bind(*p_15_s_aximm_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_clk);
        xsim_sc_channel<0, bool > *p_15_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_aresetn.bind(*p_15_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_15_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_clk.bind(*p_15_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_clk);
        xsim_sc_channel<0, bool > *p_15_trace_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_aresetn.bind(*p_15_trace_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_aresetn);
        xsim_sc_channel<0, bool > *p_15_axilite_clk = new xsim_sc_channel<0, bool >();
        sc_inst_15->axilite_clk.bind(*p_15_axilite_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_15_axilite_clk);
        xsim_sc_channel<0, bool > *p_15_axilite_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->axilite_aresetn.bind(*p_15_axilite_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_15_axilite_aresetn);
        xsim_sc_channel<0, bool > *p_15_trace_tready0 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tready0.bind(*p_15_trace_tready0);
        p_15_trace_tready0->set_sv_netview_offsetfromdp(6447640);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_trace_tdata0 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->trace_tdata0.bind(*p_15_trace_tdata0);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tdata0);
        xsim_sc_channel<0, bool > *p_15_trace_tlast0 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tlast0.bind(*p_15_trace_tlast0);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tlast0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tid0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tid0.bind(*p_15_trace_tid0);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tid0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tdest0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tdest0.bind(*p_15_trace_tdest0);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tdest0);
        xsim_sc_channel<0, bool > *p_15_trace_tvalid0 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tvalid0.bind(*p_15_trace_tvalid0);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tvalid0);
        xsim_sc_channel<0, bool > *p_15_trace_tready1 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tready1.bind(*p_15_trace_tready1);
        p_15_trace_tready1->set_sv_netview_offsetfromdp(6447976);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_trace_tdata1 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->trace_tdata1.bind(*p_15_trace_tdata1);
        p_15_trace_tdata1->set_sv_netview_offsetfromdp(6448032);
        xsim_sc_channel<0, bool > *p_15_trace_tlast1 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tlast1.bind(*p_15_trace_tlast1);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tlast1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tid1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tid1.bind(*p_15_trace_tid1);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tid1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tdest1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tdest1.bind(*p_15_trace_tdest1);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tdest1);
        xsim_sc_channel<0, bool > *p_15_trace_tvalid1 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tvalid1.bind(*p_15_trace_tvalid1);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tvalid1);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_trace_tdata2 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->trace_tdata2.bind(*p_15_trace_tdata2);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tdata2);
        xsim_sc_channel<0, bool > *p_15_trace_tready2 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tready2.bind(*p_15_trace_tready2);
        p_15_trace_tready2->set_sv_netview_offsetfromdp(6448368);
        xsim_sc_channel<0, bool > *p_15_trace_tlast2 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tlast2.bind(*p_15_trace_tlast2);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tlast2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tid2 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tid2.bind(*p_15_trace_tid2);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tid2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tdest2 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tdest2.bind(*p_15_trace_tdest2);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tdest2);
        xsim_sc_channel<0, bool > *p_15_trace_tvalid2 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tvalid2.bind(*p_15_trace_tvalid2);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tvalid2);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_trace_tdata3 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->trace_tdata3.bind(*p_15_trace_tdata3);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tdata3);
        xsim_sc_channel<0, bool > *p_15_trace_tready3 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tready3.bind(*p_15_trace_tready3);
        p_15_trace_tready3->set_sv_netview_offsetfromdp(6448704);
        xsim_sc_channel<0, bool > *p_15_trace_tlast3 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tlast3.bind(*p_15_trace_tlast3);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tlast3);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tid3 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tid3.bind(*p_15_trace_tid3);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tid3);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tdest3 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tdest3.bind(*p_15_trace_tdest3);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tdest3);
        xsim_sc_channel<0, bool > *p_15_trace_tvalid3 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tvalid3.bind(*p_15_trace_tvalid3);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tvalid3);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_trace_tdata4 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->trace_tdata4.bind(*p_15_trace_tdata4);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tdata4);
        xsim_sc_channel<0, bool > *p_15_trace_tready4 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tready4.bind(*p_15_trace_tready4);
        p_15_trace_tready4->set_sv_netview_offsetfromdp(6449040);
        xsim_sc_channel<0, bool > *p_15_trace_tlast4 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tlast4.bind(*p_15_trace_tlast4);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tlast4);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tid4 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tid4.bind(*p_15_trace_tid4);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tid4);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tdest4 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tdest4.bind(*p_15_trace_tdest4);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tdest4);
        xsim_sc_channel<0, bool > *p_15_trace_tvalid4 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tvalid4.bind(*p_15_trace_tvalid4);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tvalid4);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_trace_tdata5 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->trace_tdata5.bind(*p_15_trace_tdata5);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tdata5);
        xsim_sc_channel<0, bool > *p_15_trace_tready5 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tready5.bind(*p_15_trace_tready5);
        p_15_trace_tready5->set_sv_netview_offsetfromdp(6449376);
        xsim_sc_channel<0, bool > *p_15_trace_tlast5 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tlast5.bind(*p_15_trace_tlast5);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tlast5);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tid5 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tid5.bind(*p_15_trace_tid5);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tid5);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tdest5 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tdest5.bind(*p_15_trace_tdest5);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tdest5);
        xsim_sc_channel<0, bool > *p_15_trace_tvalid5 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tvalid5.bind(*p_15_trace_tvalid5);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tvalid5);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_trace_tdata6 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->trace_tdata6.bind(*p_15_trace_tdata6);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tdata6);
        xsim_sc_channel<0, bool > *p_15_trace_tready6 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tready6.bind(*p_15_trace_tready6);
        p_15_trace_tready6->set_sv_netview_offsetfromdp(6449712);
        xsim_sc_channel<0, bool > *p_15_trace_tlast6 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tlast6.bind(*p_15_trace_tlast6);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tlast6);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tid6 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tid6.bind(*p_15_trace_tid6);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tid6);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tdest6 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tdest6.bind(*p_15_trace_tdest6);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tdest6);
        xsim_sc_channel<0, bool > *p_15_trace_tvalid6 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tvalid6.bind(*p_15_trace_tvalid6);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tvalid6);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s_axi_awaddr.bind(*p_15_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_15_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_awvalid.bind(*p_15_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_15_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_awready.bind(*p_15_s_axi_awready);
        p_15_s_axi_awready->set_sv_netview_offsetfromdp(6450104);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s_axi_wdata.bind(*p_15_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s_axi_wstrb.bind(*p_15_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_15_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_wvalid.bind(*p_15_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_15_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_wready.bind(*p_15_s_axi_wready);
        p_15_s_axi_wready->set_sv_netview_offsetfromdp(6450328);
        xsim_sc_channel<0, bool > *p_15_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_bvalid.bind(*p_15_s_axi_bvalid);
        p_15_s_axi_bvalid->set_sv_netview_offsetfromdp(6450384);
        xsim_sc_channel<0, bool > *p_15_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_bready.bind(*p_15_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_axi_bresp.bind(*p_15_s_axi_bresp);
        p_15_s_axi_bresp->set_sv_netview_offsetfromdp(6450496);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s_axi_araddr.bind(*p_15_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_15_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_arvalid.bind(*p_15_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_15_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_arready.bind(*p_15_s_axi_arready);
        p_15_s_axi_arready->set_sv_netview_offsetfromdp(6450664);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s_axi_rdata.bind(*p_15_s_axi_rdata);
        p_15_s_axi_rdata->set_sv_netview_offsetfromdp(6450720);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_axi_rresp.bind(*p_15_s_axi_rresp);
        p_15_s_axi_rresp->set_sv_netview_offsetfromdp(6450776);
        xsim_sc_channel<0, bool > *p_15_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_rvalid.bind(*p_15_s_axi_rvalid);
        p_15_s_axi_rvalid->set_sv_netview_offsetfromdp(6450832);
        xsim_sc_channel<0, bool > *p_15_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_rready.bind(*p_15_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s_axihub_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s_axihub_awaddr.bind(*p_15_s_axihub_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axihub_awaddr);
        xsim_sc_channel<0, bool > *p_15_s_axihub_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axihub_awvalid.bind(*p_15_s_axihub_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axihub_awvalid);
        xsim_sc_channel<0, bool > *p_15_s_axihub_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axihub_awready.bind(*p_15_s_axihub_awready);
        p_15_s_axihub_awready->set_sv_netview_offsetfromdp(6451056);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s_axihub_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s_axihub_wdata.bind(*p_15_s_axihub_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axihub_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s_axihub_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s_axihub_wstrb.bind(*p_15_s_axihub_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axihub_wstrb);
        xsim_sc_channel<0, bool > *p_15_s_axihub_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axihub_wvalid.bind(*p_15_s_axihub_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axihub_wvalid);
        xsim_sc_channel<0, bool > *p_15_s_axihub_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axihub_wready.bind(*p_15_s_axihub_wready);
        p_15_s_axihub_wready->set_sv_netview_offsetfromdp(6451280);
        xsim_sc_channel<0, bool > *p_15_s_axihub_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axihub_bvalid.bind(*p_15_s_axihub_bvalid);
        p_15_s_axihub_bvalid->set_sv_netview_offsetfromdp(6451336);
        xsim_sc_channel<0, bool > *p_15_s_axihub_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axihub_bready.bind(*p_15_s_axihub_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axihub_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_axihub_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_axihub_bresp.bind(*p_15_s_axihub_bresp);
        p_15_s_axihub_bresp->set_sv_netview_offsetfromdp(6451448);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s_axihub_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s_axihub_araddr.bind(*p_15_s_axihub_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axihub_araddr);
        xsim_sc_channel<0, bool > *p_15_s_axihub_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axihub_arvalid.bind(*p_15_s_axihub_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axihub_arvalid);
        xsim_sc_channel<0, bool > *p_15_s_axihub_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axihub_arready.bind(*p_15_s_axihub_arready);
        p_15_s_axihub_arready->set_sv_netview_offsetfromdp(6451616);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s_axihub_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s_axihub_rdata.bind(*p_15_s_axihub_rdata);
        p_15_s_axihub_rdata->set_sv_netview_offsetfromdp(6451672);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_axihub_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_axihub_rresp.bind(*p_15_s_axihub_rresp);
        p_15_s_axihub_rresp->set_sv_netview_offsetfromdp(6451728);
        xsim_sc_channel<0, bool > *p_15_s_axihub_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axihub_rvalid.bind(*p_15_s_axihub_rvalid);
        p_15_s_axihub_rvalid->set_sv_netview_offsetfromdp(6451784);
        xsim_sc_channel<0, bool > *p_15_s_axihub_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axihub_rready.bind(*p_15_s_axihub_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axihub_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s_aximm_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s_aximm_awaddr.bind(*p_15_s_aximm_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_awaddr);
        xsim_sc_channel<0, bool > *p_15_s_aximm_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_awvalid.bind(*p_15_s_aximm_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_awvalid);
        xsim_sc_channel<0, bool > *p_15_s_aximm_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_awready.bind(*p_15_s_aximm_awready);
        p_15_s_aximm_awready->set_sv_netview_offsetfromdp(6452008);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s_aximm_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s_aximm_awlen.bind(*p_15_s_aximm_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s_aximm_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s_aximm_awsize.bind(*p_15_s_aximm_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_aximm_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_aximm_awburst.bind(*p_15_s_aximm_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s_aximm_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s_aximm_awid.bind(*p_15_s_aximm_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s_aximm_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s_aximm_wdata.bind(*p_15_s_aximm_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s_aximm_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s_aximm_wstrb.bind(*p_15_s_aximm_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_wstrb);
        xsim_sc_channel<0, bool > *p_15_s_aximm_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_wvalid.bind(*p_15_s_aximm_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_wvalid);
        xsim_sc_channel<0, bool > *p_15_s_aximm_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_wready.bind(*p_15_s_aximm_wready);
        p_15_s_aximm_wready->set_sv_netview_offsetfromdp(6452456);
        xsim_sc_channel<0, bool > *p_15_s_aximm_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_bvalid.bind(*p_15_s_aximm_bvalid);
        p_15_s_aximm_bvalid->set_sv_netview_offsetfromdp(6452512);
        xsim_sc_channel<0, bool > *p_15_s_aximm_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_bready.bind(*p_15_s_aximm_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_bready);
        xsim_sc_channel<0, bool > *p_15_s_aximm_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_wlast.bind(*p_15_s_aximm_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_wlast);
        xsim_sc_channel<0, bool > *p_15_s_aximm_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_rlast.bind(*p_15_s_aximm_rlast);
        p_15_s_aximm_rlast->set_sv_netview_offsetfromdp(6452680);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_aximm_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_aximm_bresp.bind(*p_15_s_aximm_bresp);
        p_15_s_aximm_bresp->set_sv_netview_offsetfromdp(6452736);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s_aximm_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s_aximm_bid.bind(*p_15_s_aximm_bid);
        p_15_s_aximm_bid->set_sv_netview_offsetfromdp(6452792);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s_aximm_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s_aximm_araddr.bind(*p_15_s_aximm_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_araddr);
        xsim_sc_channel<0, bool > *p_15_s_aximm_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_arvalid.bind(*p_15_s_aximm_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_arvalid);
        xsim_sc_channel<0, bool > *p_15_s_aximm_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_arready.bind(*p_15_s_aximm_arready);
        p_15_s_aximm_arready->set_sv_netview_offsetfromdp(6452960);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s_aximm_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s_aximm_arlen.bind(*p_15_s_aximm_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s_aximm_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s_aximm_arsize.bind(*p_15_s_aximm_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_aximm_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_aximm_arburst.bind(*p_15_s_aximm_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s_aximm_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s_aximm_arid.bind(*p_15_s_aximm_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s_aximm_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s_aximm_rdata.bind(*p_15_s_aximm_rdata);
        p_15_s_aximm_rdata->set_sv_netview_offsetfromdp(6453240);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s_aximm_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s_aximm_rid.bind(*p_15_s_aximm_rid);
        p_15_s_aximm_rid->set_sv_netview_offsetfromdp(6453296);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_aximm_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_aximm_rresp.bind(*p_15_s_aximm_rresp);
        p_15_s_aximm_rresp->set_sv_netview_offsetfromdp(6453352);
        xsim_sc_channel<0, bool > *p_15_s_aximm_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_rvalid.bind(*p_15_s_aximm_rvalid);
        p_15_s_aximm_rvalid->set_sv_netview_offsetfromdp(6453408);
        xsim_sc_channel<0, bool > *p_15_s_aximm_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_rready.bind(*p_15_s_aximm_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_rready);
        sc_inst_16 = new pfm_dynamic_dpa_mon0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_mon0");
        sc_inst_16->xsim_set_dbg_index(314);
        xsim_sc_channel<0, bool > *p_16_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_clk.bind(*p_16_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_clk);
        xsim_sc_channel<0, bool > *p_16_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_resetn.bind(*p_16_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_resetn);
        xsim_sc_channel<0, bool > *p_16_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_16->trace_clk.bind(*p_16_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_16_trace_clk);
        xsim_sc_channel<0, bool > *p_16_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_16->trace_rst.bind(*p_16_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_16_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->s_axi_awaddr.bind(*p_16_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s_axi_awprot.bind(*p_16_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_16_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_awvalid.bind(*p_16_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_16_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_awready.bind(*p_16_s_axi_awready);
        p_16_s_axi_awready->set_sv_netview_offsetfromdp(6453960);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->s_axi_wdata.bind(*p_16_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s_axi_wstrb.bind(*p_16_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_16_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_wvalid.bind(*p_16_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_16_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_wready.bind(*p_16_s_axi_wready);
        p_16_s_axi_wready->set_sv_netview_offsetfromdp(6454184);
        xsim_sc_channel<0, bool > *p_16_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_bvalid.bind(*p_16_s_axi_bvalid);
        p_16_s_axi_bvalid->set_sv_netview_offsetfromdp(6454240);
        xsim_sc_channel<0, bool > *p_16_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_bready.bind(*p_16_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s_axi_bresp.bind(*p_16_s_axi_bresp);
        p_16_s_axi_bresp->set_sv_netview_offsetfromdp(6454352);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->s_axi_araddr.bind(*p_16_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s_axi_arprot.bind(*p_16_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_16_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_arvalid.bind(*p_16_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_16_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_arready.bind(*p_16_s_axi_arready);
        p_16_s_axi_arready->set_sv_netview_offsetfromdp(6454576);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->s_axi_rdata.bind(*p_16_s_axi_rdata);
        p_16_s_axi_rdata->set_sv_netview_offsetfromdp(6454632);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s_axi_rresp.bind(*p_16_s_axi_rresp);
        p_16_s_axi_rresp->set_sv_netview_offsetfromdp(6454688);
        xsim_sc_channel<0, bool > *p_16_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_rvalid.bind(*p_16_s_axi_rvalid);
        p_16_s_axi_rvalid->set_sv_netview_offsetfromdp(6454744);
        xsim_sc_channel<0, bool > *p_16_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_rready.bind(*p_16_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_rready);
        xsim_sc_channel<0, bool > *p_16_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_AWVALID.bind(*p_16_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_16_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_AWREADY.bind(*p_16_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_AWREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_mon_AWADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->mon_AWADDR.bind(*p_16_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_AWADDR);
        xsim_sc_channel<0, bool > *p_16_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_WVALID.bind(*p_16_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_WVALID);
        xsim_sc_channel<0, bool > *p_16_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_WREADY.bind(*p_16_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->mon_WDATA.bind(*p_16_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->mon_WSTRB.bind(*p_16_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_16_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_ARVALID.bind(*p_16_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_16_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_ARREADY.bind(*p_16_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_ARREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_mon_ARADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->mon_ARADDR.bind(*p_16_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_ARADDR);
        xsim_sc_channel<0, bool > *p_16_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_RVALID.bind(*p_16_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_RVALID);
        xsim_sc_channel<0, bool > *p_16_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_RREADY.bind(*p_16_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->mon_RDATA.bind(*p_16_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->mon_RRESP.bind(*p_16_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_RRESP);
        xsim_sc_channel<0, bool > *p_16_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_BVALID.bind(*p_16_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_BVALID);
        xsim_sc_channel<0, bool > *p_16_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_BREADY.bind(*p_16_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->mon_BRESP.bind(*p_16_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m_axis_tready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m_axis_tready.bind(*p_16_m_axis_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m_axis_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_m_axis_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->m_axis_tdata.bind(*p_16_m_axis_tdata);
        p_16_m_axis_tdata->set_sv_netview_offsetfromdp(6455864);
        xsim_sc_channel<0, bool > *p_16_m_axis_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axis_tlast.bind(*p_16_m_axis_tlast);
        p_16_m_axis_tlast->set_sv_netview_offsetfromdp(6455920);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_m_axis_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->m_axis_tid.bind(*p_16_m_axis_tid);
        p_16_m_axis_tid->set_sv_netview_offsetfromdp(6455976);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_m_axis_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->m_axis_tdest.bind(*p_16_m_axis_tdest);
        p_16_m_axis_tdest->set_sv_netview_offsetfromdp(6456032);
        xsim_sc_channel<0, bool > *p_16_m_axis_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axis_tvalid.bind(*p_16_m_axis_tvalid);
        p_16_m_axis_tvalid->set_sv_netview_offsetfromdp(6456088);
        xsim_sc_channel<0, bool > *p_16_ap_continue = new xsim_sc_channel<0, bool >();
        sc_inst_16->ap_continue.bind(*p_16_ap_continue);
        (*_glb_hdl_sc_channel_map).push_back(p_16_ap_continue);
        xsim_sc_channel<0, bool > *p_16_ap_ready = new xsim_sc_channel<0, bool >();
        sc_inst_16->ap_ready.bind(*p_16_ap_ready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_ap_ready);
        xsim_sc_channel<0, bool > *p_16_ap_start = new xsim_sc_channel<0, bool >();
        sc_inst_16->ap_start.bind(*p_16_ap_start);
        (*_glb_hdl_sc_channel_map).push_back(p_16_ap_start);
        xsim_sc_channel<0, bool > *p_16_ap_idle = new xsim_sc_channel<0, bool >();
        sc_inst_16->ap_idle.bind(*p_16_ap_idle);
        (*_glb_hdl_sc_channel_map).push_back(p_16_ap_idle);
        xsim_sc_channel<0, bool > *p_16_ap_done = new xsim_sc_channel<0, bool >();
        sc_inst_16->ap_done.bind(*p_16_ap_done);
        (*_glb_hdl_sc_channel_map).push_back(p_16_ap_done);
        sc_inst_17 = new pfm_dynamic_dpa_mon1_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_mon1");
        sc_inst_17->xsim_set_dbg_index(315);
        xsim_sc_channel<0, bool > *p_17_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_clk.bind(*p_17_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_clk);
        xsim_sc_channel<0, bool > *p_17_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_resetn.bind(*p_17_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_resetn);
        xsim_sc_channel<0, bool > *p_17_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_17->trace_clk.bind(*p_17_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_17_trace_clk);
        xsim_sc_channel<0, bool > *p_17_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_17->trace_rst.bind(*p_17_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_17_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->s_axi_awaddr.bind(*p_17_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_17_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_awvalid.bind(*p_17_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_17_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_awready.bind(*p_17_s_axi_awready);
        p_17_s_axi_awready->set_sv_netview_offsetfromdp(6456808);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->s_axi_wdata.bind(*p_17_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s_axi_wstrb.bind(*p_17_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_17_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_wvalid.bind(*p_17_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_17_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_wready.bind(*p_17_s_axi_wready);
        p_17_s_axi_wready->set_sv_netview_offsetfromdp(6457032);
        xsim_sc_channel<0, bool > *p_17_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_bvalid.bind(*p_17_s_axi_bvalid);
        p_17_s_axi_bvalid->set_sv_netview_offsetfromdp(6457088);
        xsim_sc_channel<0, bool > *p_17_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_bready.bind(*p_17_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s_axi_bresp.bind(*p_17_s_axi_bresp);
        p_17_s_axi_bresp->set_sv_netview_offsetfromdp(6457200);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->s_axi_araddr.bind(*p_17_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_17_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_arvalid.bind(*p_17_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_17_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_arready.bind(*p_17_s_axi_arready);
        p_17_s_axi_arready->set_sv_netview_offsetfromdp(6457368);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->s_axi_rdata.bind(*p_17_s_axi_rdata);
        p_17_s_axi_rdata->set_sv_netview_offsetfromdp(6457424);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s_axi_rresp.bind(*p_17_s_axi_rresp);
        p_17_s_axi_rresp->set_sv_netview_offsetfromdp(6457480);
        xsim_sc_channel<0, bool > *p_17_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_rvalid.bind(*p_17_s_axi_rvalid);
        p_17_s_axi_rvalid->set_sv_netview_offsetfromdp(6457536);
        xsim_sc_channel<0, bool > *p_17_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_rready.bind(*p_17_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_rready);
        xsim_sc_channel<0, bool > *p_17_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_AWVALID.bind(*p_17_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_17_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_AWREADY.bind(*p_17_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->mon_AWADDR.bind(*p_17_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->mon_AWID.bind(*p_17_mon_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->mon_AWLEN.bind(*p_17_mon_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->mon_AWSIZE.bind(*p_17_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->mon_AWBURST.bind(*p_17_mon_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_17_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_WVALID.bind(*p_17_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_WVALID);
        xsim_sc_channel<0, bool > *p_17_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_WREADY.bind(*p_17_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->mon_WDATA.bind(*p_17_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->mon_WSTRB.bind(*p_17_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_17_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_WLAST.bind(*p_17_mon_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_WLAST);
        xsim_sc_channel<0, bool > *p_17_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_ARVALID.bind(*p_17_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_17_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_ARREADY.bind(*p_17_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->mon_ARADDR.bind(*p_17_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->mon_ARID.bind(*p_17_mon_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->mon_ARLEN.bind(*p_17_mon_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->mon_ARSIZE.bind(*p_17_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->mon_ARBURST.bind(*p_17_mon_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_17_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_RVALID.bind(*p_17_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_RVALID);
        xsim_sc_channel<0, bool > *p_17_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_RREADY.bind(*p_17_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->mon_RDATA.bind(*p_17_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_RDATA);
        xsim_sc_channel<0, bool > *p_17_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_RLAST.bind(*p_17_mon_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->mon_RID.bind(*p_17_mon_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->mon_RRESP.bind(*p_17_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_RRESP);
        xsim_sc_channel<0, bool > *p_17_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_BVALID.bind(*p_17_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_BVALID);
        xsim_sc_channel<0, bool > *p_17_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_BREADY.bind(*p_17_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->mon_BRESP.bind(*p_17_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->mon_BID.bind(*p_17_mon_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_BID);
        xsim_sc_channel<0, bool > *p_17_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axis_rd_tready.bind(*p_17_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->m_axis_rd_tdata.bind(*p_17_m_axis_rd_tdata);
        p_17_m_axis_rd_tdata->set_sv_netview_offsetfromdp(6459328);
        xsim_sc_channel<0, bool > *p_17_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axis_rd_tlast.bind(*p_17_m_axis_rd_tlast);
        p_17_m_axis_rd_tlast->set_sv_netview_offsetfromdp(6459384);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->m_axis_rd_tid.bind(*p_17_m_axis_rd_tid);
        p_17_m_axis_rd_tid->set_sv_netview_offsetfromdp(6459440);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->m_axis_rd_tdest.bind(*p_17_m_axis_rd_tdest);
        p_17_m_axis_rd_tdest->set_sv_netview_offsetfromdp(6459496);
        xsim_sc_channel<0, bool > *p_17_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axis_wr_tready.bind(*p_17_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->m_axis_wr_tdata.bind(*p_17_m_axis_wr_tdata);
        p_17_m_axis_wr_tdata->set_sv_netview_offsetfromdp(6459608);
        xsim_sc_channel<0, bool > *p_17_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axis_wr_tlast.bind(*p_17_m_axis_wr_tlast);
        p_17_m_axis_wr_tlast->set_sv_netview_offsetfromdp(6459664);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->m_axis_wr_tid.bind(*p_17_m_axis_wr_tid);
        p_17_m_axis_wr_tid->set_sv_netview_offsetfromdp(6459720);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->m_axis_wr_tdest.bind(*p_17_m_axis_wr_tdest);
        p_17_m_axis_wr_tdest->set_sv_netview_offsetfromdp(6459776);
        xsim_sc_channel<0, bool > *p_17_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axis_wr_tvalid.bind(*p_17_m_axis_wr_tvalid);
        p_17_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(6459832);
        xsim_sc_channel<0, bool > *p_17_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axis_rd_tvalid.bind(*p_17_m_axis_rd_tvalid);
        p_17_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(6459888);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->s_axi_awaddr_mon.bind(*p_17_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s_axi_awprot_mon.bind(*p_17_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_17_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_awvalid_mon.bind(*p_17_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_17_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_awready_mon.bind(*p_17_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->s_axi_wdata_mon.bind(*p_17_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s_axi_wstrb_mon.bind(*p_17_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_17_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_wvalid_mon.bind(*p_17_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_17_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_wready_mon.bind(*p_17_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s_axi_bresp_mon.bind(*p_17_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_17_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_bvalid_mon.bind(*p_17_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_17_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_bready_mon.bind(*p_17_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->s_axi_araddr_mon.bind(*p_17_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s_axi_arprot_mon.bind(*p_17_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_17_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_arvalid_mon.bind(*p_17_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_17_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_arready_mon.bind(*p_17_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->s_axi_rdata_mon.bind(*p_17_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s_axi_rresp_mon.bind(*p_17_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_17_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_rvalid_mon.bind(*p_17_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_17_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_rready_mon.bind(*p_17_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_rready_mon);
        sc_inst_18 = new pfm_dynamic_dpa_mon2_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_mon2");
        sc_inst_18->xsim_set_dbg_index(316);
        xsim_sc_channel<0, bool > *p_18_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_clk.bind(*p_18_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_clk);
        xsim_sc_channel<0, bool > *p_18_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_resetn.bind(*p_18_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_resetn);
        xsim_sc_channel<0, bool > *p_18_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_18->trace_clk.bind(*p_18_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_18_trace_clk);
        xsim_sc_channel<0, bool > *p_18_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_18->trace_rst.bind(*p_18_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_18_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->s_axi_awaddr.bind(*p_18_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_18_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_awvalid.bind(*p_18_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_18_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_awready.bind(*p_18_s_axi_awready);
        p_18_s_axi_awready->set_sv_netview_offsetfromdp(6461392);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->s_axi_wdata.bind(*p_18_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s_axi_wstrb.bind(*p_18_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_18_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_wvalid.bind(*p_18_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_18_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_wready.bind(*p_18_s_axi_wready);
        p_18_s_axi_wready->set_sv_netview_offsetfromdp(6461616);
        xsim_sc_channel<0, bool > *p_18_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_bvalid.bind(*p_18_s_axi_bvalid);
        p_18_s_axi_bvalid->set_sv_netview_offsetfromdp(6461672);
        xsim_sc_channel<0, bool > *p_18_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_bready.bind(*p_18_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s_axi_bresp.bind(*p_18_s_axi_bresp);
        p_18_s_axi_bresp->set_sv_netview_offsetfromdp(6461784);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->s_axi_araddr.bind(*p_18_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_18_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_arvalid.bind(*p_18_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_18_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_arready.bind(*p_18_s_axi_arready);
        p_18_s_axi_arready->set_sv_netview_offsetfromdp(6461952);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->s_axi_rdata.bind(*p_18_s_axi_rdata);
        p_18_s_axi_rdata->set_sv_netview_offsetfromdp(6462008);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s_axi_rresp.bind(*p_18_s_axi_rresp);
        p_18_s_axi_rresp->set_sv_netview_offsetfromdp(6462064);
        xsim_sc_channel<0, bool > *p_18_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_rvalid.bind(*p_18_s_axi_rvalid);
        p_18_s_axi_rvalid->set_sv_netview_offsetfromdp(6462120);
        xsim_sc_channel<0, bool > *p_18_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_rready.bind(*p_18_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_rready);
        xsim_sc_channel<0, bool > *p_18_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_AWVALID.bind(*p_18_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_18_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_AWREADY.bind(*p_18_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->mon_AWADDR.bind(*p_18_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->mon_AWID.bind(*p_18_mon_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->mon_AWLEN.bind(*p_18_mon_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->mon_AWSIZE.bind(*p_18_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->mon_AWBURST.bind(*p_18_mon_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_18_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_WVALID.bind(*p_18_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_WVALID);
        xsim_sc_channel<0, bool > *p_18_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_WREADY.bind(*p_18_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->mon_WDATA.bind(*p_18_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->mon_WSTRB.bind(*p_18_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_18_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_WLAST.bind(*p_18_mon_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_WLAST);
        xsim_sc_channel<0, bool > *p_18_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_ARVALID.bind(*p_18_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_18_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_ARREADY.bind(*p_18_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->mon_ARADDR.bind(*p_18_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->mon_ARID.bind(*p_18_mon_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->mon_ARLEN.bind(*p_18_mon_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->mon_ARSIZE.bind(*p_18_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->mon_ARBURST.bind(*p_18_mon_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_18_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_RVALID.bind(*p_18_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_RVALID);
        xsim_sc_channel<0, bool > *p_18_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_RREADY.bind(*p_18_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->mon_RDATA.bind(*p_18_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_RDATA);
        xsim_sc_channel<0, bool > *p_18_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_RLAST.bind(*p_18_mon_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->mon_RID.bind(*p_18_mon_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->mon_RRESP.bind(*p_18_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_RRESP);
        xsim_sc_channel<0, bool > *p_18_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_BVALID.bind(*p_18_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_BVALID);
        xsim_sc_channel<0, bool > *p_18_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_BREADY.bind(*p_18_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->mon_BRESP.bind(*p_18_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->mon_BID.bind(*p_18_mon_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_BID);
        xsim_sc_channel<0, bool > *p_18_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axis_rd_tready.bind(*p_18_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->m_axis_rd_tdata.bind(*p_18_m_axis_rd_tdata);
        p_18_m_axis_rd_tdata->set_sv_netview_offsetfromdp(6463912);
        xsim_sc_channel<0, bool > *p_18_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axis_rd_tlast.bind(*p_18_m_axis_rd_tlast);
        p_18_m_axis_rd_tlast->set_sv_netview_offsetfromdp(6463968);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->m_axis_rd_tid.bind(*p_18_m_axis_rd_tid);
        p_18_m_axis_rd_tid->set_sv_netview_offsetfromdp(6464024);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->m_axis_rd_tdest.bind(*p_18_m_axis_rd_tdest);
        p_18_m_axis_rd_tdest->set_sv_netview_offsetfromdp(6464080);
        xsim_sc_channel<0, bool > *p_18_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axis_wr_tready.bind(*p_18_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->m_axis_wr_tdata.bind(*p_18_m_axis_wr_tdata);
        p_18_m_axis_wr_tdata->set_sv_netview_offsetfromdp(6464192);
        xsim_sc_channel<0, bool > *p_18_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axis_wr_tlast.bind(*p_18_m_axis_wr_tlast);
        p_18_m_axis_wr_tlast->set_sv_netview_offsetfromdp(6464248);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->m_axis_wr_tid.bind(*p_18_m_axis_wr_tid);
        p_18_m_axis_wr_tid->set_sv_netview_offsetfromdp(6464304);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->m_axis_wr_tdest.bind(*p_18_m_axis_wr_tdest);
        p_18_m_axis_wr_tdest->set_sv_netview_offsetfromdp(6464360);
        xsim_sc_channel<0, bool > *p_18_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axis_wr_tvalid.bind(*p_18_m_axis_wr_tvalid);
        p_18_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(6464416);
        xsim_sc_channel<0, bool > *p_18_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axis_rd_tvalid.bind(*p_18_m_axis_rd_tvalid);
        p_18_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(6464472);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->s_axi_awaddr_mon.bind(*p_18_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->s_axi_awprot_mon.bind(*p_18_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_18_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_awvalid_mon.bind(*p_18_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_18_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_awready_mon.bind(*p_18_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->s_axi_wdata_mon.bind(*p_18_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s_axi_wstrb_mon.bind(*p_18_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_18_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_wvalid_mon.bind(*p_18_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_18_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_wready_mon.bind(*p_18_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s_axi_bresp_mon.bind(*p_18_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_18_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_bvalid_mon.bind(*p_18_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_18_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_bready_mon.bind(*p_18_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->s_axi_araddr_mon.bind(*p_18_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->s_axi_arprot_mon.bind(*p_18_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_18_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_arvalid_mon.bind(*p_18_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_18_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_arready_mon.bind(*p_18_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->s_axi_rdata_mon.bind(*p_18_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s_axi_rresp_mon.bind(*p_18_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_18_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_rvalid_mon.bind(*p_18_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_18_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_rready_mon.bind(*p_18_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_rready_mon);
        sc_inst_19 = new pfm_dynamic_dpa_mon3_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_mon3");
        sc_inst_19->xsim_set_dbg_index(317);
        xsim_sc_channel<0, bool > *p_19_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_clk.bind(*p_19_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_clk);
        xsim_sc_channel<0, bool > *p_19_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_resetn.bind(*p_19_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_resetn);
        xsim_sc_channel<0, bool > *p_19_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_19->trace_clk.bind(*p_19_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_19_trace_clk);
        xsim_sc_channel<0, bool > *p_19_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_19->trace_rst.bind(*p_19_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_19_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->s_axi_awaddr.bind(*p_19_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_19_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_awvalid.bind(*p_19_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_19_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_awready.bind(*p_19_s_axi_awready);
        p_19_s_axi_awready->set_sv_netview_offsetfromdp(6465976);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->s_axi_wdata.bind(*p_19_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->s_axi_wstrb.bind(*p_19_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_19_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_wvalid.bind(*p_19_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_19_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_wready.bind(*p_19_s_axi_wready);
        p_19_s_axi_wready->set_sv_netview_offsetfromdp(6466200);
        xsim_sc_channel<0, bool > *p_19_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_bvalid.bind(*p_19_s_axi_bvalid);
        p_19_s_axi_bvalid->set_sv_netview_offsetfromdp(6466256);
        xsim_sc_channel<0, bool > *p_19_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_bready.bind(*p_19_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s_axi_bresp.bind(*p_19_s_axi_bresp);
        p_19_s_axi_bresp->set_sv_netview_offsetfromdp(6466368);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->s_axi_araddr.bind(*p_19_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_19_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_arvalid.bind(*p_19_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_19_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_arready.bind(*p_19_s_axi_arready);
        p_19_s_axi_arready->set_sv_netview_offsetfromdp(6466536);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->s_axi_rdata.bind(*p_19_s_axi_rdata);
        p_19_s_axi_rdata->set_sv_netview_offsetfromdp(6466592);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s_axi_rresp.bind(*p_19_s_axi_rresp);
        p_19_s_axi_rresp->set_sv_netview_offsetfromdp(6466648);
        xsim_sc_channel<0, bool > *p_19_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_rvalid.bind(*p_19_s_axi_rvalid);
        p_19_s_axi_rvalid->set_sv_netview_offsetfromdp(6466704);
        xsim_sc_channel<0, bool > *p_19_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_rready.bind(*p_19_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_rready);
        xsim_sc_channel<0, bool > *p_19_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_AWVALID.bind(*p_19_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_19_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_AWREADY.bind(*p_19_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->mon_AWADDR.bind(*p_19_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->mon_AWID.bind(*p_19_mon_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->mon_AWLEN.bind(*p_19_mon_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->mon_AWSIZE.bind(*p_19_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->mon_AWBURST.bind(*p_19_mon_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_19_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_WVALID.bind(*p_19_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_WVALID);
        xsim_sc_channel<0, bool > *p_19_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_WREADY.bind(*p_19_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_WREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_19_mon_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_19->mon_WDATA.bind(*p_19_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_WDATA);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_mon_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->mon_WSTRB.bind(*p_19_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_19_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_WLAST.bind(*p_19_mon_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_WLAST);
        xsim_sc_channel<0, bool > *p_19_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_ARVALID.bind(*p_19_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_19_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_ARREADY.bind(*p_19_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->mon_ARADDR.bind(*p_19_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->mon_ARID.bind(*p_19_mon_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->mon_ARLEN.bind(*p_19_mon_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->mon_ARSIZE.bind(*p_19_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->mon_ARBURST.bind(*p_19_mon_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_19_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_RVALID.bind(*p_19_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_RVALID);
        xsim_sc_channel<0, bool > *p_19_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_RREADY.bind(*p_19_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_RREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_19_mon_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_19->mon_RDATA.bind(*p_19_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_RDATA);
        xsim_sc_channel<0, bool > *p_19_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_RLAST.bind(*p_19_mon_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->mon_RID.bind(*p_19_mon_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->mon_RRESP.bind(*p_19_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_RRESP);
        xsim_sc_channel<0, bool > *p_19_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_BVALID.bind(*p_19_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_BVALID);
        xsim_sc_channel<0, bool > *p_19_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_BREADY.bind(*p_19_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->mon_BRESP.bind(*p_19_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->mon_BID.bind(*p_19_mon_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_BID);
        xsim_sc_channel<0, bool > *p_19_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axis_rd_tready.bind(*p_19_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->m_axis_rd_tdata.bind(*p_19_m_axis_rd_tdata);
        p_19_m_axis_rd_tdata->set_sv_netview_offsetfromdp(6468496);
        xsim_sc_channel<0, bool > *p_19_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axis_rd_tlast.bind(*p_19_m_axis_rd_tlast);
        p_19_m_axis_rd_tlast->set_sv_netview_offsetfromdp(6468552);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->m_axis_rd_tid.bind(*p_19_m_axis_rd_tid);
        p_19_m_axis_rd_tid->set_sv_netview_offsetfromdp(6468608);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->m_axis_rd_tdest.bind(*p_19_m_axis_rd_tdest);
        p_19_m_axis_rd_tdest->set_sv_netview_offsetfromdp(6468664);
        xsim_sc_channel<0, bool > *p_19_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axis_wr_tready.bind(*p_19_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->m_axis_wr_tdata.bind(*p_19_m_axis_wr_tdata);
        p_19_m_axis_wr_tdata->set_sv_netview_offsetfromdp(6468776);
        xsim_sc_channel<0, bool > *p_19_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axis_wr_tlast.bind(*p_19_m_axis_wr_tlast);
        p_19_m_axis_wr_tlast->set_sv_netview_offsetfromdp(6468832);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->m_axis_wr_tid.bind(*p_19_m_axis_wr_tid);
        p_19_m_axis_wr_tid->set_sv_netview_offsetfromdp(6468888);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->m_axis_wr_tdest.bind(*p_19_m_axis_wr_tdest);
        p_19_m_axis_wr_tdest->set_sv_netview_offsetfromdp(6468944);
        xsim_sc_channel<0, bool > *p_19_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axis_wr_tvalid.bind(*p_19_m_axis_wr_tvalid);
        p_19_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(6469000);
        xsim_sc_channel<0, bool > *p_19_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axis_rd_tvalid.bind(*p_19_m_axis_rd_tvalid);
        p_19_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(6469056);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->s_axi_awaddr_mon.bind(*p_19_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->s_axi_awprot_mon.bind(*p_19_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_19_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_awvalid_mon.bind(*p_19_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_19_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_awready_mon.bind(*p_19_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->s_axi_wdata_mon.bind(*p_19_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->s_axi_wstrb_mon.bind(*p_19_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_19_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_wvalid_mon.bind(*p_19_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_19_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_wready_mon.bind(*p_19_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s_axi_bresp_mon.bind(*p_19_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_19_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_bvalid_mon.bind(*p_19_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_19_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_bready_mon.bind(*p_19_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->s_axi_araddr_mon.bind(*p_19_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->s_axi_arprot_mon.bind(*p_19_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_19_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_arvalid_mon.bind(*p_19_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_19_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_arready_mon.bind(*p_19_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->s_axi_rdata_mon.bind(*p_19_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s_axi_rresp_mon.bind(*p_19_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_19_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_rvalid_mon.bind(*p_19_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_19_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_rready_mon.bind(*p_19_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_rready_mon);
        sc_inst_20 = new bd_5dca_sci(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.bd_5dca_sci_inst");
        sc_inst_20->xsim_set_dbg_index(857);
        sc_inst_21 = new bd_5dca_hbm_inst_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.hbm_inst");
        sc_inst_21->xsim_set_dbg_index(858);
        xsim_sc_channel<0, bool > *p_21_HBM_REF_CLK_0 = new xsim_sc_channel<0, bool >();
        sc_inst_21->HBM_REF_CLK_0.bind(*p_21_HBM_REF_CLK_0);
        (*_glb_hdl_sc_channel_map).push_back(p_21_HBM_REF_CLK_0);
        xsim_sc_channel<0, bool > *p_21_AXI_00_ACLK = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_00_ACLK.bind(*p_21_AXI_00_ACLK);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_ACLK);
        xsim_sc_channel<0, bool > *p_21_AXI_00_ARESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_00_ARESET_N.bind(*p_21_AXI_00_ARESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_ARESET_N);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_21_AXI_00_ARADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_21->AXI_00_ARADDR.bind(*p_21_AXI_00_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_ARADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_00_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_00_ARBURST.bind(*p_21_AXI_00_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_ARBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_00_ARID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_00_ARID.bind(*p_21_AXI_00_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_ARID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_AXI_00_ARLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->AXI_00_ARLEN.bind(*p_21_AXI_00_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_AXI_00_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->AXI_00_ARSIZE.bind(*p_21_AXI_00_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_ARSIZE);
        xsim_sc_channel<0, bool > *p_21_AXI_00_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_00_ARVALID.bind(*p_21_AXI_00_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_ARVALID);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_21_AXI_00_AWADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_21->AXI_00_AWADDR.bind(*p_21_AXI_00_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_AWADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_00_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_00_AWBURST.bind(*p_21_AXI_00_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_AWBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_00_AWID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_00_AWID.bind(*p_21_AXI_00_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_AWID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_AXI_00_AWLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->AXI_00_AWLEN.bind(*p_21_AXI_00_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_AXI_00_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->AXI_00_AWSIZE.bind(*p_21_AXI_00_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_AWSIZE);
        xsim_sc_channel<0, bool > *p_21_AXI_00_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_00_AWVALID.bind(*p_21_AXI_00_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_AWVALID);
        xsim_sc_channel<0, bool > *p_21_AXI_00_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_00_RREADY.bind(*p_21_AXI_00_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_RREADY);
        xsim_sc_channel<0, bool > *p_21_AXI_00_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_00_BREADY.bind(*p_21_AXI_00_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_BREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_21_AXI_00_WDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_21->AXI_00_WDATA.bind(*p_21_AXI_00_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_WDATA);
        xsim_sc_channel<0, bool > *p_21_AXI_00_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_00_WLAST.bind(*p_21_AXI_00_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_WLAST);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_AXI_00_WSTRB = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->AXI_00_WSTRB.bind(*p_21_AXI_00_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_WSTRB);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_AXI_00_WDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->AXI_00_WDATA_PARITY.bind(*p_21_AXI_00_WDATA_PARITY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_WDATA_PARITY);
        xsim_sc_channel<0, bool > *p_21_AXI_00_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_00_WVALID.bind(*p_21_AXI_00_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_WVALID);
        xsim_sc_channel<0, bool > *p_21_AXI_01_ACLK = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_01_ACLK.bind(*p_21_AXI_01_ACLK);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_01_ACLK);
        xsim_sc_channel<0, bool > *p_21_AXI_01_ARESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_01_ARESET_N.bind(*p_21_AXI_01_ARESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_01_ARESET_N);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_21_AXI_01_ARADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_21->AXI_01_ARADDR.bind(*p_21_AXI_01_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_01_ARADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_01_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_01_ARBURST.bind(*p_21_AXI_01_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_01_ARBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_01_ARID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_01_ARID.bind(*p_21_AXI_01_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_01_ARID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_AXI_01_ARLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->AXI_01_ARLEN.bind(*p_21_AXI_01_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_01_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_AXI_01_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->AXI_01_ARSIZE.bind(*p_21_AXI_01_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_01_ARSIZE);
        xsim_sc_channel<0, bool > *p_21_AXI_01_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_01_ARVALID.bind(*p_21_AXI_01_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_01_ARVALID);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_21_AXI_01_AWADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_21->AXI_01_AWADDR.bind(*p_21_AXI_01_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_01_AWADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_01_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_01_AWBURST.bind(*p_21_AXI_01_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_01_AWBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_01_AWID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_01_AWID.bind(*p_21_AXI_01_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_01_AWID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_AXI_01_AWLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->AXI_01_AWLEN.bind(*p_21_AXI_01_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_01_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_AXI_01_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->AXI_01_AWSIZE.bind(*p_21_AXI_01_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_01_AWSIZE);
        xsim_sc_channel<0, bool > *p_21_AXI_01_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_01_AWVALID.bind(*p_21_AXI_01_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_01_AWVALID);
        xsim_sc_channel<0, bool > *p_21_AXI_01_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_01_RREADY.bind(*p_21_AXI_01_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_01_RREADY);
        xsim_sc_channel<0, bool > *p_21_AXI_01_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_01_BREADY.bind(*p_21_AXI_01_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_01_BREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_21_AXI_01_WDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_21->AXI_01_WDATA.bind(*p_21_AXI_01_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_01_WDATA);
        xsim_sc_channel<0, bool > *p_21_AXI_01_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_01_WLAST.bind(*p_21_AXI_01_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_01_WLAST);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_AXI_01_WSTRB = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->AXI_01_WSTRB.bind(*p_21_AXI_01_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_01_WSTRB);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_AXI_01_WDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->AXI_01_WDATA_PARITY.bind(*p_21_AXI_01_WDATA_PARITY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_01_WDATA_PARITY);
        xsim_sc_channel<0, bool > *p_21_AXI_01_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_01_WVALID.bind(*p_21_AXI_01_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_01_WVALID);
        xsim_sc_channel<0, bool > *p_21_AXI_02_ACLK = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_02_ACLK.bind(*p_21_AXI_02_ACLK);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_02_ACLK);
        xsim_sc_channel<0, bool > *p_21_AXI_02_ARESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_02_ARESET_N.bind(*p_21_AXI_02_ARESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_02_ARESET_N);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_21_AXI_02_ARADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_21->AXI_02_ARADDR.bind(*p_21_AXI_02_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_02_ARADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_02_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_02_ARBURST.bind(*p_21_AXI_02_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_02_ARBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_02_ARID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_02_ARID.bind(*p_21_AXI_02_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_02_ARID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_AXI_02_ARLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->AXI_02_ARLEN.bind(*p_21_AXI_02_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_02_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_AXI_02_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->AXI_02_ARSIZE.bind(*p_21_AXI_02_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_02_ARSIZE);
        xsim_sc_channel<0, bool > *p_21_AXI_02_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_02_ARVALID.bind(*p_21_AXI_02_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_02_ARVALID);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_21_AXI_02_AWADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_21->AXI_02_AWADDR.bind(*p_21_AXI_02_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_02_AWADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_02_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_02_AWBURST.bind(*p_21_AXI_02_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_02_AWBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_02_AWID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_02_AWID.bind(*p_21_AXI_02_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_02_AWID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_AXI_02_AWLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->AXI_02_AWLEN.bind(*p_21_AXI_02_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_02_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_AXI_02_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->AXI_02_AWSIZE.bind(*p_21_AXI_02_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_02_AWSIZE);
        xsim_sc_channel<0, bool > *p_21_AXI_02_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_02_AWVALID.bind(*p_21_AXI_02_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_02_AWVALID);
        xsim_sc_channel<0, bool > *p_21_AXI_02_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_02_RREADY.bind(*p_21_AXI_02_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_02_RREADY);
        xsim_sc_channel<0, bool > *p_21_AXI_02_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_02_BREADY.bind(*p_21_AXI_02_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_02_BREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_21_AXI_02_WDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_21->AXI_02_WDATA.bind(*p_21_AXI_02_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_02_WDATA);
        xsim_sc_channel<0, bool > *p_21_AXI_02_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_02_WLAST.bind(*p_21_AXI_02_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_02_WLAST);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_AXI_02_WSTRB = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->AXI_02_WSTRB.bind(*p_21_AXI_02_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_02_WSTRB);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_AXI_02_WDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->AXI_02_WDATA_PARITY.bind(*p_21_AXI_02_WDATA_PARITY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_02_WDATA_PARITY);
        xsim_sc_channel<0, bool > *p_21_AXI_02_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_02_WVALID.bind(*p_21_AXI_02_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_02_WVALID);
        xsim_sc_channel<0, bool > *p_21_AXI_03_ACLK = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_03_ACLK.bind(*p_21_AXI_03_ACLK);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_03_ACLK);
        xsim_sc_channel<0, bool > *p_21_AXI_03_ARESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_03_ARESET_N.bind(*p_21_AXI_03_ARESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_03_ARESET_N);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_21_AXI_03_ARADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_21->AXI_03_ARADDR.bind(*p_21_AXI_03_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_03_ARADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_03_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_03_ARBURST.bind(*p_21_AXI_03_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_03_ARBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_03_ARID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_03_ARID.bind(*p_21_AXI_03_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_03_ARID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_AXI_03_ARLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->AXI_03_ARLEN.bind(*p_21_AXI_03_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_03_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_AXI_03_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->AXI_03_ARSIZE.bind(*p_21_AXI_03_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_03_ARSIZE);
        xsim_sc_channel<0, bool > *p_21_AXI_03_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_03_ARVALID.bind(*p_21_AXI_03_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_03_ARVALID);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_21_AXI_03_AWADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_21->AXI_03_AWADDR.bind(*p_21_AXI_03_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_03_AWADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_03_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_03_AWBURST.bind(*p_21_AXI_03_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_03_AWBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_03_AWID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_03_AWID.bind(*p_21_AXI_03_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_03_AWID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_AXI_03_AWLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->AXI_03_AWLEN.bind(*p_21_AXI_03_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_03_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_AXI_03_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->AXI_03_AWSIZE.bind(*p_21_AXI_03_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_03_AWSIZE);
        xsim_sc_channel<0, bool > *p_21_AXI_03_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_03_AWVALID.bind(*p_21_AXI_03_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_03_AWVALID);
        xsim_sc_channel<0, bool > *p_21_AXI_03_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_03_RREADY.bind(*p_21_AXI_03_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_03_RREADY);
        xsim_sc_channel<0, bool > *p_21_AXI_03_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_03_BREADY.bind(*p_21_AXI_03_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_03_BREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_21_AXI_03_WDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_21->AXI_03_WDATA.bind(*p_21_AXI_03_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_03_WDATA);
        xsim_sc_channel<0, bool > *p_21_AXI_03_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_03_WLAST.bind(*p_21_AXI_03_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_03_WLAST);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_AXI_03_WSTRB = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->AXI_03_WSTRB.bind(*p_21_AXI_03_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_03_WSTRB);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_AXI_03_WDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->AXI_03_WDATA_PARITY.bind(*p_21_AXI_03_WDATA_PARITY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_03_WDATA_PARITY);
        xsim_sc_channel<0, bool > *p_21_AXI_03_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_03_WVALID.bind(*p_21_AXI_03_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_03_WVALID);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_APB_0_PWDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->APB_0_PWDATA.bind(*p_21_APB_0_PWDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_21_APB_0_PWDATA);
        xsim_sc_channel<22, sc_dt::sc_bv<22> > *p_21_APB_0_PADDR = new xsim_sc_channel<22, sc_dt::sc_bv<22> >();
        sc_inst_21->APB_0_PADDR.bind(*p_21_APB_0_PADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_21_APB_0_PADDR);
        xsim_sc_channel<0, bool > *p_21_APB_0_PCLK = new xsim_sc_channel<0, bool >();
        sc_inst_21->APB_0_PCLK.bind(*p_21_APB_0_PCLK);
        (*_glb_hdl_sc_channel_map).push_back(p_21_APB_0_PCLK);
        xsim_sc_channel<0, bool > *p_21_APB_0_PENABLE = new xsim_sc_channel<0, bool >();
        sc_inst_21->APB_0_PENABLE.bind(*p_21_APB_0_PENABLE);
        (*_glb_hdl_sc_channel_map).push_back(p_21_APB_0_PENABLE);
        xsim_sc_channel<0, bool > *p_21_APB_0_PRESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_21->APB_0_PRESET_N.bind(*p_21_APB_0_PRESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_21_APB_0_PRESET_N);
        xsim_sc_channel<0, bool > *p_21_APB_0_PSEL = new xsim_sc_channel<0, bool >();
        sc_inst_21->APB_0_PSEL.bind(*p_21_APB_0_PSEL);
        (*_glb_hdl_sc_channel_map).push_back(p_21_APB_0_PSEL);
        xsim_sc_channel<0, bool > *p_21_APB_0_PWRITE = new xsim_sc_channel<0, bool >();
        sc_inst_21->APB_0_PWRITE.bind(*p_21_APB_0_PWRITE);
        (*_glb_hdl_sc_channel_map).push_back(p_21_APB_0_PWRITE);
        xsim_sc_channel<0, bool > *p_21_AXI_00_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_00_ARREADY.bind(*p_21_AXI_00_ARREADY);
        p_21_AXI_00_ARREADY->set_sv_netview_offsetfromdp(6666616);
        xsim_sc_channel<0, bool > *p_21_AXI_00_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_00_AWREADY.bind(*p_21_AXI_00_AWREADY);
        p_21_AXI_00_AWREADY->set_sv_netview_offsetfromdp(6666672);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_AXI_00_RDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->AXI_00_RDATA_PARITY.bind(*p_21_AXI_00_RDATA_PARITY);
        p_21_AXI_00_RDATA_PARITY->set_sv_netview_offsetfromdp(6666728);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_21_AXI_00_RDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_21->AXI_00_RDATA.bind(*p_21_AXI_00_RDATA);
        p_21_AXI_00_RDATA->set_sv_netview_offsetfromdp(6666784);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_00_RID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_00_RID.bind(*p_21_AXI_00_RID);
        p_21_AXI_00_RID->set_sv_netview_offsetfromdp(6666840);
        xsim_sc_channel<0, bool > *p_21_AXI_00_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_00_RLAST.bind(*p_21_AXI_00_RLAST);
        p_21_AXI_00_RLAST->set_sv_netview_offsetfromdp(6666896);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_00_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_00_RRESP.bind(*p_21_AXI_00_RRESP);
        p_21_AXI_00_RRESP->set_sv_netview_offsetfromdp(6666952);
        xsim_sc_channel<0, bool > *p_21_AXI_00_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_00_RVALID.bind(*p_21_AXI_00_RVALID);
        p_21_AXI_00_RVALID->set_sv_netview_offsetfromdp(6667008);
        xsim_sc_channel<0, bool > *p_21_AXI_00_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_00_WREADY.bind(*p_21_AXI_00_WREADY);
        p_21_AXI_00_WREADY->set_sv_netview_offsetfromdp(6667064);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_00_BID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_00_BID.bind(*p_21_AXI_00_BID);
        p_21_AXI_00_BID->set_sv_netview_offsetfromdp(6667120);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_00_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_00_BRESP.bind(*p_21_AXI_00_BRESP);
        p_21_AXI_00_BRESP->set_sv_netview_offsetfromdp(6667176);
        xsim_sc_channel<0, bool > *p_21_AXI_00_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_00_BVALID.bind(*p_21_AXI_00_BVALID);
        p_21_AXI_00_BVALID->set_sv_netview_offsetfromdp(6667232);
        xsim_sc_channel<0, bool > *p_21_AXI_01_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_01_ARREADY.bind(*p_21_AXI_01_ARREADY);
        p_21_AXI_01_ARREADY->set_sv_netview_offsetfromdp(6667288);
        xsim_sc_channel<0, bool > *p_21_AXI_01_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_01_AWREADY.bind(*p_21_AXI_01_AWREADY);
        p_21_AXI_01_AWREADY->set_sv_netview_offsetfromdp(6667344);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_AXI_01_RDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->AXI_01_RDATA_PARITY.bind(*p_21_AXI_01_RDATA_PARITY);
        p_21_AXI_01_RDATA_PARITY->set_sv_netview_offsetfromdp(6667400);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_21_AXI_01_RDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_21->AXI_01_RDATA.bind(*p_21_AXI_01_RDATA);
        p_21_AXI_01_RDATA->set_sv_netview_offsetfromdp(6667456);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_01_RID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_01_RID.bind(*p_21_AXI_01_RID);
        p_21_AXI_01_RID->set_sv_netview_offsetfromdp(6667512);
        xsim_sc_channel<0, bool > *p_21_AXI_01_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_01_RLAST.bind(*p_21_AXI_01_RLAST);
        p_21_AXI_01_RLAST->set_sv_netview_offsetfromdp(6667568);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_01_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_01_RRESP.bind(*p_21_AXI_01_RRESP);
        p_21_AXI_01_RRESP->set_sv_netview_offsetfromdp(6667624);
        xsim_sc_channel<0, bool > *p_21_AXI_01_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_01_RVALID.bind(*p_21_AXI_01_RVALID);
        p_21_AXI_01_RVALID->set_sv_netview_offsetfromdp(6667680);
        xsim_sc_channel<0, bool > *p_21_AXI_01_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_01_WREADY.bind(*p_21_AXI_01_WREADY);
        p_21_AXI_01_WREADY->set_sv_netview_offsetfromdp(6667736);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_01_BID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_01_BID.bind(*p_21_AXI_01_BID);
        p_21_AXI_01_BID->set_sv_netview_offsetfromdp(6667792);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_01_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_01_BRESP.bind(*p_21_AXI_01_BRESP);
        p_21_AXI_01_BRESP->set_sv_netview_offsetfromdp(6667848);
        xsim_sc_channel<0, bool > *p_21_AXI_01_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_01_BVALID.bind(*p_21_AXI_01_BVALID);
        p_21_AXI_01_BVALID->set_sv_netview_offsetfromdp(6667904);
        xsim_sc_channel<0, bool > *p_21_AXI_02_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_02_ARREADY.bind(*p_21_AXI_02_ARREADY);
        p_21_AXI_02_ARREADY->set_sv_netview_offsetfromdp(6667960);
        xsim_sc_channel<0, bool > *p_21_AXI_02_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_02_AWREADY.bind(*p_21_AXI_02_AWREADY);
        p_21_AXI_02_AWREADY->set_sv_netview_offsetfromdp(6668016);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_AXI_02_RDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->AXI_02_RDATA_PARITY.bind(*p_21_AXI_02_RDATA_PARITY);
        p_21_AXI_02_RDATA_PARITY->set_sv_netview_offsetfromdp(6668072);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_21_AXI_02_RDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_21->AXI_02_RDATA.bind(*p_21_AXI_02_RDATA);
        p_21_AXI_02_RDATA->set_sv_netview_offsetfromdp(6668128);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_02_RID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_02_RID.bind(*p_21_AXI_02_RID);
        p_21_AXI_02_RID->set_sv_netview_offsetfromdp(6668184);
        xsim_sc_channel<0, bool > *p_21_AXI_02_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_02_RLAST.bind(*p_21_AXI_02_RLAST);
        p_21_AXI_02_RLAST->set_sv_netview_offsetfromdp(6668240);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_02_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_02_RRESP.bind(*p_21_AXI_02_RRESP);
        p_21_AXI_02_RRESP->set_sv_netview_offsetfromdp(6668296);
        xsim_sc_channel<0, bool > *p_21_AXI_02_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_02_RVALID.bind(*p_21_AXI_02_RVALID);
        p_21_AXI_02_RVALID->set_sv_netview_offsetfromdp(6668352);
        xsim_sc_channel<0, bool > *p_21_AXI_02_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_02_WREADY.bind(*p_21_AXI_02_WREADY);
        p_21_AXI_02_WREADY->set_sv_netview_offsetfromdp(6668408);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_02_BID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_02_BID.bind(*p_21_AXI_02_BID);
        p_21_AXI_02_BID->set_sv_netview_offsetfromdp(6668464);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_02_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_02_BRESP.bind(*p_21_AXI_02_BRESP);
        p_21_AXI_02_BRESP->set_sv_netview_offsetfromdp(6668520);
        xsim_sc_channel<0, bool > *p_21_AXI_02_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_02_BVALID.bind(*p_21_AXI_02_BVALID);
        p_21_AXI_02_BVALID->set_sv_netview_offsetfromdp(6668576);
        xsim_sc_channel<0, bool > *p_21_AXI_03_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_03_ARREADY.bind(*p_21_AXI_03_ARREADY);
        p_21_AXI_03_ARREADY->set_sv_netview_offsetfromdp(6668632);
        xsim_sc_channel<0, bool > *p_21_AXI_03_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_03_AWREADY.bind(*p_21_AXI_03_AWREADY);
        p_21_AXI_03_AWREADY->set_sv_netview_offsetfromdp(6668688);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_AXI_03_RDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->AXI_03_RDATA_PARITY.bind(*p_21_AXI_03_RDATA_PARITY);
        p_21_AXI_03_RDATA_PARITY->set_sv_netview_offsetfromdp(6668744);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_21_AXI_03_RDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_21->AXI_03_RDATA.bind(*p_21_AXI_03_RDATA);
        p_21_AXI_03_RDATA->set_sv_netview_offsetfromdp(6668800);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_03_RID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_03_RID.bind(*p_21_AXI_03_RID);
        p_21_AXI_03_RID->set_sv_netview_offsetfromdp(6668856);
        xsim_sc_channel<0, bool > *p_21_AXI_03_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_03_RLAST.bind(*p_21_AXI_03_RLAST);
        p_21_AXI_03_RLAST->set_sv_netview_offsetfromdp(6668912);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_03_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_03_RRESP.bind(*p_21_AXI_03_RRESP);
        p_21_AXI_03_RRESP->set_sv_netview_offsetfromdp(6668968);
        xsim_sc_channel<0, bool > *p_21_AXI_03_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_03_RVALID.bind(*p_21_AXI_03_RVALID);
        p_21_AXI_03_RVALID->set_sv_netview_offsetfromdp(6669024);
        xsim_sc_channel<0, bool > *p_21_AXI_03_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_03_WREADY.bind(*p_21_AXI_03_WREADY);
        p_21_AXI_03_WREADY->set_sv_netview_offsetfromdp(6669080);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_03_BID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_03_BID.bind(*p_21_AXI_03_BID);
        p_21_AXI_03_BID->set_sv_netview_offsetfromdp(6669136);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_03_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_03_BRESP.bind(*p_21_AXI_03_BRESP);
        p_21_AXI_03_BRESP->set_sv_netview_offsetfromdp(6669192);
        xsim_sc_channel<0, bool > *p_21_AXI_03_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_03_BVALID.bind(*p_21_AXI_03_BVALID);
        p_21_AXI_03_BVALID->set_sv_netview_offsetfromdp(6669248);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_APB_0_PRDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->APB_0_PRDATA.bind(*p_21_APB_0_PRDATA);
        p_21_APB_0_PRDATA->set_sv_netview_offsetfromdp(6669304);
        xsim_sc_channel<0, bool > *p_21_APB_0_PREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->APB_0_PREADY.bind(*p_21_APB_0_PREADY);
        p_21_APB_0_PREADY->set_sv_netview_offsetfromdp(6669360);
        xsim_sc_channel<0, bool > *p_21_APB_0_PSLVERR = new xsim_sc_channel<0, bool >();
        sc_inst_21->APB_0_PSLVERR.bind(*p_21_APB_0_PSLVERR);
        p_21_APB_0_PSLVERR->set_sv_netview_offsetfromdp(6669416);
        xsim_sc_channel<0, bool > *p_21_apb_complete_0 = new xsim_sc_channel<0, bool >();
        sc_inst_21->apb_complete_0.bind(*p_21_apb_complete_0);
        p_21_apb_complete_0->set_sv_netview_offsetfromdp(6669472);
        xsim_sc_channel<0, bool > *p_21_DRAM_0_STAT_CATTRIP = new xsim_sc_channel<0, bool >();
        sc_inst_21->DRAM_0_STAT_CATTRIP.bind(*p_21_DRAM_0_STAT_CATTRIP);
        p_21_DRAM_0_STAT_CATTRIP->set_sv_netview_offsetfromdp(6669528);
        xsim_sc_channel<7, sc_dt::sc_bv<7> > *p_21_DRAM_0_STAT_TEMP = new xsim_sc_channel<7, sc_dt::sc_bv<7> >();
        sc_inst_21->DRAM_0_STAT_TEMP.bind(*p_21_DRAM_0_STAT_TEMP);
        p_21_DRAM_0_STAT_TEMP->set_sv_netview_offsetfromdp(6669584);
        sc_inst_22 = new bd_5dca_interconnect1_0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_0.interconnect1_0");
        sc_inst_22->xsim_set_dbg_index(2104);
        xsim_sc_channel<0, bool > *p_22_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_22->aclk.bind(*p_22_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_22_aclk);
        xsim_sc_channel<0, bool > *p_22_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_22->aclk1.bind(*p_22_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_22_aclk1);
        xsim_sc_channel<0, bool > *p_22_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_22->aresetn.bind(*p_22_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_22_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_22_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_22->S00_AXI_araddr.bind(*p_22_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_22_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_22->S00_AXI_arlen.bind(*p_22_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->S00_AXI_arsize.bind(*p_22_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->S00_AXI_arburst.bind(*p_22_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->S00_AXI_arlock.bind(*p_22_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->S00_AXI_arcache.bind(*p_22_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->S00_AXI_arprot.bind(*p_22_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->S00_AXI_arqos.bind(*p_22_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_22_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->S00_AXI_arvalid.bind(*p_22_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_22_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_22->S00_AXI_arready.bind(*p_22_S00_AXI_arready);
        p_22_S00_AXI_arready->set_sv_netview_offsetfromdp(6843928);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->S00_AXI_rdata.bind(*p_22_S00_AXI_rdata);
        p_22_S00_AXI_rdata->set_sv_netview_offsetfromdp(6843984);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->S00_AXI_rresp.bind(*p_22_S00_AXI_rresp);
        p_22_S00_AXI_rresp->set_sv_netview_offsetfromdp(6844040);
        xsim_sc_channel<0, bool > *p_22_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_22->S00_AXI_rlast.bind(*p_22_S00_AXI_rlast);
        p_22_S00_AXI_rlast->set_sv_netview_offsetfromdp(6844096);
        xsim_sc_channel<0, bool > *p_22_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->S00_AXI_rvalid.bind(*p_22_S00_AXI_rvalid);
        p_22_S00_AXI_rvalid->set_sv_netview_offsetfromdp(6844152);
        xsim_sc_channel<0, bool > *p_22_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_22->S00_AXI_rready.bind(*p_22_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_22_M00_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_22->M00_AXI_araddr.bind(*p_22_M00_AXI_araddr);
        p_22_M00_AXI_araddr->set_sv_netview_offsetfromdp(6844264);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_M00_AXI_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->M00_AXI_arlen.bind(*p_22_M00_AXI_arlen);
        p_22_M00_AXI_arlen->set_sv_netview_offsetfromdp(6844320);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->M00_AXI_arsize.bind(*p_22_M00_AXI_arsize);
        p_22_M00_AXI_arsize->set_sv_netview_offsetfromdp(6844376);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->M00_AXI_arburst.bind(*p_22_M00_AXI_arburst);
        p_22_M00_AXI_arburst->set_sv_netview_offsetfromdp(6844432);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_M00_AXI_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->M00_AXI_arlock.bind(*p_22_M00_AXI_arlock);
        p_22_M00_AXI_arlock->set_sv_netview_offsetfromdp(6844488);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->M00_AXI_arcache.bind(*p_22_M00_AXI_arcache);
        p_22_M00_AXI_arcache->set_sv_netview_offsetfromdp(6844544);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->M00_AXI_arprot.bind(*p_22_M00_AXI_arprot);
        p_22_M00_AXI_arprot->set_sv_netview_offsetfromdp(6844600);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->M00_AXI_arqos.bind(*p_22_M00_AXI_arqos);
        p_22_M00_AXI_arqos->set_sv_netview_offsetfromdp(6844656);
        xsim_sc_channel<0, bool > *p_22_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->M00_AXI_arvalid.bind(*p_22_M00_AXI_arvalid);
        p_22_M00_AXI_arvalid->set_sv_netview_offsetfromdp(6844712);
        xsim_sc_channel<0, bool > *p_22_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_22->M00_AXI_arready.bind(*p_22_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_M00_AXI_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_22_M00_AXI_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_22->M00_AXI_rdata.bind(*p_22_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_22_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->M00_AXI_rresp.bind(*p_22_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_22_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_22_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_22->M00_AXI_rlast.bind(*p_22_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_22_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_22_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->M00_AXI_rvalid.bind(*p_22_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_22_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_22->M00_AXI_rready.bind(*p_22_M00_AXI_rready);
        p_22_M00_AXI_rready->set_sv_netview_offsetfromdp(6845048);
        sc_inst_23 = new bd_5dca_slice1_0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_0.slice1_0");
        sc_inst_23->xsim_set_dbg_index(2105);
        xsim_sc_channel<0, bool > *p_23_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_23->aclk.bind(*p_23_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_23_aclk);
        xsim_sc_channel<0, bool > *p_23_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_23->aresetn.bind(*p_23_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_23_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_23_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_23->s_axi_awaddr.bind(*p_23_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_axi_awlen.bind(*p_23_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->s_axi_awsize.bind(*p_23_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_axi_awburst.bind(*p_23_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_axi_awlock.bind(*p_23_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_axi_awcache.bind(*p_23_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->s_axi_awprot.bind(*p_23_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_axi_awqos.bind(*p_23_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_23_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_awvalid.bind(*p_23_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_23_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_awready.bind(*p_23_s_axi_awready);
        p_23_s_axi_awready->set_sv_netview_offsetfromdp(6845768);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_23_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_23->s_axi_wdata.bind(*p_23_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->s_axi_wstrb.bind(*p_23_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_23_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_wlast.bind(*p_23_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_23_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_wvalid.bind(*p_23_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_23_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_wready.bind(*p_23_s_axi_wready);
        p_23_s_axi_wready->set_sv_netview_offsetfromdp(6846048);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_axi_bresp.bind(*p_23_s_axi_bresp);
        p_23_s_axi_bresp->set_sv_netview_offsetfromdp(6846104);
        xsim_sc_channel<0, bool > *p_23_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_bvalid.bind(*p_23_s_axi_bvalid);
        p_23_s_axi_bvalid->set_sv_netview_offsetfromdp(6846160);
        xsim_sc_channel<0, bool > *p_23_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_bready.bind(*p_23_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_23_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_23->s_axi_araddr.bind(*p_23_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_axi_arlen.bind(*p_23_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->s_axi_arsize.bind(*p_23_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_axi_arburst.bind(*p_23_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_axi_arlock.bind(*p_23_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_axi_arcache.bind(*p_23_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->s_axi_arprot.bind(*p_23_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_axi_arqos.bind(*p_23_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_23_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_arvalid.bind(*p_23_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_23_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_arready.bind(*p_23_s_axi_arready);
        p_23_s_axi_arready->set_sv_netview_offsetfromdp(6846776);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_23_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_23->s_axi_rdata.bind(*p_23_s_axi_rdata);
        p_23_s_axi_rdata->set_sv_netview_offsetfromdp(6846832);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_axi_rresp.bind(*p_23_s_axi_rresp);
        p_23_s_axi_rresp->set_sv_netview_offsetfromdp(6846888);
        xsim_sc_channel<0, bool > *p_23_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_rlast.bind(*p_23_s_axi_rlast);
        p_23_s_axi_rlast->set_sv_netview_offsetfromdp(6846944);
        xsim_sc_channel<0, bool > *p_23_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_rvalid.bind(*p_23_s_axi_rvalid);
        p_23_s_axi_rvalid->set_sv_netview_offsetfromdp(6847000);
        xsim_sc_channel<0, bool > *p_23_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_rready.bind(*p_23_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_23_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_23->m_axi_awaddr.bind(*p_23_m_axi_awaddr);
        p_23_m_axi_awaddr->set_sv_netview_offsetfromdp(6847112);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_axi_awlen.bind(*p_23_m_axi_awlen);
        p_23_m_axi_awlen->set_sv_netview_offsetfromdp(6847168);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->m_axi_awsize.bind(*p_23_m_axi_awsize);
        p_23_m_axi_awsize->set_sv_netview_offsetfromdp(6847224);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_axi_awburst.bind(*p_23_m_axi_awburst);
        p_23_m_axi_awburst->set_sv_netview_offsetfromdp(6847280);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_axi_awlock.bind(*p_23_m_axi_awlock);
        p_23_m_axi_awlock->set_sv_netview_offsetfromdp(6847336);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_axi_awcache.bind(*p_23_m_axi_awcache);
        p_23_m_axi_awcache->set_sv_netview_offsetfromdp(6847392);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->m_axi_awprot.bind(*p_23_m_axi_awprot);
        p_23_m_axi_awprot->set_sv_netview_offsetfromdp(6847448);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_axi_awqos.bind(*p_23_m_axi_awqos);
        p_23_m_axi_awqos->set_sv_netview_offsetfromdp(6847504);
        xsim_sc_channel<0, bool > *p_23_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_awvalid.bind(*p_23_m_axi_awvalid);
        p_23_m_axi_awvalid->set_sv_netview_offsetfromdp(6847560);
        xsim_sc_channel<0, bool > *p_23_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_awready.bind(*p_23_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_23_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_23->m_axi_wdata.bind(*p_23_m_axi_wdata);
        p_23_m_axi_wdata->set_sv_netview_offsetfromdp(6847672);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->m_axi_wstrb.bind(*p_23_m_axi_wstrb);
        p_23_m_axi_wstrb->set_sv_netview_offsetfromdp(6847728);
        xsim_sc_channel<0, bool > *p_23_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_wlast.bind(*p_23_m_axi_wlast);
        p_23_m_axi_wlast->set_sv_netview_offsetfromdp(6847784);
        xsim_sc_channel<0, bool > *p_23_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_wvalid.bind(*p_23_m_axi_wvalid);
        p_23_m_axi_wvalid->set_sv_netview_offsetfromdp(6847840);
        xsim_sc_channel<0, bool > *p_23_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_wready.bind(*p_23_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_axi_bresp.bind(*p_23_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_23_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_bvalid.bind(*p_23_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_23_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_bready.bind(*p_23_m_axi_bready);
        p_23_m_axi_bready->set_sv_netview_offsetfromdp(6848064);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_23_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_23->m_axi_araddr.bind(*p_23_m_axi_araddr);
        p_23_m_axi_araddr->set_sv_netview_offsetfromdp(6848120);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_axi_arlen.bind(*p_23_m_axi_arlen);
        p_23_m_axi_arlen->set_sv_netview_offsetfromdp(6848176);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->m_axi_arsize.bind(*p_23_m_axi_arsize);
        p_23_m_axi_arsize->set_sv_netview_offsetfromdp(6848232);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_axi_arburst.bind(*p_23_m_axi_arburst);
        p_23_m_axi_arburst->set_sv_netview_offsetfromdp(6848288);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_axi_arlock.bind(*p_23_m_axi_arlock);
        p_23_m_axi_arlock->set_sv_netview_offsetfromdp(6848344);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_axi_arcache.bind(*p_23_m_axi_arcache);
        p_23_m_axi_arcache->set_sv_netview_offsetfromdp(6848400);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->m_axi_arprot.bind(*p_23_m_axi_arprot);
        p_23_m_axi_arprot->set_sv_netview_offsetfromdp(6848456);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_axi_arqos.bind(*p_23_m_axi_arqos);
        p_23_m_axi_arqos->set_sv_netview_offsetfromdp(6848512);
        xsim_sc_channel<0, bool > *p_23_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_arvalid.bind(*p_23_m_axi_arvalid);
        p_23_m_axi_arvalid->set_sv_netview_offsetfromdp(6848568);
        xsim_sc_channel<0, bool > *p_23_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_arready.bind(*p_23_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_23_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_23->m_axi_rdata.bind(*p_23_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_axi_rresp.bind(*p_23_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_23_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_rlast.bind(*p_23_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_23_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_rvalid.bind(*p_23_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_23_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_rready.bind(*p_23_m_axi_rready);
        p_23_m_axi_rready->set_sv_netview_offsetfromdp(6848904);
        sc_inst_24 = new bd_5dca_interconnect2_1_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_1.interconnect2_1");
        sc_inst_24->xsim_set_dbg_index(2156);
        xsim_sc_channel<0, bool > *p_24_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_24->aclk.bind(*p_24_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_24_aclk);
        xsim_sc_channel<0, bool > *p_24_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_24->aclk1.bind(*p_24_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_24_aclk1);
        xsim_sc_channel<0, bool > *p_24_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_24->aresetn.bind(*p_24_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_24_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_24_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_24->S00_AXI_awaddr.bind(*p_24_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_24_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_24_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_24->S00_AXI_awlen.bind(*p_24_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_24_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->S00_AXI_awsize.bind(*p_24_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_24_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->S00_AXI_awburst.bind(*p_24_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_24_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->S00_AXI_awlock.bind(*p_24_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_24_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->S00_AXI_awcache.bind(*p_24_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_24_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->S00_AXI_awprot.bind(*p_24_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_24_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->S00_AXI_awqos.bind(*p_24_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_24_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_24_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->S00_AXI_awvalid.bind(*p_24_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_24_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_24_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_24->S00_AXI_awready.bind(*p_24_S00_AXI_awready);
        p_24_S00_AXI_awready->set_sv_netview_offsetfromdp(6894232);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->S00_AXI_wdata.bind(*p_24_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_24_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->S00_AXI_wstrb.bind(*p_24_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_24_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_24_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_24->S00_AXI_wlast.bind(*p_24_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_24_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_24_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->S00_AXI_wvalid.bind(*p_24_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_24_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_24_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_24->S00_AXI_wready.bind(*p_24_S00_AXI_wready);
        p_24_S00_AXI_wready->set_sv_netview_offsetfromdp(6894512);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->S00_AXI_bresp.bind(*p_24_S00_AXI_bresp);
        p_24_S00_AXI_bresp->set_sv_netview_offsetfromdp(6894568);
        xsim_sc_channel<0, bool > *p_24_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->S00_AXI_bvalid.bind(*p_24_S00_AXI_bvalid);
        p_24_S00_AXI_bvalid->set_sv_netview_offsetfromdp(6894624);
        xsim_sc_channel<0, bool > *p_24_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_24->S00_AXI_bready.bind(*p_24_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_24_S00_AXI_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_24_M00_AXI_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_24->M00_AXI_awaddr.bind(*p_24_M00_AXI_awaddr);
        p_24_M00_AXI_awaddr->set_sv_netview_offsetfromdp(6894736);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_M00_AXI_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->M00_AXI_awlen.bind(*p_24_M00_AXI_awlen);
        p_24_M00_AXI_awlen->set_sv_netview_offsetfromdp(6894792);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->M00_AXI_awsize.bind(*p_24_M00_AXI_awsize);
        p_24_M00_AXI_awsize->set_sv_netview_offsetfromdp(6894848);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->M00_AXI_awburst.bind(*p_24_M00_AXI_awburst);
        p_24_M00_AXI_awburst->set_sv_netview_offsetfromdp(6894904);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_M00_AXI_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->M00_AXI_awlock.bind(*p_24_M00_AXI_awlock);
        p_24_M00_AXI_awlock->set_sv_netview_offsetfromdp(6894960);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->M00_AXI_awcache.bind(*p_24_M00_AXI_awcache);
        p_24_M00_AXI_awcache->set_sv_netview_offsetfromdp(6895016);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->M00_AXI_awprot.bind(*p_24_M00_AXI_awprot);
        p_24_M00_AXI_awprot->set_sv_netview_offsetfromdp(6895072);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->M00_AXI_awqos.bind(*p_24_M00_AXI_awqos);
        p_24_M00_AXI_awqos->set_sv_netview_offsetfromdp(6895128);
        xsim_sc_channel<0, bool > *p_24_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->M00_AXI_awvalid.bind(*p_24_M00_AXI_awvalid);
        p_24_M00_AXI_awvalid->set_sv_netview_offsetfromdp(6895184);
        xsim_sc_channel<0, bool > *p_24_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_24->M00_AXI_awready.bind(*p_24_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_24_M00_AXI_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_24_M00_AXI_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_24->M00_AXI_wdata.bind(*p_24_M00_AXI_wdata);
        p_24_M00_AXI_wdata->set_sv_netview_offsetfromdp(6895296);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_M00_AXI_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->M00_AXI_wstrb.bind(*p_24_M00_AXI_wstrb);
        p_24_M00_AXI_wstrb->set_sv_netview_offsetfromdp(6895352);
        xsim_sc_channel<0, bool > *p_24_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_24->M00_AXI_wlast.bind(*p_24_M00_AXI_wlast);
        p_24_M00_AXI_wlast->set_sv_netview_offsetfromdp(6895408);
        xsim_sc_channel<0, bool > *p_24_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->M00_AXI_wvalid.bind(*p_24_M00_AXI_wvalid);
        p_24_M00_AXI_wvalid->set_sv_netview_offsetfromdp(6895464);
        xsim_sc_channel<0, bool > *p_24_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_24->M00_AXI_wready.bind(*p_24_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_24_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->M00_AXI_bresp.bind(*p_24_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_24_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_24_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->M00_AXI_bvalid.bind(*p_24_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_24_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_24_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_24->M00_AXI_bready.bind(*p_24_M00_AXI_bready);
        p_24_M00_AXI_bready->set_sv_netview_offsetfromdp(6895688);
        sc_inst_25 = new bd_5dca_slice2_1_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_1.slice2_1");
        sc_inst_25->xsim_set_dbg_index(2157);
        xsim_sc_channel<0, bool > *p_25_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_25->aclk.bind(*p_25_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_25_aclk);
        xsim_sc_channel<0, bool > *p_25_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_25->aresetn.bind(*p_25_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_25_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_25_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_25->s_axi_awaddr.bind(*p_25_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_awlen.bind(*p_25_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->s_axi_awsize.bind(*p_25_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_awburst.bind(*p_25_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_awlock.bind(*p_25_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_awcache.bind(*p_25_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->s_axi_awprot.bind(*p_25_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_awqos.bind(*p_25_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_25_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_awvalid.bind(*p_25_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_25_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_awready.bind(*p_25_s_axi_awready);
        p_25_s_axi_awready->set_sv_netview_offsetfromdp(6896408);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_25_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_25->s_axi_wdata.bind(*p_25_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_25_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_25->s_axi_wstrb.bind(*p_25_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_25_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_wlast.bind(*p_25_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_25_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_wvalid.bind(*p_25_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_25_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_wready.bind(*p_25_s_axi_wready);
        p_25_s_axi_wready->set_sv_netview_offsetfromdp(6896688);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_bresp.bind(*p_25_s_axi_bresp);
        p_25_s_axi_bresp->set_sv_netview_offsetfromdp(6896744);
        xsim_sc_channel<0, bool > *p_25_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_bvalid.bind(*p_25_s_axi_bvalid);
        p_25_s_axi_bvalid->set_sv_netview_offsetfromdp(6896800);
        xsim_sc_channel<0, bool > *p_25_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_bready.bind(*p_25_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_25_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_25->s_axi_araddr.bind(*p_25_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_arlen.bind(*p_25_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->s_axi_arsize.bind(*p_25_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_arburst.bind(*p_25_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_arlock.bind(*p_25_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_arcache.bind(*p_25_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->s_axi_arprot.bind(*p_25_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_arqos.bind(*p_25_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_25_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_arvalid.bind(*p_25_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_25_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_arready.bind(*p_25_s_axi_arready);
        p_25_s_axi_arready->set_sv_netview_offsetfromdp(6897416);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_25_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_25->s_axi_rdata.bind(*p_25_s_axi_rdata);
        p_25_s_axi_rdata->set_sv_netview_offsetfromdp(6897472);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_rresp.bind(*p_25_s_axi_rresp);
        p_25_s_axi_rresp->set_sv_netview_offsetfromdp(6897528);
        xsim_sc_channel<0, bool > *p_25_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_rlast.bind(*p_25_s_axi_rlast);
        p_25_s_axi_rlast->set_sv_netview_offsetfromdp(6897584);
        xsim_sc_channel<0, bool > *p_25_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_rvalid.bind(*p_25_s_axi_rvalid);
        p_25_s_axi_rvalid->set_sv_netview_offsetfromdp(6897640);
        xsim_sc_channel<0, bool > *p_25_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_rready.bind(*p_25_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_25_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_25->m_axi_awaddr.bind(*p_25_m_axi_awaddr);
        p_25_m_axi_awaddr->set_sv_netview_offsetfromdp(6897752);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_awlen.bind(*p_25_m_axi_awlen);
        p_25_m_axi_awlen->set_sv_netview_offsetfromdp(6897808);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->m_axi_awsize.bind(*p_25_m_axi_awsize);
        p_25_m_axi_awsize->set_sv_netview_offsetfromdp(6897864);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_awburst.bind(*p_25_m_axi_awburst);
        p_25_m_axi_awburst->set_sv_netview_offsetfromdp(6897920);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_awlock.bind(*p_25_m_axi_awlock);
        p_25_m_axi_awlock->set_sv_netview_offsetfromdp(6897976);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_awcache.bind(*p_25_m_axi_awcache);
        p_25_m_axi_awcache->set_sv_netview_offsetfromdp(6898032);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->m_axi_awprot.bind(*p_25_m_axi_awprot);
        p_25_m_axi_awprot->set_sv_netview_offsetfromdp(6898088);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_awqos.bind(*p_25_m_axi_awqos);
        p_25_m_axi_awqos->set_sv_netview_offsetfromdp(6898144);
        xsim_sc_channel<0, bool > *p_25_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_awvalid.bind(*p_25_m_axi_awvalid);
        p_25_m_axi_awvalid->set_sv_netview_offsetfromdp(6898200);
        xsim_sc_channel<0, bool > *p_25_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_awready.bind(*p_25_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_25_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_25->m_axi_wdata.bind(*p_25_m_axi_wdata);
        p_25_m_axi_wdata->set_sv_netview_offsetfromdp(6898312);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_25_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_25->m_axi_wstrb.bind(*p_25_m_axi_wstrb);
        p_25_m_axi_wstrb->set_sv_netview_offsetfromdp(6898368);
        xsim_sc_channel<0, bool > *p_25_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_wlast.bind(*p_25_m_axi_wlast);
        p_25_m_axi_wlast->set_sv_netview_offsetfromdp(6898424);
        xsim_sc_channel<0, bool > *p_25_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_wvalid.bind(*p_25_m_axi_wvalid);
        p_25_m_axi_wvalid->set_sv_netview_offsetfromdp(6898480);
        xsim_sc_channel<0, bool > *p_25_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_wready.bind(*p_25_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_bresp.bind(*p_25_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_25_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_bvalid.bind(*p_25_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_25_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_bready.bind(*p_25_m_axi_bready);
        p_25_m_axi_bready->set_sv_netview_offsetfromdp(6898704);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_25_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_25->m_axi_araddr.bind(*p_25_m_axi_araddr);
        p_25_m_axi_araddr->set_sv_netview_offsetfromdp(6898760);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_arlen.bind(*p_25_m_axi_arlen);
        p_25_m_axi_arlen->set_sv_netview_offsetfromdp(6898816);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->m_axi_arsize.bind(*p_25_m_axi_arsize);
        p_25_m_axi_arsize->set_sv_netview_offsetfromdp(6898872);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_arburst.bind(*p_25_m_axi_arburst);
        p_25_m_axi_arburst->set_sv_netview_offsetfromdp(6898928);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_arlock.bind(*p_25_m_axi_arlock);
        p_25_m_axi_arlock->set_sv_netview_offsetfromdp(6898984);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_arcache.bind(*p_25_m_axi_arcache);
        p_25_m_axi_arcache->set_sv_netview_offsetfromdp(6899040);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->m_axi_arprot.bind(*p_25_m_axi_arprot);
        p_25_m_axi_arprot->set_sv_netview_offsetfromdp(6899096);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_arqos.bind(*p_25_m_axi_arqos);
        p_25_m_axi_arqos->set_sv_netview_offsetfromdp(6899152);
        xsim_sc_channel<0, bool > *p_25_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_arvalid.bind(*p_25_m_axi_arvalid);
        p_25_m_axi_arvalid->set_sv_netview_offsetfromdp(6899208);
        xsim_sc_channel<0, bool > *p_25_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_arready.bind(*p_25_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_25_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_25->m_axi_rdata.bind(*p_25_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_rresp.bind(*p_25_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_25_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_rlast.bind(*p_25_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_25_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_rvalid.bind(*p_25_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_25_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_rready.bind(*p_25_m_axi_rready);
        p_25_m_axi_rready->set_sv_netview_offsetfromdp(6899544);
        sc_inst_26 = new bd_5dca_interconnect3_2_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_2.interconnect3_2");
        sc_inst_26->xsim_set_dbg_index(2211);
        xsim_sc_channel<0, bool > *p_26_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_26->aclk.bind(*p_26_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_26_aclk);
        xsim_sc_channel<0, bool > *p_26_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_26->aclk1.bind(*p_26_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_26_aclk1);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_26_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_26->S00_AXI_awaddr.bind(*p_26_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_26_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_26->S00_AXI_awlen.bind(*p_26_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->S00_AXI_awsize.bind(*p_26_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->S00_AXI_awburst.bind(*p_26_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->S00_AXI_awlock.bind(*p_26_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->S00_AXI_awcache.bind(*p_26_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->S00_AXI_awprot.bind(*p_26_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->S00_AXI_awqos.bind(*p_26_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_26_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->S00_AXI_awvalid.bind(*p_26_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_26_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_26->S00_AXI_awready.bind(*p_26_S00_AXI_awready);
        p_26_S00_AXI_awready->set_sv_netview_offsetfromdp(6961080);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_26_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_26->S00_AXI_wdata.bind(*p_26_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_26_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_26->S00_AXI_wstrb.bind(*p_26_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_26_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->S00_AXI_wlast.bind(*p_26_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_26_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->S00_AXI_wvalid.bind(*p_26_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_26_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_26->S00_AXI_wready.bind(*p_26_S00_AXI_wready);
        p_26_S00_AXI_wready->set_sv_netview_offsetfromdp(6961360);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->S00_AXI_bresp.bind(*p_26_S00_AXI_bresp);
        p_26_S00_AXI_bresp->set_sv_netview_offsetfromdp(6961416);
        xsim_sc_channel<0, bool > *p_26_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->S00_AXI_bvalid.bind(*p_26_S00_AXI_bvalid);
        p_26_S00_AXI_bvalid->set_sv_netview_offsetfromdp(6961472);
        xsim_sc_channel<0, bool > *p_26_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_26->S00_AXI_bready.bind(*p_26_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_26_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_26->S00_AXI_araddr.bind(*p_26_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_26_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_26->S00_AXI_arlen.bind(*p_26_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->S00_AXI_arsize.bind(*p_26_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->S00_AXI_arburst.bind(*p_26_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->S00_AXI_arlock.bind(*p_26_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->S00_AXI_arcache.bind(*p_26_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->S00_AXI_arprot.bind(*p_26_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->S00_AXI_arqos.bind(*p_26_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_26_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->S00_AXI_arvalid.bind(*p_26_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_26_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_26->S00_AXI_arready.bind(*p_26_S00_AXI_arready);
        p_26_S00_AXI_arready->set_sv_netview_offsetfromdp(6962088);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_26_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_26->S00_AXI_rdata.bind(*p_26_S00_AXI_rdata);
        p_26_S00_AXI_rdata->set_sv_netview_offsetfromdp(6962144);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->S00_AXI_rresp.bind(*p_26_S00_AXI_rresp);
        p_26_S00_AXI_rresp->set_sv_netview_offsetfromdp(6962200);
        xsim_sc_channel<0, bool > *p_26_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->S00_AXI_rlast.bind(*p_26_S00_AXI_rlast);
        p_26_S00_AXI_rlast->set_sv_netview_offsetfromdp(6962256);
        xsim_sc_channel<0, bool > *p_26_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->S00_AXI_rvalid.bind(*p_26_S00_AXI_rvalid);
        p_26_S00_AXI_rvalid->set_sv_netview_offsetfromdp(6962312);
        xsim_sc_channel<0, bool > *p_26_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_26->S00_AXI_rready.bind(*p_26_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_26_M00_AXI_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_26->M00_AXI_awaddr.bind(*p_26_M00_AXI_awaddr);
        p_26_M00_AXI_awaddr->set_sv_netview_offsetfromdp(6962424);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_M00_AXI_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->M00_AXI_awlen.bind(*p_26_M00_AXI_awlen);
        p_26_M00_AXI_awlen->set_sv_netview_offsetfromdp(6962480);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->M00_AXI_awsize.bind(*p_26_M00_AXI_awsize);
        p_26_M00_AXI_awsize->set_sv_netview_offsetfromdp(6962536);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->M00_AXI_awburst.bind(*p_26_M00_AXI_awburst);
        p_26_M00_AXI_awburst->set_sv_netview_offsetfromdp(6962592);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_M00_AXI_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->M00_AXI_awlock.bind(*p_26_M00_AXI_awlock);
        p_26_M00_AXI_awlock->set_sv_netview_offsetfromdp(6962648);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->M00_AXI_awcache.bind(*p_26_M00_AXI_awcache);
        p_26_M00_AXI_awcache->set_sv_netview_offsetfromdp(6962704);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->M00_AXI_awprot.bind(*p_26_M00_AXI_awprot);
        p_26_M00_AXI_awprot->set_sv_netview_offsetfromdp(6962760);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->M00_AXI_awqos.bind(*p_26_M00_AXI_awqos);
        p_26_M00_AXI_awqos->set_sv_netview_offsetfromdp(6962816);
        xsim_sc_channel<0, bool > *p_26_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->M00_AXI_awvalid.bind(*p_26_M00_AXI_awvalid);
        p_26_M00_AXI_awvalid->set_sv_netview_offsetfromdp(6962872);
        xsim_sc_channel<0, bool > *p_26_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_26->M00_AXI_awready.bind(*p_26_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M00_AXI_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_26_M00_AXI_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_26->M00_AXI_wdata.bind(*p_26_M00_AXI_wdata);
        p_26_M00_AXI_wdata->set_sv_netview_offsetfromdp(6962984);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_M00_AXI_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->M00_AXI_wstrb.bind(*p_26_M00_AXI_wstrb);
        p_26_M00_AXI_wstrb->set_sv_netview_offsetfromdp(6963040);
        xsim_sc_channel<0, bool > *p_26_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->M00_AXI_wlast.bind(*p_26_M00_AXI_wlast);
        p_26_M00_AXI_wlast->set_sv_netview_offsetfromdp(6963096);
        xsim_sc_channel<0, bool > *p_26_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->M00_AXI_wvalid.bind(*p_26_M00_AXI_wvalid);
        p_26_M00_AXI_wvalid->set_sv_netview_offsetfromdp(6963152);
        xsim_sc_channel<0, bool > *p_26_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_26->M00_AXI_wready.bind(*p_26_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->M00_AXI_bresp.bind(*p_26_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_26_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->M00_AXI_bvalid.bind(*p_26_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_26_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_26->M00_AXI_bready.bind(*p_26_M00_AXI_bready);
        p_26_M00_AXI_bready->set_sv_netview_offsetfromdp(6963376);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_26_M00_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_26->M00_AXI_araddr.bind(*p_26_M00_AXI_araddr);
        p_26_M00_AXI_araddr->set_sv_netview_offsetfromdp(6963432);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_M00_AXI_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->M00_AXI_arlen.bind(*p_26_M00_AXI_arlen);
        p_26_M00_AXI_arlen->set_sv_netview_offsetfromdp(6963488);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->M00_AXI_arsize.bind(*p_26_M00_AXI_arsize);
        p_26_M00_AXI_arsize->set_sv_netview_offsetfromdp(6963544);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->M00_AXI_arburst.bind(*p_26_M00_AXI_arburst);
        p_26_M00_AXI_arburst->set_sv_netview_offsetfromdp(6963600);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_M00_AXI_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->M00_AXI_arlock.bind(*p_26_M00_AXI_arlock);
        p_26_M00_AXI_arlock->set_sv_netview_offsetfromdp(6963656);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->M00_AXI_arcache.bind(*p_26_M00_AXI_arcache);
        p_26_M00_AXI_arcache->set_sv_netview_offsetfromdp(6963712);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->M00_AXI_arprot.bind(*p_26_M00_AXI_arprot);
        p_26_M00_AXI_arprot->set_sv_netview_offsetfromdp(6963768);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->M00_AXI_arqos.bind(*p_26_M00_AXI_arqos);
        p_26_M00_AXI_arqos->set_sv_netview_offsetfromdp(6963824);
        xsim_sc_channel<0, bool > *p_26_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->M00_AXI_arvalid.bind(*p_26_M00_AXI_arvalid);
        p_26_M00_AXI_arvalid->set_sv_netview_offsetfromdp(6963880);
        xsim_sc_channel<0, bool > *p_26_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_26->M00_AXI_arready.bind(*p_26_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M00_AXI_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_26_M00_AXI_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_26->M00_AXI_rdata.bind(*p_26_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->M00_AXI_rresp.bind(*p_26_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_26_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->M00_AXI_rlast.bind(*p_26_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_26_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->M00_AXI_rvalid.bind(*p_26_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_26_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_26->M00_AXI_rready.bind(*p_26_M00_AXI_rready);
        p_26_M00_AXI_rready->set_sv_netview_offsetfromdp(6964216);
        sc_inst_27 = new bd_5dca_slice3_2_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_2.slice3_2");
        sc_inst_27->xsim_set_dbg_index(2212);
        xsim_sc_channel<0, bool > *p_27_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_27->aclk.bind(*p_27_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_27_aclk);
        xsim_sc_channel<0, bool > *p_27_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_27->aresetn.bind(*p_27_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_27_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_27_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_27->s_axi_awaddr.bind(*p_27_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_awlen.bind(*p_27_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->s_axi_awsize.bind(*p_27_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_awburst.bind(*p_27_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_awlock.bind(*p_27_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_awcache.bind(*p_27_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->s_axi_awprot.bind(*p_27_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_awqos.bind(*p_27_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_27_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_awvalid.bind(*p_27_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_27_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_awready.bind(*p_27_s_axi_awready);
        p_27_s_axi_awready->set_sv_netview_offsetfromdp(6964936);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_27_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_27->s_axi_wdata.bind(*p_27_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_27_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_27->s_axi_wstrb.bind(*p_27_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_27_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_wlast.bind(*p_27_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_27_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_wvalid.bind(*p_27_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_27_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_wready.bind(*p_27_s_axi_wready);
        p_27_s_axi_wready->set_sv_netview_offsetfromdp(6965216);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_bresp.bind(*p_27_s_axi_bresp);
        p_27_s_axi_bresp->set_sv_netview_offsetfromdp(6965272);
        xsim_sc_channel<0, bool > *p_27_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_bvalid.bind(*p_27_s_axi_bvalid);
        p_27_s_axi_bvalid->set_sv_netview_offsetfromdp(6965328);
        xsim_sc_channel<0, bool > *p_27_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_bready.bind(*p_27_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_27_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_27->s_axi_araddr.bind(*p_27_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_arlen.bind(*p_27_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->s_axi_arsize.bind(*p_27_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_arburst.bind(*p_27_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_arlock.bind(*p_27_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_arcache.bind(*p_27_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->s_axi_arprot.bind(*p_27_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_arqos.bind(*p_27_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_27_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_arvalid.bind(*p_27_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_27_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_arready.bind(*p_27_s_axi_arready);
        p_27_s_axi_arready->set_sv_netview_offsetfromdp(6965944);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_27_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_27->s_axi_rdata.bind(*p_27_s_axi_rdata);
        p_27_s_axi_rdata->set_sv_netview_offsetfromdp(6966000);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_rresp.bind(*p_27_s_axi_rresp);
        p_27_s_axi_rresp->set_sv_netview_offsetfromdp(6966056);
        xsim_sc_channel<0, bool > *p_27_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_rlast.bind(*p_27_s_axi_rlast);
        p_27_s_axi_rlast->set_sv_netview_offsetfromdp(6966112);
        xsim_sc_channel<0, bool > *p_27_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_rvalid.bind(*p_27_s_axi_rvalid);
        p_27_s_axi_rvalid->set_sv_netview_offsetfromdp(6966168);
        xsim_sc_channel<0, bool > *p_27_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_rready.bind(*p_27_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_27_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_27->m_axi_awaddr.bind(*p_27_m_axi_awaddr);
        p_27_m_axi_awaddr->set_sv_netview_offsetfromdp(6966280);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_awlen.bind(*p_27_m_axi_awlen);
        p_27_m_axi_awlen->set_sv_netview_offsetfromdp(6966336);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->m_axi_awsize.bind(*p_27_m_axi_awsize);
        p_27_m_axi_awsize->set_sv_netview_offsetfromdp(6966392);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_awburst.bind(*p_27_m_axi_awburst);
        p_27_m_axi_awburst->set_sv_netview_offsetfromdp(6966448);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_awlock.bind(*p_27_m_axi_awlock);
        p_27_m_axi_awlock->set_sv_netview_offsetfromdp(6966504);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_awcache.bind(*p_27_m_axi_awcache);
        p_27_m_axi_awcache->set_sv_netview_offsetfromdp(6966560);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->m_axi_awprot.bind(*p_27_m_axi_awprot);
        p_27_m_axi_awprot->set_sv_netview_offsetfromdp(6966616);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_awqos.bind(*p_27_m_axi_awqos);
        p_27_m_axi_awqos->set_sv_netview_offsetfromdp(6966672);
        xsim_sc_channel<0, bool > *p_27_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_awvalid.bind(*p_27_m_axi_awvalid);
        p_27_m_axi_awvalid->set_sv_netview_offsetfromdp(6966728);
        xsim_sc_channel<0, bool > *p_27_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_awready.bind(*p_27_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_27_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_27->m_axi_wdata.bind(*p_27_m_axi_wdata);
        p_27_m_axi_wdata->set_sv_netview_offsetfromdp(6966840);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_27_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_27->m_axi_wstrb.bind(*p_27_m_axi_wstrb);
        p_27_m_axi_wstrb->set_sv_netview_offsetfromdp(6966896);
        xsim_sc_channel<0, bool > *p_27_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_wlast.bind(*p_27_m_axi_wlast);
        p_27_m_axi_wlast->set_sv_netview_offsetfromdp(6966952);
        xsim_sc_channel<0, bool > *p_27_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_wvalid.bind(*p_27_m_axi_wvalid);
        p_27_m_axi_wvalid->set_sv_netview_offsetfromdp(6967008);
        xsim_sc_channel<0, bool > *p_27_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_wready.bind(*p_27_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_bresp.bind(*p_27_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_27_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_bvalid.bind(*p_27_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_27_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_bready.bind(*p_27_m_axi_bready);
        p_27_m_axi_bready->set_sv_netview_offsetfromdp(6967232);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_27_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_27->m_axi_araddr.bind(*p_27_m_axi_araddr);
        p_27_m_axi_araddr->set_sv_netview_offsetfromdp(6967288);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_arlen.bind(*p_27_m_axi_arlen);
        p_27_m_axi_arlen->set_sv_netview_offsetfromdp(6967344);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->m_axi_arsize.bind(*p_27_m_axi_arsize);
        p_27_m_axi_arsize->set_sv_netview_offsetfromdp(6967400);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_arburst.bind(*p_27_m_axi_arburst);
        p_27_m_axi_arburst->set_sv_netview_offsetfromdp(6967456);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_arlock.bind(*p_27_m_axi_arlock);
        p_27_m_axi_arlock->set_sv_netview_offsetfromdp(6967512);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_arcache.bind(*p_27_m_axi_arcache);
        p_27_m_axi_arcache->set_sv_netview_offsetfromdp(6967568);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->m_axi_arprot.bind(*p_27_m_axi_arprot);
        p_27_m_axi_arprot->set_sv_netview_offsetfromdp(6967624);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_arqos.bind(*p_27_m_axi_arqos);
        p_27_m_axi_arqos->set_sv_netview_offsetfromdp(6967680);
        xsim_sc_channel<0, bool > *p_27_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_arvalid.bind(*p_27_m_axi_arvalid);
        p_27_m_axi_arvalid->set_sv_netview_offsetfromdp(6967736);
        xsim_sc_channel<0, bool > *p_27_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_arready.bind(*p_27_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_27_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_27->m_axi_rdata.bind(*p_27_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_rresp.bind(*p_27_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_27_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_rlast.bind(*p_27_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_27_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_rvalid.bind(*p_27_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_27_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_rready.bind(*p_27_m_axi_rready);
        p_27_m_axi_rready->set_sv_netview_offsetfromdp(6968072);
        sc_inst_28 = new bd_5dca_interconnect0_3_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_3.interconnect0_3");
        sc_inst_28->xsim_set_dbg_index(2280);
        xsim_sc_channel<0, bool > *p_28_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_28->aclk.bind(*p_28_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_28_aclk);
        xsim_sc_channel<0, bool > *p_28_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_28->aclk1.bind(*p_28_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_28_aclk1);
        xsim_sc_channel<0, bool > *p_28_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_28->aresetn.bind(*p_28_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_28_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_28_S00_AXI_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_28->S00_AXI_awaddr.bind(*p_28_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_28_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_28->S00_AXI_awlen.bind(*p_28_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->S00_AXI_awsize.bind(*p_28_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->S00_AXI_awburst.bind(*p_28_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_28_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_28->S00_AXI_awlock.bind(*p_28_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->S00_AXI_awcache.bind(*p_28_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->S00_AXI_awprot.bind(*p_28_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->S00_AXI_awqos.bind(*p_28_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_28_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->S00_AXI_awvalid.bind(*p_28_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_28_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_28->S00_AXI_awready.bind(*p_28_S00_AXI_awready);
        p_28_S00_AXI_awready->set_sv_netview_offsetfromdp(7030240);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_28_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_28->S00_AXI_wdata.bind(*p_28_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_28_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_28->S00_AXI_wstrb.bind(*p_28_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_28_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_28->S00_AXI_wlast.bind(*p_28_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_28_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->S00_AXI_wvalid.bind(*p_28_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_28_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_28->S00_AXI_wready.bind(*p_28_S00_AXI_wready);
        p_28_S00_AXI_wready->set_sv_netview_offsetfromdp(7030520);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->S00_AXI_bresp.bind(*p_28_S00_AXI_bresp);
        p_28_S00_AXI_bresp->set_sv_netview_offsetfromdp(7030576);
        xsim_sc_channel<0, bool > *p_28_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->S00_AXI_bvalid.bind(*p_28_S00_AXI_bvalid);
        p_28_S00_AXI_bvalid->set_sv_netview_offsetfromdp(7030632);
        xsim_sc_channel<0, bool > *p_28_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_28->S00_AXI_bready.bind(*p_28_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_28_S00_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_28->S00_AXI_araddr.bind(*p_28_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_28_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_28->S00_AXI_arlen.bind(*p_28_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->S00_AXI_arsize.bind(*p_28_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->S00_AXI_arburst.bind(*p_28_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_28_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_28->S00_AXI_arlock.bind(*p_28_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->S00_AXI_arcache.bind(*p_28_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->S00_AXI_arprot.bind(*p_28_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->S00_AXI_arqos.bind(*p_28_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_28_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->S00_AXI_arvalid.bind(*p_28_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_28_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_28->S00_AXI_arready.bind(*p_28_S00_AXI_arready);
        p_28_S00_AXI_arready->set_sv_netview_offsetfromdp(7031248);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_28_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_28->S00_AXI_rdata.bind(*p_28_S00_AXI_rdata);
        p_28_S00_AXI_rdata->set_sv_netview_offsetfromdp(7031304);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->S00_AXI_rresp.bind(*p_28_S00_AXI_rresp);
        p_28_S00_AXI_rresp->set_sv_netview_offsetfromdp(7031360);
        xsim_sc_channel<0, bool > *p_28_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_28->S00_AXI_rlast.bind(*p_28_S00_AXI_rlast);
        p_28_S00_AXI_rlast->set_sv_netview_offsetfromdp(7031416);
        xsim_sc_channel<0, bool > *p_28_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->S00_AXI_rvalid.bind(*p_28_S00_AXI_rvalid);
        p_28_S00_AXI_rvalid->set_sv_netview_offsetfromdp(7031472);
        xsim_sc_channel<0, bool > *p_28_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_28->S00_AXI_rready.bind(*p_28_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_28_M00_AXI_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_28->M00_AXI_awaddr.bind(*p_28_M00_AXI_awaddr);
        p_28_M00_AXI_awaddr->set_sv_netview_offsetfromdp(7031584);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_M00_AXI_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->M00_AXI_awlen.bind(*p_28_M00_AXI_awlen);
        p_28_M00_AXI_awlen->set_sv_netview_offsetfromdp(7031640);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->M00_AXI_awsize.bind(*p_28_M00_AXI_awsize);
        p_28_M00_AXI_awsize->set_sv_netview_offsetfromdp(7031696);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->M00_AXI_awburst.bind(*p_28_M00_AXI_awburst);
        p_28_M00_AXI_awburst->set_sv_netview_offsetfromdp(7031752);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_M00_AXI_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->M00_AXI_awlock.bind(*p_28_M00_AXI_awlock);
        p_28_M00_AXI_awlock->set_sv_netview_offsetfromdp(7031808);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->M00_AXI_awcache.bind(*p_28_M00_AXI_awcache);
        p_28_M00_AXI_awcache->set_sv_netview_offsetfromdp(7031864);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->M00_AXI_awprot.bind(*p_28_M00_AXI_awprot);
        p_28_M00_AXI_awprot->set_sv_netview_offsetfromdp(7031920);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->M00_AXI_awqos.bind(*p_28_M00_AXI_awqos);
        p_28_M00_AXI_awqos->set_sv_netview_offsetfromdp(7031976);
        xsim_sc_channel<0, bool > *p_28_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->M00_AXI_awvalid.bind(*p_28_M00_AXI_awvalid);
        p_28_M00_AXI_awvalid->set_sv_netview_offsetfromdp(7032032);
        xsim_sc_channel<0, bool > *p_28_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_28->M00_AXI_awready.bind(*p_28_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_28_M00_AXI_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_28_M00_AXI_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_28->M00_AXI_wdata.bind(*p_28_M00_AXI_wdata);
        p_28_M00_AXI_wdata->set_sv_netview_offsetfromdp(7032144);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_28_M00_AXI_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_28->M00_AXI_wstrb.bind(*p_28_M00_AXI_wstrb);
        p_28_M00_AXI_wstrb->set_sv_netview_offsetfromdp(7032200);
        xsim_sc_channel<0, bool > *p_28_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_28->M00_AXI_wlast.bind(*p_28_M00_AXI_wlast);
        p_28_M00_AXI_wlast->set_sv_netview_offsetfromdp(7032256);
        xsim_sc_channel<0, bool > *p_28_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->M00_AXI_wvalid.bind(*p_28_M00_AXI_wvalid);
        p_28_M00_AXI_wvalid->set_sv_netview_offsetfromdp(7032312);
        xsim_sc_channel<0, bool > *p_28_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_28->M00_AXI_wready.bind(*p_28_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_28_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->M00_AXI_bresp.bind(*p_28_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_28_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_28_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->M00_AXI_bvalid.bind(*p_28_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_28_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_28_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_28->M00_AXI_bready.bind(*p_28_M00_AXI_bready);
        p_28_M00_AXI_bready->set_sv_netview_offsetfromdp(7032536);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_28_M00_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_28->M00_AXI_araddr.bind(*p_28_M00_AXI_araddr);
        p_28_M00_AXI_araddr->set_sv_netview_offsetfromdp(7032592);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_M00_AXI_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->M00_AXI_arlen.bind(*p_28_M00_AXI_arlen);
        p_28_M00_AXI_arlen->set_sv_netview_offsetfromdp(7032648);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->M00_AXI_arsize.bind(*p_28_M00_AXI_arsize);
        p_28_M00_AXI_arsize->set_sv_netview_offsetfromdp(7032704);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->M00_AXI_arburst.bind(*p_28_M00_AXI_arburst);
        p_28_M00_AXI_arburst->set_sv_netview_offsetfromdp(7032760);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_M00_AXI_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->M00_AXI_arlock.bind(*p_28_M00_AXI_arlock);
        p_28_M00_AXI_arlock->set_sv_netview_offsetfromdp(7032816);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->M00_AXI_arcache.bind(*p_28_M00_AXI_arcache);
        p_28_M00_AXI_arcache->set_sv_netview_offsetfromdp(7032872);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->M00_AXI_arprot.bind(*p_28_M00_AXI_arprot);
        p_28_M00_AXI_arprot->set_sv_netview_offsetfromdp(7032928);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->M00_AXI_arqos.bind(*p_28_M00_AXI_arqos);
        p_28_M00_AXI_arqos->set_sv_netview_offsetfromdp(7032984);
        xsim_sc_channel<0, bool > *p_28_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->M00_AXI_arvalid.bind(*p_28_M00_AXI_arvalid);
        p_28_M00_AXI_arvalid->set_sv_netview_offsetfromdp(7033040);
        xsim_sc_channel<0, bool > *p_28_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_28->M00_AXI_arready.bind(*p_28_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_28_M00_AXI_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_28_M00_AXI_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_28->M00_AXI_rdata.bind(*p_28_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_28_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->M00_AXI_rresp.bind(*p_28_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_28_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_28_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_28->M00_AXI_rlast.bind(*p_28_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_28_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_28_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->M00_AXI_rvalid.bind(*p_28_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_28_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_28_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_28->M00_AXI_rready.bind(*p_28_M00_AXI_rready);
        p_28_M00_AXI_rready->set_sv_netview_offsetfromdp(7033376);
        sc_inst_29 = new bd_5dca_slice0_3_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_3.slice0_3");
        sc_inst_29->xsim_set_dbg_index(2281);
        xsim_sc_channel<0, bool > *p_29_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_29->aclk.bind(*p_29_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_29_aclk);
        xsim_sc_channel<0, bool > *p_29_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_29->aresetn.bind(*p_29_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_29_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_29_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_29->s_axi_awaddr.bind(*p_29_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->s_axi_awlen.bind(*p_29_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->s_axi_awsize.bind(*p_29_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->s_axi_awburst.bind(*p_29_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->s_axi_awlock.bind(*p_29_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->s_axi_awcache.bind(*p_29_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->s_axi_awprot.bind(*p_29_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->s_axi_awqos.bind(*p_29_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_29_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_awvalid.bind(*p_29_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_29_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_awready.bind(*p_29_s_axi_awready);
        p_29_s_axi_awready->set_sv_netview_offsetfromdp(7034096);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_29_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_29->s_axi_wdata.bind(*p_29_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_29_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_29->s_axi_wstrb.bind(*p_29_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_29_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_wlast.bind(*p_29_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_29_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_wvalid.bind(*p_29_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_29_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_wready.bind(*p_29_s_axi_wready);
        p_29_s_axi_wready->set_sv_netview_offsetfromdp(7034376);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->s_axi_bresp.bind(*p_29_s_axi_bresp);
        p_29_s_axi_bresp->set_sv_netview_offsetfromdp(7034432);
        xsim_sc_channel<0, bool > *p_29_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_bvalid.bind(*p_29_s_axi_bvalid);
        p_29_s_axi_bvalid->set_sv_netview_offsetfromdp(7034488);
        xsim_sc_channel<0, bool > *p_29_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_bready.bind(*p_29_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_29_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_29->s_axi_araddr.bind(*p_29_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->s_axi_arlen.bind(*p_29_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->s_axi_arsize.bind(*p_29_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->s_axi_arburst.bind(*p_29_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->s_axi_arlock.bind(*p_29_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->s_axi_arcache.bind(*p_29_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->s_axi_arprot.bind(*p_29_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->s_axi_arqos.bind(*p_29_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_29_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_arvalid.bind(*p_29_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_29_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_arready.bind(*p_29_s_axi_arready);
        p_29_s_axi_arready->set_sv_netview_offsetfromdp(7035104);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_29_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_29->s_axi_rdata.bind(*p_29_s_axi_rdata);
        p_29_s_axi_rdata->set_sv_netview_offsetfromdp(7035160);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->s_axi_rresp.bind(*p_29_s_axi_rresp);
        p_29_s_axi_rresp->set_sv_netview_offsetfromdp(7035216);
        xsim_sc_channel<0, bool > *p_29_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_rlast.bind(*p_29_s_axi_rlast);
        p_29_s_axi_rlast->set_sv_netview_offsetfromdp(7035272);
        xsim_sc_channel<0, bool > *p_29_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_rvalid.bind(*p_29_s_axi_rvalid);
        p_29_s_axi_rvalid->set_sv_netview_offsetfromdp(7035328);
        xsim_sc_channel<0, bool > *p_29_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_rready.bind(*p_29_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_29_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_29->m_axi_awaddr.bind(*p_29_m_axi_awaddr);
        p_29_m_axi_awaddr->set_sv_netview_offsetfromdp(7035440);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->m_axi_awlen.bind(*p_29_m_axi_awlen);
        p_29_m_axi_awlen->set_sv_netview_offsetfromdp(7035496);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->m_axi_awsize.bind(*p_29_m_axi_awsize);
        p_29_m_axi_awsize->set_sv_netview_offsetfromdp(7035552);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->m_axi_awburst.bind(*p_29_m_axi_awburst);
        p_29_m_axi_awburst->set_sv_netview_offsetfromdp(7035608);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->m_axi_awlock.bind(*p_29_m_axi_awlock);
        p_29_m_axi_awlock->set_sv_netview_offsetfromdp(7035664);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->m_axi_awcache.bind(*p_29_m_axi_awcache);
        p_29_m_axi_awcache->set_sv_netview_offsetfromdp(7035720);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->m_axi_awprot.bind(*p_29_m_axi_awprot);
        p_29_m_axi_awprot->set_sv_netview_offsetfromdp(7035776);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->m_axi_awqos.bind(*p_29_m_axi_awqos);
        p_29_m_axi_awqos->set_sv_netview_offsetfromdp(7035832);
        xsim_sc_channel<0, bool > *p_29_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_awvalid.bind(*p_29_m_axi_awvalid);
        p_29_m_axi_awvalid->set_sv_netview_offsetfromdp(7035888);
        xsim_sc_channel<0, bool > *p_29_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_awready.bind(*p_29_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_29_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_29->m_axi_wdata.bind(*p_29_m_axi_wdata);
        p_29_m_axi_wdata->set_sv_netview_offsetfromdp(7036000);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_29_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_29->m_axi_wstrb.bind(*p_29_m_axi_wstrb);
        p_29_m_axi_wstrb->set_sv_netview_offsetfromdp(7036056);
        xsim_sc_channel<0, bool > *p_29_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_wlast.bind(*p_29_m_axi_wlast);
        p_29_m_axi_wlast->set_sv_netview_offsetfromdp(7036112);
        xsim_sc_channel<0, bool > *p_29_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_wvalid.bind(*p_29_m_axi_wvalid);
        p_29_m_axi_wvalid->set_sv_netview_offsetfromdp(7036168);
        xsim_sc_channel<0, bool > *p_29_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_wready.bind(*p_29_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->m_axi_bresp.bind(*p_29_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_29_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_bvalid.bind(*p_29_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_29_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_bready.bind(*p_29_m_axi_bready);
        p_29_m_axi_bready->set_sv_netview_offsetfromdp(7036392);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_29_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_29->m_axi_araddr.bind(*p_29_m_axi_araddr);
        p_29_m_axi_araddr->set_sv_netview_offsetfromdp(7036448);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->m_axi_arlen.bind(*p_29_m_axi_arlen);
        p_29_m_axi_arlen->set_sv_netview_offsetfromdp(7036504);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->m_axi_arsize.bind(*p_29_m_axi_arsize);
        p_29_m_axi_arsize->set_sv_netview_offsetfromdp(7036560);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->m_axi_arburst.bind(*p_29_m_axi_arburst);
        p_29_m_axi_arburst->set_sv_netview_offsetfromdp(7036616);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->m_axi_arlock.bind(*p_29_m_axi_arlock);
        p_29_m_axi_arlock->set_sv_netview_offsetfromdp(7036672);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->m_axi_arcache.bind(*p_29_m_axi_arcache);
        p_29_m_axi_arcache->set_sv_netview_offsetfromdp(7036728);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->m_axi_arprot.bind(*p_29_m_axi_arprot);
        p_29_m_axi_arprot->set_sv_netview_offsetfromdp(7036784);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->m_axi_arqos.bind(*p_29_m_axi_arqos);
        p_29_m_axi_arqos->set_sv_netview_offsetfromdp(7036840);
        xsim_sc_channel<0, bool > *p_29_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_arvalid.bind(*p_29_m_axi_arvalid);
        p_29_m_axi_arvalid->set_sv_netview_offsetfromdp(7036896);
        xsim_sc_channel<0, bool > *p_29_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_arready.bind(*p_29_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_29_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_29->m_axi_rdata.bind(*p_29_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->m_axi_rresp.bind(*p_29_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_29_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_rlast.bind(*p_29_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_29_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_rvalid.bind(*p_29_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_29_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_rready.bind(*p_29_m_axi_rready);
        p_29_m_axi_rready->set_sv_netview_offsetfromdp(7037232);
        sc_inst_30 = new bd_5dca_vip_S00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.vip_S00");
        sc_inst_30->xsim_set_dbg_index(866);
        xsim_sc_channel<0, bool > *p_30_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_30->aclk.bind(*p_30_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_30_aclk);
        xsim_sc_channel<0, bool > *p_30_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_30->aresetn.bind(*p_30_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_30_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_30_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_30->s_axi_awaddr.bind(*p_30_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->s_axi_awlen.bind(*p_30_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_awburst.bind(*p_30_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_awlock.bind(*p_30_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->s_axi_awcache.bind(*p_30_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->s_axi_awprot.bind(*p_30_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->s_axi_awqos.bind(*p_30_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_30_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_awvalid.bind(*p_30_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_30_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_awready.bind(*p_30_s_axi_awready);
        p_30_s_axi_awready->set_sv_netview_offsetfromdp(7037896);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_30_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_30->s_axi_wdata.bind(*p_30_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_30_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_30->s_axi_wstrb.bind(*p_30_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_30_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_wlast.bind(*p_30_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_30_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_wvalid.bind(*p_30_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_30_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_wready.bind(*p_30_s_axi_wready);
        p_30_s_axi_wready->set_sv_netview_offsetfromdp(7038176);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_bresp.bind(*p_30_s_axi_bresp);
        p_30_s_axi_bresp->set_sv_netview_offsetfromdp(7038232);
        xsim_sc_channel<0, bool > *p_30_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_bvalid.bind(*p_30_s_axi_bvalid);
        p_30_s_axi_bvalid->set_sv_netview_offsetfromdp(7038288);
        xsim_sc_channel<0, bool > *p_30_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_bready.bind(*p_30_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_30_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_30->s_axi_araddr.bind(*p_30_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->s_axi_arlen.bind(*p_30_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_arburst.bind(*p_30_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_arlock.bind(*p_30_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->s_axi_arcache.bind(*p_30_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->s_axi_arprot.bind(*p_30_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->s_axi_arqos.bind(*p_30_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_30_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_arvalid.bind(*p_30_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_30_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_arready.bind(*p_30_s_axi_arready);
        p_30_s_axi_arready->set_sv_netview_offsetfromdp(7038848);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_30_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_30->s_axi_rdata.bind(*p_30_s_axi_rdata);
        p_30_s_axi_rdata->set_sv_netview_offsetfromdp(7038904);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_rresp.bind(*p_30_s_axi_rresp);
        p_30_s_axi_rresp->set_sv_netview_offsetfromdp(7038960);
        xsim_sc_channel<0, bool > *p_30_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_rlast.bind(*p_30_s_axi_rlast);
        p_30_s_axi_rlast->set_sv_netview_offsetfromdp(7039016);
        xsim_sc_channel<0, bool > *p_30_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_rvalid.bind(*p_30_s_axi_rvalid);
        p_30_s_axi_rvalid->set_sv_netview_offsetfromdp(7039072);
        xsim_sc_channel<0, bool > *p_30_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_rready.bind(*p_30_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_30_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_30->m_axi_awaddr.bind(*p_30_m_axi_awaddr);
        p_30_m_axi_awaddr->set_sv_netview_offsetfromdp(7039184);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->m_axi_awlen.bind(*p_30_m_axi_awlen);
        p_30_m_axi_awlen->set_sv_netview_offsetfromdp(7039240);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->m_axi_awburst.bind(*p_30_m_axi_awburst);
        p_30_m_axi_awburst->set_sv_netview_offsetfromdp(7039296);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->m_axi_awlock.bind(*p_30_m_axi_awlock);
        p_30_m_axi_awlock->set_sv_netview_offsetfromdp(7039352);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->m_axi_awcache.bind(*p_30_m_axi_awcache);
        p_30_m_axi_awcache->set_sv_netview_offsetfromdp(7039408);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->m_axi_awprot.bind(*p_30_m_axi_awprot);
        p_30_m_axi_awprot->set_sv_netview_offsetfromdp(7039464);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->m_axi_awqos.bind(*p_30_m_axi_awqos);
        p_30_m_axi_awqos->set_sv_netview_offsetfromdp(7039520);
        xsim_sc_channel<0, bool > *p_30_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_awvalid.bind(*p_30_m_axi_awvalid);
        p_30_m_axi_awvalid->set_sv_netview_offsetfromdp(7039576);
        xsim_sc_channel<0, bool > *p_30_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_awready.bind(*p_30_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_30_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_30->m_axi_wdata.bind(*p_30_m_axi_wdata);
        p_30_m_axi_wdata->set_sv_netview_offsetfromdp(7039688);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_30_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_30->m_axi_wstrb.bind(*p_30_m_axi_wstrb);
        p_30_m_axi_wstrb->set_sv_netview_offsetfromdp(7039744);
        xsim_sc_channel<0, bool > *p_30_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_wlast.bind(*p_30_m_axi_wlast);
        p_30_m_axi_wlast->set_sv_netview_offsetfromdp(7039800);
        xsim_sc_channel<0, bool > *p_30_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_wvalid.bind(*p_30_m_axi_wvalid);
        p_30_m_axi_wvalid->set_sv_netview_offsetfromdp(7039856);
        xsim_sc_channel<0, bool > *p_30_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_wready.bind(*p_30_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->m_axi_bresp.bind(*p_30_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_30_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_bvalid.bind(*p_30_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_30_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_bready.bind(*p_30_m_axi_bready);
        p_30_m_axi_bready->set_sv_netview_offsetfromdp(7040080);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_30_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_30->m_axi_araddr.bind(*p_30_m_axi_araddr);
        p_30_m_axi_araddr->set_sv_netview_offsetfromdp(7040136);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->m_axi_arlen.bind(*p_30_m_axi_arlen);
        p_30_m_axi_arlen->set_sv_netview_offsetfromdp(7040192);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->m_axi_arburst.bind(*p_30_m_axi_arburst);
        p_30_m_axi_arburst->set_sv_netview_offsetfromdp(7040248);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->m_axi_arlock.bind(*p_30_m_axi_arlock);
        p_30_m_axi_arlock->set_sv_netview_offsetfromdp(7040304);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->m_axi_arcache.bind(*p_30_m_axi_arcache);
        p_30_m_axi_arcache->set_sv_netview_offsetfromdp(7040360);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->m_axi_arprot.bind(*p_30_m_axi_arprot);
        p_30_m_axi_arprot->set_sv_netview_offsetfromdp(7040416);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->m_axi_arqos.bind(*p_30_m_axi_arqos);
        p_30_m_axi_arqos->set_sv_netview_offsetfromdp(7040472);
        xsim_sc_channel<0, bool > *p_30_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_arvalid.bind(*p_30_m_axi_arvalid);
        p_30_m_axi_arvalid->set_sv_netview_offsetfromdp(7040528);
        xsim_sc_channel<0, bool > *p_30_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_arready.bind(*p_30_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_30_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_30->m_axi_rdata.bind(*p_30_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->m_axi_rresp.bind(*p_30_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_30_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_rlast.bind(*p_30_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_30_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_rvalid.bind(*p_30_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_30_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_rready.bind(*p_30_m_axi_rready);
        p_30_m_axi_rready->set_sv_netview_offsetfromdp(7040864);
        sc_inst_31 = new bd_5dca_vip_S01_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.vip_S01");
        sc_inst_31->xsim_set_dbg_index(867);
        xsim_sc_channel<0, bool > *p_31_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_31->aclk.bind(*p_31_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_31_aclk);
        xsim_sc_channel<0, bool > *p_31_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_31->aresetn.bind(*p_31_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_31_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_31_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_31->s_axi_awaddr.bind(*p_31_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->s_axi_awlen.bind(*p_31_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->s_axi_awburst.bind(*p_31_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->s_axi_awlock.bind(*p_31_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->s_axi_awcache.bind(*p_31_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->s_axi_awprot.bind(*p_31_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->s_axi_awqos.bind(*p_31_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_31_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_awvalid.bind(*p_31_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_31_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_awready.bind(*p_31_s_axi_awready);
        p_31_s_axi_awready->set_sv_netview_offsetfromdp(7041528);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_31_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_31->s_axi_wdata.bind(*p_31_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_31_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_31->s_axi_wstrb.bind(*p_31_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_31_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_wlast.bind(*p_31_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_31_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_wvalid.bind(*p_31_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_31_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_wready.bind(*p_31_s_axi_wready);
        p_31_s_axi_wready->set_sv_netview_offsetfromdp(7041808);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->s_axi_bresp.bind(*p_31_s_axi_bresp);
        p_31_s_axi_bresp->set_sv_netview_offsetfromdp(7041864);
        xsim_sc_channel<0, bool > *p_31_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_bvalid.bind(*p_31_s_axi_bvalid);
        p_31_s_axi_bvalid->set_sv_netview_offsetfromdp(7041920);
        xsim_sc_channel<0, bool > *p_31_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_bready.bind(*p_31_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_31_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_31->s_axi_araddr.bind(*p_31_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->s_axi_arlen.bind(*p_31_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->s_axi_arburst.bind(*p_31_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->s_axi_arlock.bind(*p_31_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->s_axi_arcache.bind(*p_31_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->s_axi_arprot.bind(*p_31_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->s_axi_arqos.bind(*p_31_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_31_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_arvalid.bind(*p_31_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_31_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_arready.bind(*p_31_s_axi_arready);
        p_31_s_axi_arready->set_sv_netview_offsetfromdp(7042480);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_31_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_31->s_axi_rdata.bind(*p_31_s_axi_rdata);
        p_31_s_axi_rdata->set_sv_netview_offsetfromdp(7042536);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->s_axi_rresp.bind(*p_31_s_axi_rresp);
        p_31_s_axi_rresp->set_sv_netview_offsetfromdp(7042592);
        xsim_sc_channel<0, bool > *p_31_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_rlast.bind(*p_31_s_axi_rlast);
        p_31_s_axi_rlast->set_sv_netview_offsetfromdp(7042648);
        xsim_sc_channel<0, bool > *p_31_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_rvalid.bind(*p_31_s_axi_rvalid);
        p_31_s_axi_rvalid->set_sv_netview_offsetfromdp(7042704);
        xsim_sc_channel<0, bool > *p_31_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_rready.bind(*p_31_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_31_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_31->m_axi_awaddr.bind(*p_31_m_axi_awaddr);
        p_31_m_axi_awaddr->set_sv_netview_offsetfromdp(7042816);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->m_axi_awlen.bind(*p_31_m_axi_awlen);
        p_31_m_axi_awlen->set_sv_netview_offsetfromdp(7042872);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->m_axi_awburst.bind(*p_31_m_axi_awburst);
        p_31_m_axi_awburst->set_sv_netview_offsetfromdp(7042928);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->m_axi_awlock.bind(*p_31_m_axi_awlock);
        p_31_m_axi_awlock->set_sv_netview_offsetfromdp(7042984);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->m_axi_awcache.bind(*p_31_m_axi_awcache);
        p_31_m_axi_awcache->set_sv_netview_offsetfromdp(7043040);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->m_axi_awprot.bind(*p_31_m_axi_awprot);
        p_31_m_axi_awprot->set_sv_netview_offsetfromdp(7043096);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->m_axi_awqos.bind(*p_31_m_axi_awqos);
        p_31_m_axi_awqos->set_sv_netview_offsetfromdp(7043152);
        xsim_sc_channel<0, bool > *p_31_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_awvalid.bind(*p_31_m_axi_awvalid);
        p_31_m_axi_awvalid->set_sv_netview_offsetfromdp(7043208);
        xsim_sc_channel<0, bool > *p_31_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_awready.bind(*p_31_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_31_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_31->m_axi_wdata.bind(*p_31_m_axi_wdata);
        p_31_m_axi_wdata->set_sv_netview_offsetfromdp(7043320);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_31_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_31->m_axi_wstrb.bind(*p_31_m_axi_wstrb);
        p_31_m_axi_wstrb->set_sv_netview_offsetfromdp(7043376);
        xsim_sc_channel<0, bool > *p_31_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_wlast.bind(*p_31_m_axi_wlast);
        p_31_m_axi_wlast->set_sv_netview_offsetfromdp(7043432);
        xsim_sc_channel<0, bool > *p_31_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_wvalid.bind(*p_31_m_axi_wvalid);
        p_31_m_axi_wvalid->set_sv_netview_offsetfromdp(7043488);
        xsim_sc_channel<0, bool > *p_31_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_wready.bind(*p_31_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->m_axi_bresp.bind(*p_31_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_31_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_bvalid.bind(*p_31_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_31_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_bready.bind(*p_31_m_axi_bready);
        p_31_m_axi_bready->set_sv_netview_offsetfromdp(7043712);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_31_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_31->m_axi_araddr.bind(*p_31_m_axi_araddr);
        p_31_m_axi_araddr->set_sv_netview_offsetfromdp(7043768);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->m_axi_arlen.bind(*p_31_m_axi_arlen);
        p_31_m_axi_arlen->set_sv_netview_offsetfromdp(7043824);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->m_axi_arburst.bind(*p_31_m_axi_arburst);
        p_31_m_axi_arburst->set_sv_netview_offsetfromdp(7043880);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->m_axi_arlock.bind(*p_31_m_axi_arlock);
        p_31_m_axi_arlock->set_sv_netview_offsetfromdp(7043936);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->m_axi_arcache.bind(*p_31_m_axi_arcache);
        p_31_m_axi_arcache->set_sv_netview_offsetfromdp(7043992);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->m_axi_arprot.bind(*p_31_m_axi_arprot);
        p_31_m_axi_arprot->set_sv_netview_offsetfromdp(7044048);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->m_axi_arqos.bind(*p_31_m_axi_arqos);
        p_31_m_axi_arqos->set_sv_netview_offsetfromdp(7044104);
        xsim_sc_channel<0, bool > *p_31_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_arvalid.bind(*p_31_m_axi_arvalid);
        p_31_m_axi_arvalid->set_sv_netview_offsetfromdp(7044160);
        xsim_sc_channel<0, bool > *p_31_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_arready.bind(*p_31_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_31_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_31->m_axi_rdata.bind(*p_31_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->m_axi_rresp.bind(*p_31_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_31_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_rlast.bind(*p_31_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_31_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_rvalid.bind(*p_31_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_31_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_rready.bind(*p_31_m_axi_rready);
        p_31_m_axi_rready->set_sv_netview_offsetfromdp(7044496);
        sc_inst_32 = new bd_5dca_vip_S02_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.vip_S02");
        sc_inst_32->xsim_set_dbg_index(868);
        xsim_sc_channel<0, bool > *p_32_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_32->aclk.bind(*p_32_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_32_aclk);
        xsim_sc_channel<0, bool > *p_32_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_32->aresetn.bind(*p_32_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_32_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_32_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_32->s_axi_awaddr.bind(*p_32_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->s_axi_awlen.bind(*p_32_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->s_axi_awburst.bind(*p_32_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->s_axi_awlock.bind(*p_32_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->s_axi_awcache.bind(*p_32_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->s_axi_awprot.bind(*p_32_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->s_axi_awqos.bind(*p_32_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_32_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_awvalid.bind(*p_32_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_32_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_awready.bind(*p_32_s_axi_awready);
        p_32_s_axi_awready->set_sv_netview_offsetfromdp(7045160);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_32_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_32->s_axi_wdata.bind(*p_32_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_32_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_32->s_axi_wstrb.bind(*p_32_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_32_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_wlast.bind(*p_32_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_32_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_wvalid.bind(*p_32_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_32_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_wready.bind(*p_32_s_axi_wready);
        p_32_s_axi_wready->set_sv_netview_offsetfromdp(7045440);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->s_axi_bresp.bind(*p_32_s_axi_bresp);
        p_32_s_axi_bresp->set_sv_netview_offsetfromdp(7045496);
        xsim_sc_channel<0, bool > *p_32_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_bvalid.bind(*p_32_s_axi_bvalid);
        p_32_s_axi_bvalid->set_sv_netview_offsetfromdp(7045552);
        xsim_sc_channel<0, bool > *p_32_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_bready.bind(*p_32_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_32_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_32->s_axi_araddr.bind(*p_32_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->s_axi_arlen.bind(*p_32_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->s_axi_arburst.bind(*p_32_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->s_axi_arlock.bind(*p_32_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->s_axi_arcache.bind(*p_32_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->s_axi_arprot.bind(*p_32_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->s_axi_arqos.bind(*p_32_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_32_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_arvalid.bind(*p_32_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_32_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_arready.bind(*p_32_s_axi_arready);
        p_32_s_axi_arready->set_sv_netview_offsetfromdp(7046112);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_32_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_32->s_axi_rdata.bind(*p_32_s_axi_rdata);
        p_32_s_axi_rdata->set_sv_netview_offsetfromdp(7046168);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->s_axi_rresp.bind(*p_32_s_axi_rresp);
        p_32_s_axi_rresp->set_sv_netview_offsetfromdp(7046224);
        xsim_sc_channel<0, bool > *p_32_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_rlast.bind(*p_32_s_axi_rlast);
        p_32_s_axi_rlast->set_sv_netview_offsetfromdp(7046280);
        xsim_sc_channel<0, bool > *p_32_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_rvalid.bind(*p_32_s_axi_rvalid);
        p_32_s_axi_rvalid->set_sv_netview_offsetfromdp(7046336);
        xsim_sc_channel<0, bool > *p_32_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_rready.bind(*p_32_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_32_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_32->m_axi_awaddr.bind(*p_32_m_axi_awaddr);
        p_32_m_axi_awaddr->set_sv_netview_offsetfromdp(7046448);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->m_axi_awlen.bind(*p_32_m_axi_awlen);
        p_32_m_axi_awlen->set_sv_netview_offsetfromdp(7046504);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->m_axi_awburst.bind(*p_32_m_axi_awburst);
        p_32_m_axi_awburst->set_sv_netview_offsetfromdp(7046560);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->m_axi_awlock.bind(*p_32_m_axi_awlock);
        p_32_m_axi_awlock->set_sv_netview_offsetfromdp(7046616);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->m_axi_awcache.bind(*p_32_m_axi_awcache);
        p_32_m_axi_awcache->set_sv_netview_offsetfromdp(7046672);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->m_axi_awprot.bind(*p_32_m_axi_awprot);
        p_32_m_axi_awprot->set_sv_netview_offsetfromdp(7046728);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->m_axi_awqos.bind(*p_32_m_axi_awqos);
        p_32_m_axi_awqos->set_sv_netview_offsetfromdp(7046784);
        xsim_sc_channel<0, bool > *p_32_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_awvalid.bind(*p_32_m_axi_awvalid);
        p_32_m_axi_awvalid->set_sv_netview_offsetfromdp(7046840);
        xsim_sc_channel<0, bool > *p_32_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_awready.bind(*p_32_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_32_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_32->m_axi_wdata.bind(*p_32_m_axi_wdata);
        p_32_m_axi_wdata->set_sv_netview_offsetfromdp(7046952);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_32_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_32->m_axi_wstrb.bind(*p_32_m_axi_wstrb);
        p_32_m_axi_wstrb->set_sv_netview_offsetfromdp(7047008);
        xsim_sc_channel<0, bool > *p_32_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_wlast.bind(*p_32_m_axi_wlast);
        p_32_m_axi_wlast->set_sv_netview_offsetfromdp(7047064);
        xsim_sc_channel<0, bool > *p_32_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_wvalid.bind(*p_32_m_axi_wvalid);
        p_32_m_axi_wvalid->set_sv_netview_offsetfromdp(7047120);
        xsim_sc_channel<0, bool > *p_32_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_wready.bind(*p_32_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->m_axi_bresp.bind(*p_32_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_32_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_bvalid.bind(*p_32_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_32_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_bready.bind(*p_32_m_axi_bready);
        p_32_m_axi_bready->set_sv_netview_offsetfromdp(7047344);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_32_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_32->m_axi_araddr.bind(*p_32_m_axi_araddr);
        p_32_m_axi_araddr->set_sv_netview_offsetfromdp(7047400);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->m_axi_arlen.bind(*p_32_m_axi_arlen);
        p_32_m_axi_arlen->set_sv_netview_offsetfromdp(7047456);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->m_axi_arburst.bind(*p_32_m_axi_arburst);
        p_32_m_axi_arburst->set_sv_netview_offsetfromdp(7047512);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->m_axi_arlock.bind(*p_32_m_axi_arlock);
        p_32_m_axi_arlock->set_sv_netview_offsetfromdp(7047568);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->m_axi_arcache.bind(*p_32_m_axi_arcache);
        p_32_m_axi_arcache->set_sv_netview_offsetfromdp(7047624);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->m_axi_arprot.bind(*p_32_m_axi_arprot);
        p_32_m_axi_arprot->set_sv_netview_offsetfromdp(7047680);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->m_axi_arqos.bind(*p_32_m_axi_arqos);
        p_32_m_axi_arqos->set_sv_netview_offsetfromdp(7047736);
        xsim_sc_channel<0, bool > *p_32_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_arvalid.bind(*p_32_m_axi_arvalid);
        p_32_m_axi_arvalid->set_sv_netview_offsetfromdp(7047792);
        xsim_sc_channel<0, bool > *p_32_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_arready.bind(*p_32_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_32_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_32->m_axi_rdata.bind(*p_32_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->m_axi_rresp.bind(*p_32_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_32_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_rlast.bind(*p_32_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_32_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_rvalid.bind(*p_32_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_32_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_rready.bind(*p_32_m_axi_rready);
        p_32_m_axi_rready->set_sv_netview_offsetfromdp(7048128);
        sc_inst_33 = new bd_5dca_vip_S03_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.vip_S03");
        sc_inst_33->xsim_set_dbg_index(869);
        xsim_sc_channel<0, bool > *p_33_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_33->aclk.bind(*p_33_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_33_aclk);
        xsim_sc_channel<0, bool > *p_33_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_33->aresetn.bind(*p_33_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_33_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_33_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_33->s_axi_awaddr.bind(*p_33_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->s_axi_awlen.bind(*p_33_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->s_axi_awburst.bind(*p_33_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->s_axi_awlock.bind(*p_33_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->s_axi_awcache.bind(*p_33_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->s_axi_awprot.bind(*p_33_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->s_axi_awqos.bind(*p_33_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_33_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_awvalid.bind(*p_33_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_33_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_awready.bind(*p_33_s_axi_awready);
        p_33_s_axi_awready->set_sv_netview_offsetfromdp(7048792);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_33_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_33->s_axi_wdata.bind(*p_33_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_33_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_33->s_axi_wstrb.bind(*p_33_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_33_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_wlast.bind(*p_33_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_33_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_wvalid.bind(*p_33_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_33_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_wready.bind(*p_33_s_axi_wready);
        p_33_s_axi_wready->set_sv_netview_offsetfromdp(7049072);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->s_axi_bresp.bind(*p_33_s_axi_bresp);
        p_33_s_axi_bresp->set_sv_netview_offsetfromdp(7049128);
        xsim_sc_channel<0, bool > *p_33_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_bvalid.bind(*p_33_s_axi_bvalid);
        p_33_s_axi_bvalid->set_sv_netview_offsetfromdp(7049184);
        xsim_sc_channel<0, bool > *p_33_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_bready.bind(*p_33_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_33_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_33->s_axi_araddr.bind(*p_33_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->s_axi_arlen.bind(*p_33_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->s_axi_arburst.bind(*p_33_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->s_axi_arlock.bind(*p_33_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->s_axi_arcache.bind(*p_33_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->s_axi_arprot.bind(*p_33_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->s_axi_arqos.bind(*p_33_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_33_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_arvalid.bind(*p_33_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_33_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_arready.bind(*p_33_s_axi_arready);
        p_33_s_axi_arready->set_sv_netview_offsetfromdp(7049744);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_33_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_33->s_axi_rdata.bind(*p_33_s_axi_rdata);
        p_33_s_axi_rdata->set_sv_netview_offsetfromdp(7049800);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->s_axi_rresp.bind(*p_33_s_axi_rresp);
        p_33_s_axi_rresp->set_sv_netview_offsetfromdp(7049856);
        xsim_sc_channel<0, bool > *p_33_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_rlast.bind(*p_33_s_axi_rlast);
        p_33_s_axi_rlast->set_sv_netview_offsetfromdp(7049912);
        xsim_sc_channel<0, bool > *p_33_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_rvalid.bind(*p_33_s_axi_rvalid);
        p_33_s_axi_rvalid->set_sv_netview_offsetfromdp(7049968);
        xsim_sc_channel<0, bool > *p_33_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_rready.bind(*p_33_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_33_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_33->m_axi_awaddr.bind(*p_33_m_axi_awaddr);
        p_33_m_axi_awaddr->set_sv_netview_offsetfromdp(7050080);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->m_axi_awlen.bind(*p_33_m_axi_awlen);
        p_33_m_axi_awlen->set_sv_netview_offsetfromdp(7050136);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->m_axi_awburst.bind(*p_33_m_axi_awburst);
        p_33_m_axi_awburst->set_sv_netview_offsetfromdp(7050192);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->m_axi_awlock.bind(*p_33_m_axi_awlock);
        p_33_m_axi_awlock->set_sv_netview_offsetfromdp(7050248);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->m_axi_awcache.bind(*p_33_m_axi_awcache);
        p_33_m_axi_awcache->set_sv_netview_offsetfromdp(7050304);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->m_axi_awprot.bind(*p_33_m_axi_awprot);
        p_33_m_axi_awprot->set_sv_netview_offsetfromdp(7050360);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->m_axi_awqos.bind(*p_33_m_axi_awqos);
        p_33_m_axi_awqos->set_sv_netview_offsetfromdp(7050416);
        xsim_sc_channel<0, bool > *p_33_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_awvalid.bind(*p_33_m_axi_awvalid);
        p_33_m_axi_awvalid->set_sv_netview_offsetfromdp(7050472);
        xsim_sc_channel<0, bool > *p_33_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_awready.bind(*p_33_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_33_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_33->m_axi_wdata.bind(*p_33_m_axi_wdata);
        p_33_m_axi_wdata->set_sv_netview_offsetfromdp(7050584);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_33_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_33->m_axi_wstrb.bind(*p_33_m_axi_wstrb);
        p_33_m_axi_wstrb->set_sv_netview_offsetfromdp(7050640);
        xsim_sc_channel<0, bool > *p_33_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_wlast.bind(*p_33_m_axi_wlast);
        p_33_m_axi_wlast->set_sv_netview_offsetfromdp(7050696);
        xsim_sc_channel<0, bool > *p_33_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_wvalid.bind(*p_33_m_axi_wvalid);
        p_33_m_axi_wvalid->set_sv_netview_offsetfromdp(7050752);
        xsim_sc_channel<0, bool > *p_33_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_wready.bind(*p_33_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->m_axi_bresp.bind(*p_33_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_33_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_bvalid.bind(*p_33_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_33_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_bready.bind(*p_33_m_axi_bready);
        p_33_m_axi_bready->set_sv_netview_offsetfromdp(7050976);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_33_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_33->m_axi_araddr.bind(*p_33_m_axi_araddr);
        p_33_m_axi_araddr->set_sv_netview_offsetfromdp(7051032);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->m_axi_arlen.bind(*p_33_m_axi_arlen);
        p_33_m_axi_arlen->set_sv_netview_offsetfromdp(7051088);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->m_axi_arburst.bind(*p_33_m_axi_arburst);
        p_33_m_axi_arburst->set_sv_netview_offsetfromdp(7051144);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->m_axi_arlock.bind(*p_33_m_axi_arlock);
        p_33_m_axi_arlock->set_sv_netview_offsetfromdp(7051200);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->m_axi_arcache.bind(*p_33_m_axi_arcache);
        p_33_m_axi_arcache->set_sv_netview_offsetfromdp(7051256);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->m_axi_arprot.bind(*p_33_m_axi_arprot);
        p_33_m_axi_arprot->set_sv_netview_offsetfromdp(7051312);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->m_axi_arqos.bind(*p_33_m_axi_arqos);
        p_33_m_axi_arqos->set_sv_netview_offsetfromdp(7051368);
        xsim_sc_channel<0, bool > *p_33_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_arvalid.bind(*p_33_m_axi_arvalid);
        p_33_m_axi_arvalid->set_sv_netview_offsetfromdp(7051424);
        xsim_sc_channel<0, bool > *p_33_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_arready.bind(*p_33_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_33_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_33->m_axi_rdata.bind(*p_33_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->m_axi_rresp.bind(*p_33_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_33_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_rlast.bind(*p_33_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_33_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_rvalid.bind(*p_33_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_33_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_rready.bind(*p_33_m_axi_rready);
        p_33_m_axi_rready->set_sv_netview_offsetfromdp(7051760);
        sc_inst_34 = new pfm_dynamic_irq_const_tieoff_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.irq_const_tieoff");
        sc_inst_34->xsim_set_dbg_index(45);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_dout = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->dout.bind(*p_34_dout);
        p_34_dout->set_sv_netview_offsetfromdp(7221200);
        sc_inst_35 = new bd_d216_sci(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.bd_d216_sci_inst");
        sc_inst_35->xsim_set_dbg_index(1326);
        sc_inst_36 = new bd_d216_interconnect_M00_AXI_MEM00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_m00_axi_mem00");
        sc_inst_36->xsim_set_dbg_index(2418);
        xsim_sc_channel<0, bool > *p_36_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_36->aclk.bind(*p_36_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_36_aclk);
        xsim_sc_channel<0, bool > *p_36_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_36->aresetn.bind(*p_36_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_36_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->S00_AXI_awid.bind(*p_36_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_36_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_36->S00_AXI_awaddr.bind(*p_36_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->S00_AXI_awlen.bind(*p_36_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->S00_AXI_awsize.bind(*p_36_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->S00_AXI_awburst.bind(*p_36_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->S00_AXI_awlock.bind(*p_36_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->S00_AXI_awcache.bind(*p_36_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->S00_AXI_awprot.bind(*p_36_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->S00_AXI_awqos.bind(*p_36_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_36_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_36->S00_AXI_awuser.bind(*p_36_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_awvalid.bind(*p_36_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_awready.bind(*p_36_S00_AXI_awready);
        p_36_S00_AXI_awready->set_sv_netview_offsetfromdp(7872848);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_36_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_36->S00_AXI_wdata.bind(*p_36_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_36_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_36->S00_AXI_wstrb.bind(*p_36_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_wlast.bind(*p_36_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_36_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_36->S00_AXI_wuser.bind(*p_36_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_wvalid.bind(*p_36_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_wready.bind(*p_36_S00_AXI_wready);
        p_36_S00_AXI_wready->set_sv_netview_offsetfromdp(7873184);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->S00_AXI_bid.bind(*p_36_S00_AXI_bid);
        p_36_S00_AXI_bid->set_sv_netview_offsetfromdp(7873240);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->S00_AXI_bresp.bind(*p_36_S00_AXI_bresp);
        p_36_S00_AXI_bresp->set_sv_netview_offsetfromdp(7873296);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_36_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_36->S00_AXI_buser.bind(*p_36_S00_AXI_buser);
        p_36_S00_AXI_buser->set_sv_netview_offsetfromdp(7873352);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_bvalid.bind(*p_36_S00_AXI_bvalid);
        p_36_S00_AXI_bvalid->set_sv_netview_offsetfromdp(7873408);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_bready.bind(*p_36_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->S00_AXI_arid.bind(*p_36_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_36_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_36->S00_AXI_araddr.bind(*p_36_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->S00_AXI_arlen.bind(*p_36_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->S00_AXI_arsize.bind(*p_36_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->S00_AXI_arburst.bind(*p_36_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->S00_AXI_arlock.bind(*p_36_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->S00_AXI_arcache.bind(*p_36_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->S00_AXI_arprot.bind(*p_36_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->S00_AXI_arqos.bind(*p_36_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_36_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_36->S00_AXI_aruser.bind(*p_36_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_arvalid.bind(*p_36_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_arready.bind(*p_36_S00_AXI_arready);
        p_36_S00_AXI_arready->set_sv_netview_offsetfromdp(7874136);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->S00_AXI_rid.bind(*p_36_S00_AXI_rid);
        p_36_S00_AXI_rid->set_sv_netview_offsetfromdp(7874192);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_36_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_36->S00_AXI_rdata.bind(*p_36_S00_AXI_rdata);
        p_36_S00_AXI_rdata->set_sv_netview_offsetfromdp(7874248);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->S00_AXI_rresp.bind(*p_36_S00_AXI_rresp);
        p_36_S00_AXI_rresp->set_sv_netview_offsetfromdp(7874304);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_rlast.bind(*p_36_S00_AXI_rlast);
        p_36_S00_AXI_rlast->set_sv_netview_offsetfromdp(7874360);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_36_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_36->S00_AXI_ruser.bind(*p_36_S00_AXI_ruser);
        p_36_S00_AXI_ruser->set_sv_netview_offsetfromdp(7874416);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_rvalid.bind(*p_36_S00_AXI_rvalid);
        p_36_S00_AXI_rvalid->set_sv_netview_offsetfromdp(7874472);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_rready.bind(*p_36_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_rready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_36_M00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_36->M00_AXI_awaddr.bind(*p_36_M00_AXI_awaddr);
        p_36_M00_AXI_awaddr->set_sv_netview_offsetfromdp(7874584);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->M00_AXI_awlen.bind(*p_36_M00_AXI_awlen);
        p_36_M00_AXI_awlen->set_sv_netview_offsetfromdp(7874640);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M00_AXI_awsize.bind(*p_36_M00_AXI_awsize);
        p_36_M00_AXI_awsize->set_sv_netview_offsetfromdp(7874696);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M00_AXI_awburst.bind(*p_36_M00_AXI_awburst);
        p_36_M00_AXI_awburst->set_sv_netview_offsetfromdp(7874752);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M00_AXI_awlock.bind(*p_36_M00_AXI_awlock);
        p_36_M00_AXI_awlock->set_sv_netview_offsetfromdp(7874808);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M00_AXI_awcache.bind(*p_36_M00_AXI_awcache);
        p_36_M00_AXI_awcache->set_sv_netview_offsetfromdp(7874864);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M00_AXI_awprot.bind(*p_36_M00_AXI_awprot);
        p_36_M00_AXI_awprot->set_sv_netview_offsetfromdp(7874920);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M00_AXI_awqos.bind(*p_36_M00_AXI_awqos);
        p_36_M00_AXI_awqos->set_sv_netview_offsetfromdp(7874976);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_awvalid.bind(*p_36_M00_AXI_awvalid);
        p_36_M00_AXI_awvalid->set_sv_netview_offsetfromdp(7875032);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_awready.bind(*p_36_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_36_M00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_36->M00_AXI_wdata.bind(*p_36_M00_AXI_wdata);
        p_36_M00_AXI_wdata->set_sv_netview_offsetfromdp(7875144);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M00_AXI_wstrb.bind(*p_36_M00_AXI_wstrb);
        p_36_M00_AXI_wstrb->set_sv_netview_offsetfromdp(7875200);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_wlast.bind(*p_36_M00_AXI_wlast);
        p_36_M00_AXI_wlast->set_sv_netview_offsetfromdp(7875256);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_wvalid.bind(*p_36_M00_AXI_wvalid);
        p_36_M00_AXI_wvalid->set_sv_netview_offsetfromdp(7875312);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_wready.bind(*p_36_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M00_AXI_bresp.bind(*p_36_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_bvalid.bind(*p_36_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_bready.bind(*p_36_M00_AXI_bready);
        p_36_M00_AXI_bready->set_sv_netview_offsetfromdp(7875536);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_36_M00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_36->M00_AXI_araddr.bind(*p_36_M00_AXI_araddr);
        p_36_M00_AXI_araddr->set_sv_netview_offsetfromdp(7875592);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->M00_AXI_arlen.bind(*p_36_M00_AXI_arlen);
        p_36_M00_AXI_arlen->set_sv_netview_offsetfromdp(7875648);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M00_AXI_arsize.bind(*p_36_M00_AXI_arsize);
        p_36_M00_AXI_arsize->set_sv_netview_offsetfromdp(7875704);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M00_AXI_arburst.bind(*p_36_M00_AXI_arburst);
        p_36_M00_AXI_arburst->set_sv_netview_offsetfromdp(7875760);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M00_AXI_arlock.bind(*p_36_M00_AXI_arlock);
        p_36_M00_AXI_arlock->set_sv_netview_offsetfromdp(7875816);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M00_AXI_arcache.bind(*p_36_M00_AXI_arcache);
        p_36_M00_AXI_arcache->set_sv_netview_offsetfromdp(7875872);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M00_AXI_arprot.bind(*p_36_M00_AXI_arprot);
        p_36_M00_AXI_arprot->set_sv_netview_offsetfromdp(7875928);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M00_AXI_arqos.bind(*p_36_M00_AXI_arqos);
        p_36_M00_AXI_arqos->set_sv_netview_offsetfromdp(7875984);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_arvalid.bind(*p_36_M00_AXI_arvalid);
        p_36_M00_AXI_arvalid->set_sv_netview_offsetfromdp(7876040);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_arready.bind(*p_36_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_36_M00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_36->M00_AXI_rdata.bind(*p_36_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M00_AXI_rresp.bind(*p_36_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_rlast.bind(*p_36_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_rvalid.bind(*p_36_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_rready.bind(*p_36_M00_AXI_rready);
        p_36_M00_AXI_rready->set_sv_netview_offsetfromdp(7876376);
        sc_inst_37 = new bd_d216_interconnect_PLRAM_MEM00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem00");
        sc_inst_37->xsim_set_dbg_index(2419);
        xsim_sc_channel<0, bool > *p_37_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_37->aclk.bind(*p_37_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_37_aclk);
        xsim_sc_channel<0, bool > *p_37_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_37->aresetn.bind(*p_37_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_37_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->S00_AXI_awid.bind(*p_37_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_37_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_37->S00_AXI_awaddr.bind(*p_37_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->S00_AXI_awlen.bind(*p_37_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->S00_AXI_awsize.bind(*p_37_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->S00_AXI_awburst.bind(*p_37_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->S00_AXI_awlock.bind(*p_37_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->S00_AXI_awcache.bind(*p_37_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->S00_AXI_awprot.bind(*p_37_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->S00_AXI_awqos.bind(*p_37_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_37_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_37->S00_AXI_awuser.bind(*p_37_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_awvalid.bind(*p_37_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_awready.bind(*p_37_S00_AXI_awready);
        p_37_S00_AXI_awready->set_sv_netview_offsetfromdp(7877208);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_37_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_37->S00_AXI_wdata.bind(*p_37_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_37_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_37->S00_AXI_wstrb.bind(*p_37_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_wlast.bind(*p_37_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_37_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_37->S00_AXI_wuser.bind(*p_37_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_wvalid.bind(*p_37_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_wready.bind(*p_37_S00_AXI_wready);
        p_37_S00_AXI_wready->set_sv_netview_offsetfromdp(7877544);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->S00_AXI_bid.bind(*p_37_S00_AXI_bid);
        p_37_S00_AXI_bid->set_sv_netview_offsetfromdp(7877600);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->S00_AXI_bresp.bind(*p_37_S00_AXI_bresp);
        p_37_S00_AXI_bresp->set_sv_netview_offsetfromdp(7877656);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_37_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_37->S00_AXI_buser.bind(*p_37_S00_AXI_buser);
        p_37_S00_AXI_buser->set_sv_netview_offsetfromdp(7877712);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_bvalid.bind(*p_37_S00_AXI_bvalid);
        p_37_S00_AXI_bvalid->set_sv_netview_offsetfromdp(7877768);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_bready.bind(*p_37_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->S00_AXI_arid.bind(*p_37_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_37_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_37->S00_AXI_araddr.bind(*p_37_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->S00_AXI_arlen.bind(*p_37_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->S00_AXI_arsize.bind(*p_37_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->S00_AXI_arburst.bind(*p_37_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->S00_AXI_arlock.bind(*p_37_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->S00_AXI_arcache.bind(*p_37_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->S00_AXI_arprot.bind(*p_37_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->S00_AXI_arqos.bind(*p_37_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_37_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_37->S00_AXI_aruser.bind(*p_37_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_arvalid.bind(*p_37_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_arready.bind(*p_37_S00_AXI_arready);
        p_37_S00_AXI_arready->set_sv_netview_offsetfromdp(7878496);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->S00_AXI_rid.bind(*p_37_S00_AXI_rid);
        p_37_S00_AXI_rid->set_sv_netview_offsetfromdp(7878552);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_37_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_37->S00_AXI_rdata.bind(*p_37_S00_AXI_rdata);
        p_37_S00_AXI_rdata->set_sv_netview_offsetfromdp(7878608);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->S00_AXI_rresp.bind(*p_37_S00_AXI_rresp);
        p_37_S00_AXI_rresp->set_sv_netview_offsetfromdp(7878664);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_rlast.bind(*p_37_S00_AXI_rlast);
        p_37_S00_AXI_rlast->set_sv_netview_offsetfromdp(7878720);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_37_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_37->S00_AXI_ruser.bind(*p_37_S00_AXI_ruser);
        p_37_S00_AXI_ruser->set_sv_netview_offsetfromdp(7878776);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_rvalid.bind(*p_37_S00_AXI_rvalid);
        p_37_S00_AXI_rvalid->set_sv_netview_offsetfromdp(7878832);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_rready.bind(*p_37_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_37_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_37->M00_AXI_awaddr.bind(*p_37_M00_AXI_awaddr);
        p_37_M00_AXI_awaddr->set_sv_netview_offsetfromdp(7878944);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->M00_AXI_awlen.bind(*p_37_M00_AXI_awlen);
        p_37_M00_AXI_awlen->set_sv_netview_offsetfromdp(7879000);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M00_AXI_awsize.bind(*p_37_M00_AXI_awsize);
        p_37_M00_AXI_awsize->set_sv_netview_offsetfromdp(7879056);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M00_AXI_awburst.bind(*p_37_M00_AXI_awburst);
        p_37_M00_AXI_awburst->set_sv_netview_offsetfromdp(7879112);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M00_AXI_awlock.bind(*p_37_M00_AXI_awlock);
        p_37_M00_AXI_awlock->set_sv_netview_offsetfromdp(7879168);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M00_AXI_awcache.bind(*p_37_M00_AXI_awcache);
        p_37_M00_AXI_awcache->set_sv_netview_offsetfromdp(7879224);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M00_AXI_awprot.bind(*p_37_M00_AXI_awprot);
        p_37_M00_AXI_awprot->set_sv_netview_offsetfromdp(7879280);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M00_AXI_awqos.bind(*p_37_M00_AXI_awqos);
        p_37_M00_AXI_awqos->set_sv_netview_offsetfromdp(7879336);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_awvalid.bind(*p_37_M00_AXI_awvalid);
        p_37_M00_AXI_awvalid->set_sv_netview_offsetfromdp(7879392);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_awready.bind(*p_37_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_37_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_37->M00_AXI_wdata.bind(*p_37_M00_AXI_wdata);
        p_37_M00_AXI_wdata->set_sv_netview_offsetfromdp(7879504);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_37_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_37->M00_AXI_wstrb.bind(*p_37_M00_AXI_wstrb);
        p_37_M00_AXI_wstrb->set_sv_netview_offsetfromdp(7879560);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_wlast.bind(*p_37_M00_AXI_wlast);
        p_37_M00_AXI_wlast->set_sv_netview_offsetfromdp(7879616);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_wvalid.bind(*p_37_M00_AXI_wvalid);
        p_37_M00_AXI_wvalid->set_sv_netview_offsetfromdp(7879672);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_wready.bind(*p_37_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M00_AXI_bresp.bind(*p_37_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_bvalid.bind(*p_37_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_bready.bind(*p_37_M00_AXI_bready);
        p_37_M00_AXI_bready->set_sv_netview_offsetfromdp(7879896);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_37_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_37->M00_AXI_araddr.bind(*p_37_M00_AXI_araddr);
        p_37_M00_AXI_araddr->set_sv_netview_offsetfromdp(7879952);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->M00_AXI_arlen.bind(*p_37_M00_AXI_arlen);
        p_37_M00_AXI_arlen->set_sv_netview_offsetfromdp(7880008);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M00_AXI_arsize.bind(*p_37_M00_AXI_arsize);
        p_37_M00_AXI_arsize->set_sv_netview_offsetfromdp(7880064);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M00_AXI_arburst.bind(*p_37_M00_AXI_arburst);
        p_37_M00_AXI_arburst->set_sv_netview_offsetfromdp(7880120);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M00_AXI_arlock.bind(*p_37_M00_AXI_arlock);
        p_37_M00_AXI_arlock->set_sv_netview_offsetfromdp(7880176);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M00_AXI_arcache.bind(*p_37_M00_AXI_arcache);
        p_37_M00_AXI_arcache->set_sv_netview_offsetfromdp(7880232);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M00_AXI_arprot.bind(*p_37_M00_AXI_arprot);
        p_37_M00_AXI_arprot->set_sv_netview_offsetfromdp(7880288);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M00_AXI_arqos.bind(*p_37_M00_AXI_arqos);
        p_37_M00_AXI_arqos->set_sv_netview_offsetfromdp(7880344);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_arvalid.bind(*p_37_M00_AXI_arvalid);
        p_37_M00_AXI_arvalid->set_sv_netview_offsetfromdp(7880400);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_arready.bind(*p_37_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_37_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_37->M00_AXI_rdata.bind(*p_37_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M00_AXI_rresp.bind(*p_37_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_rlast.bind(*p_37_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_rvalid.bind(*p_37_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_rready.bind(*p_37_M00_AXI_rready);
        p_37_M00_AXI_rready->set_sv_netview_offsetfromdp(7880736);
        sc_inst_38 = new bd_d216_interconnect_PLRAM_MEM01_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem01");
        sc_inst_38->xsim_set_dbg_index(2420);
        xsim_sc_channel<0, bool > *p_38_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_38->aclk.bind(*p_38_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_38_aclk);
        xsim_sc_channel<0, bool > *p_38_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_38->aresetn.bind(*p_38_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_38_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->S00_AXI_awid.bind(*p_38_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_38_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_38->S00_AXI_awaddr.bind(*p_38_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->S00_AXI_awlen.bind(*p_38_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->S00_AXI_awsize.bind(*p_38_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->S00_AXI_awburst.bind(*p_38_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->S00_AXI_awlock.bind(*p_38_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->S00_AXI_awcache.bind(*p_38_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->S00_AXI_awprot.bind(*p_38_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->S00_AXI_awqos.bind(*p_38_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_38_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_38->S00_AXI_awuser.bind(*p_38_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_awvalid.bind(*p_38_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_awready.bind(*p_38_S00_AXI_awready);
        p_38_S00_AXI_awready->set_sv_netview_offsetfromdp(7881568);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_38_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_38->S00_AXI_wdata.bind(*p_38_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_38_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_38->S00_AXI_wstrb.bind(*p_38_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_wlast.bind(*p_38_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_38_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_38->S00_AXI_wuser.bind(*p_38_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_wvalid.bind(*p_38_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_wready.bind(*p_38_S00_AXI_wready);
        p_38_S00_AXI_wready->set_sv_netview_offsetfromdp(7881904);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->S00_AXI_bid.bind(*p_38_S00_AXI_bid);
        p_38_S00_AXI_bid->set_sv_netview_offsetfromdp(7881960);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->S00_AXI_bresp.bind(*p_38_S00_AXI_bresp);
        p_38_S00_AXI_bresp->set_sv_netview_offsetfromdp(7882016);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_38_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_38->S00_AXI_buser.bind(*p_38_S00_AXI_buser);
        p_38_S00_AXI_buser->set_sv_netview_offsetfromdp(7882072);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_bvalid.bind(*p_38_S00_AXI_bvalid);
        p_38_S00_AXI_bvalid->set_sv_netview_offsetfromdp(7882128);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_bready.bind(*p_38_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->S00_AXI_arid.bind(*p_38_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_38_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_38->S00_AXI_araddr.bind(*p_38_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->S00_AXI_arlen.bind(*p_38_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->S00_AXI_arsize.bind(*p_38_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->S00_AXI_arburst.bind(*p_38_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->S00_AXI_arlock.bind(*p_38_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->S00_AXI_arcache.bind(*p_38_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->S00_AXI_arprot.bind(*p_38_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->S00_AXI_arqos.bind(*p_38_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_38_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_38->S00_AXI_aruser.bind(*p_38_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_arvalid.bind(*p_38_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_arready.bind(*p_38_S00_AXI_arready);
        p_38_S00_AXI_arready->set_sv_netview_offsetfromdp(7882856);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->S00_AXI_rid.bind(*p_38_S00_AXI_rid);
        p_38_S00_AXI_rid->set_sv_netview_offsetfromdp(7882912);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_38_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_38->S00_AXI_rdata.bind(*p_38_S00_AXI_rdata);
        p_38_S00_AXI_rdata->set_sv_netview_offsetfromdp(7882968);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->S00_AXI_rresp.bind(*p_38_S00_AXI_rresp);
        p_38_S00_AXI_rresp->set_sv_netview_offsetfromdp(7883024);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_rlast.bind(*p_38_S00_AXI_rlast);
        p_38_S00_AXI_rlast->set_sv_netview_offsetfromdp(7883080);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_38_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_38->S00_AXI_ruser.bind(*p_38_S00_AXI_ruser);
        p_38_S00_AXI_ruser->set_sv_netview_offsetfromdp(7883136);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_rvalid.bind(*p_38_S00_AXI_rvalid);
        p_38_S00_AXI_rvalid->set_sv_netview_offsetfromdp(7883192);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_rready.bind(*p_38_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_38_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_38->M00_AXI_awaddr.bind(*p_38_M00_AXI_awaddr);
        p_38_M00_AXI_awaddr->set_sv_netview_offsetfromdp(7883304);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->M00_AXI_awlen.bind(*p_38_M00_AXI_awlen);
        p_38_M00_AXI_awlen->set_sv_netview_offsetfromdp(7883360);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M00_AXI_awsize.bind(*p_38_M00_AXI_awsize);
        p_38_M00_AXI_awsize->set_sv_netview_offsetfromdp(7883416);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M00_AXI_awburst.bind(*p_38_M00_AXI_awburst);
        p_38_M00_AXI_awburst->set_sv_netview_offsetfromdp(7883472);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->M00_AXI_awlock.bind(*p_38_M00_AXI_awlock);
        p_38_M00_AXI_awlock->set_sv_netview_offsetfromdp(7883528);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M00_AXI_awcache.bind(*p_38_M00_AXI_awcache);
        p_38_M00_AXI_awcache->set_sv_netview_offsetfromdp(7883584);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M00_AXI_awprot.bind(*p_38_M00_AXI_awprot);
        p_38_M00_AXI_awprot->set_sv_netview_offsetfromdp(7883640);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M00_AXI_awqos.bind(*p_38_M00_AXI_awqos);
        p_38_M00_AXI_awqos->set_sv_netview_offsetfromdp(7883696);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_awvalid.bind(*p_38_M00_AXI_awvalid);
        p_38_M00_AXI_awvalid->set_sv_netview_offsetfromdp(7883752);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_awready.bind(*p_38_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_38_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_38->M00_AXI_wdata.bind(*p_38_M00_AXI_wdata);
        p_38_M00_AXI_wdata->set_sv_netview_offsetfromdp(7883864);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_38_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_38->M00_AXI_wstrb.bind(*p_38_M00_AXI_wstrb);
        p_38_M00_AXI_wstrb->set_sv_netview_offsetfromdp(7883920);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_wlast.bind(*p_38_M00_AXI_wlast);
        p_38_M00_AXI_wlast->set_sv_netview_offsetfromdp(7883976);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_wvalid.bind(*p_38_M00_AXI_wvalid);
        p_38_M00_AXI_wvalid->set_sv_netview_offsetfromdp(7884032);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_wready.bind(*p_38_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M00_AXI_bresp.bind(*p_38_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_bvalid.bind(*p_38_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_bready.bind(*p_38_M00_AXI_bready);
        p_38_M00_AXI_bready->set_sv_netview_offsetfromdp(7884256);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_38_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_38->M00_AXI_araddr.bind(*p_38_M00_AXI_araddr);
        p_38_M00_AXI_araddr->set_sv_netview_offsetfromdp(7884312);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->M00_AXI_arlen.bind(*p_38_M00_AXI_arlen);
        p_38_M00_AXI_arlen->set_sv_netview_offsetfromdp(7884368);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M00_AXI_arsize.bind(*p_38_M00_AXI_arsize);
        p_38_M00_AXI_arsize->set_sv_netview_offsetfromdp(7884424);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M00_AXI_arburst.bind(*p_38_M00_AXI_arburst);
        p_38_M00_AXI_arburst->set_sv_netview_offsetfromdp(7884480);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->M00_AXI_arlock.bind(*p_38_M00_AXI_arlock);
        p_38_M00_AXI_arlock->set_sv_netview_offsetfromdp(7884536);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M00_AXI_arcache.bind(*p_38_M00_AXI_arcache);
        p_38_M00_AXI_arcache->set_sv_netview_offsetfromdp(7884592);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M00_AXI_arprot.bind(*p_38_M00_AXI_arprot);
        p_38_M00_AXI_arprot->set_sv_netview_offsetfromdp(7884648);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M00_AXI_arqos.bind(*p_38_M00_AXI_arqos);
        p_38_M00_AXI_arqos->set_sv_netview_offsetfromdp(7884704);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_arvalid.bind(*p_38_M00_AXI_arvalid);
        p_38_M00_AXI_arvalid->set_sv_netview_offsetfromdp(7884760);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_arready.bind(*p_38_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_38_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_38->M00_AXI_rdata.bind(*p_38_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M00_AXI_rresp.bind(*p_38_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_rlast.bind(*p_38_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_rvalid.bind(*p_38_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_rready.bind(*p_38_M00_AXI_rready);
        p_38_M00_AXI_rready->set_sv_netview_offsetfromdp(7885096);
        sc_inst_39 = new bd_d216_interconnect_PLRAM_MEM02_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem02");
        sc_inst_39->xsim_set_dbg_index(2421);
        xsim_sc_channel<0, bool > *p_39_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_39->aclk.bind(*p_39_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_39_aclk);
        xsim_sc_channel<0, bool > *p_39_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_39->aresetn.bind(*p_39_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_39_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->S00_AXI_awid.bind(*p_39_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_39_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_39->S00_AXI_awaddr.bind(*p_39_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->S00_AXI_awlen.bind(*p_39_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->S00_AXI_awsize.bind(*p_39_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->S00_AXI_awburst.bind(*p_39_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->S00_AXI_awlock.bind(*p_39_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->S00_AXI_awcache.bind(*p_39_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->S00_AXI_awprot.bind(*p_39_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->S00_AXI_awqos.bind(*p_39_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->S00_AXI_awuser.bind(*p_39_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_awvalid.bind(*p_39_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_awready.bind(*p_39_S00_AXI_awready);
        p_39_S00_AXI_awready->set_sv_netview_offsetfromdp(7885928);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->S00_AXI_wdata.bind(*p_39_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_39_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_39->S00_AXI_wstrb.bind(*p_39_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_wlast.bind(*p_39_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_39_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_39->S00_AXI_wuser.bind(*p_39_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_wvalid.bind(*p_39_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_wready.bind(*p_39_S00_AXI_wready);
        p_39_S00_AXI_wready->set_sv_netview_offsetfromdp(7886264);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->S00_AXI_bid.bind(*p_39_S00_AXI_bid);
        p_39_S00_AXI_bid->set_sv_netview_offsetfromdp(7886320);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->S00_AXI_bresp.bind(*p_39_S00_AXI_bresp);
        p_39_S00_AXI_bresp->set_sv_netview_offsetfromdp(7886376);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->S00_AXI_buser.bind(*p_39_S00_AXI_buser);
        p_39_S00_AXI_buser->set_sv_netview_offsetfromdp(7886432);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_bvalid.bind(*p_39_S00_AXI_bvalid);
        p_39_S00_AXI_bvalid->set_sv_netview_offsetfromdp(7886488);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_bready.bind(*p_39_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->S00_AXI_arid.bind(*p_39_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_39_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_39->S00_AXI_araddr.bind(*p_39_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->S00_AXI_arlen.bind(*p_39_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->S00_AXI_arsize.bind(*p_39_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->S00_AXI_arburst.bind(*p_39_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->S00_AXI_arlock.bind(*p_39_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->S00_AXI_arcache.bind(*p_39_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->S00_AXI_arprot.bind(*p_39_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->S00_AXI_arqos.bind(*p_39_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->S00_AXI_aruser.bind(*p_39_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_arvalid.bind(*p_39_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_arready.bind(*p_39_S00_AXI_arready);
        p_39_S00_AXI_arready->set_sv_netview_offsetfromdp(7887216);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->S00_AXI_rid.bind(*p_39_S00_AXI_rid);
        p_39_S00_AXI_rid->set_sv_netview_offsetfromdp(7887272);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->S00_AXI_rdata.bind(*p_39_S00_AXI_rdata);
        p_39_S00_AXI_rdata->set_sv_netview_offsetfromdp(7887328);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->S00_AXI_rresp.bind(*p_39_S00_AXI_rresp);
        p_39_S00_AXI_rresp->set_sv_netview_offsetfromdp(7887384);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_rlast.bind(*p_39_S00_AXI_rlast);
        p_39_S00_AXI_rlast->set_sv_netview_offsetfromdp(7887440);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_39_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_39->S00_AXI_ruser.bind(*p_39_S00_AXI_ruser);
        p_39_S00_AXI_ruser->set_sv_netview_offsetfromdp(7887496);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_rvalid.bind(*p_39_S00_AXI_rvalid);
        p_39_S00_AXI_rvalid->set_sv_netview_offsetfromdp(7887552);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_rready.bind(*p_39_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_39_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_39->M00_AXI_awaddr.bind(*p_39_M00_AXI_awaddr);
        p_39_M00_AXI_awaddr->set_sv_netview_offsetfromdp(7887664);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->M00_AXI_awlen.bind(*p_39_M00_AXI_awlen);
        p_39_M00_AXI_awlen->set_sv_netview_offsetfromdp(7887720);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M00_AXI_awsize.bind(*p_39_M00_AXI_awsize);
        p_39_M00_AXI_awsize->set_sv_netview_offsetfromdp(7887776);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M00_AXI_awburst.bind(*p_39_M00_AXI_awburst);
        p_39_M00_AXI_awburst->set_sv_netview_offsetfromdp(7887832);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M00_AXI_awlock.bind(*p_39_M00_AXI_awlock);
        p_39_M00_AXI_awlock->set_sv_netview_offsetfromdp(7887888);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M00_AXI_awcache.bind(*p_39_M00_AXI_awcache);
        p_39_M00_AXI_awcache->set_sv_netview_offsetfromdp(7887944);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M00_AXI_awprot.bind(*p_39_M00_AXI_awprot);
        p_39_M00_AXI_awprot->set_sv_netview_offsetfromdp(7888000);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M00_AXI_awqos.bind(*p_39_M00_AXI_awqos);
        p_39_M00_AXI_awqos->set_sv_netview_offsetfromdp(7888056);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_awvalid.bind(*p_39_M00_AXI_awvalid);
        p_39_M00_AXI_awvalid->set_sv_netview_offsetfromdp(7888112);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_awready.bind(*p_39_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->M00_AXI_wdata.bind(*p_39_M00_AXI_wdata);
        p_39_M00_AXI_wdata->set_sv_netview_offsetfromdp(7888224);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_39_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_39->M00_AXI_wstrb.bind(*p_39_M00_AXI_wstrb);
        p_39_M00_AXI_wstrb->set_sv_netview_offsetfromdp(7888280);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_wlast.bind(*p_39_M00_AXI_wlast);
        p_39_M00_AXI_wlast->set_sv_netview_offsetfromdp(7888336);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_wvalid.bind(*p_39_M00_AXI_wvalid);
        p_39_M00_AXI_wvalid->set_sv_netview_offsetfromdp(7888392);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_wready.bind(*p_39_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M00_AXI_bresp.bind(*p_39_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_bvalid.bind(*p_39_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_bready.bind(*p_39_M00_AXI_bready);
        p_39_M00_AXI_bready->set_sv_netview_offsetfromdp(7888616);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_39_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_39->M00_AXI_araddr.bind(*p_39_M00_AXI_araddr);
        p_39_M00_AXI_araddr->set_sv_netview_offsetfromdp(7888672);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->M00_AXI_arlen.bind(*p_39_M00_AXI_arlen);
        p_39_M00_AXI_arlen->set_sv_netview_offsetfromdp(7888728);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M00_AXI_arsize.bind(*p_39_M00_AXI_arsize);
        p_39_M00_AXI_arsize->set_sv_netview_offsetfromdp(7888784);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M00_AXI_arburst.bind(*p_39_M00_AXI_arburst);
        p_39_M00_AXI_arburst->set_sv_netview_offsetfromdp(7888840);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M00_AXI_arlock.bind(*p_39_M00_AXI_arlock);
        p_39_M00_AXI_arlock->set_sv_netview_offsetfromdp(7888896);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M00_AXI_arcache.bind(*p_39_M00_AXI_arcache);
        p_39_M00_AXI_arcache->set_sv_netview_offsetfromdp(7888952);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M00_AXI_arprot.bind(*p_39_M00_AXI_arprot);
        p_39_M00_AXI_arprot->set_sv_netview_offsetfromdp(7889008);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M00_AXI_arqos.bind(*p_39_M00_AXI_arqos);
        p_39_M00_AXI_arqos->set_sv_netview_offsetfromdp(7889064);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_arvalid.bind(*p_39_M00_AXI_arvalid);
        p_39_M00_AXI_arvalid->set_sv_netview_offsetfromdp(7889120);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_arready.bind(*p_39_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->M00_AXI_rdata.bind(*p_39_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M00_AXI_rresp.bind(*p_39_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_rlast.bind(*p_39_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_rvalid.bind(*p_39_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_rready.bind(*p_39_M00_AXI_rready);
        p_39_M00_AXI_rready->set_sv_netview_offsetfromdp(7889456);
        sc_inst_40 = new bd_d216_interconnect_PLRAM_MEM03_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem03");
        sc_inst_40->xsim_set_dbg_index(2422);
        xsim_sc_channel<0, bool > *p_40_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_40->aclk.bind(*p_40_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_40_aclk);
        xsim_sc_channel<0, bool > *p_40_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_40->aresetn.bind(*p_40_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_40_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->S00_AXI_awid.bind(*p_40_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_40_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_40->S00_AXI_awaddr.bind(*p_40_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_40_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_40->S00_AXI_awlen.bind(*p_40_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->S00_AXI_awsize.bind(*p_40_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->S00_AXI_awburst.bind(*p_40_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->S00_AXI_awlock.bind(*p_40_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->S00_AXI_awcache.bind(*p_40_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->S00_AXI_awprot.bind(*p_40_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->S00_AXI_awqos.bind(*p_40_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_40_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_40->S00_AXI_awuser.bind(*p_40_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_awvalid.bind(*p_40_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_awready.bind(*p_40_S00_AXI_awready);
        p_40_S00_AXI_awready->set_sv_netview_offsetfromdp(7890288);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_40_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_40->S00_AXI_wdata.bind(*p_40_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_40_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_40->S00_AXI_wstrb.bind(*p_40_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_wlast.bind(*p_40_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_40_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_40->S00_AXI_wuser.bind(*p_40_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_wvalid.bind(*p_40_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_wready.bind(*p_40_S00_AXI_wready);
        p_40_S00_AXI_wready->set_sv_netview_offsetfromdp(7890624);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->S00_AXI_bid.bind(*p_40_S00_AXI_bid);
        p_40_S00_AXI_bid->set_sv_netview_offsetfromdp(7890680);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->S00_AXI_bresp.bind(*p_40_S00_AXI_bresp);
        p_40_S00_AXI_bresp->set_sv_netview_offsetfromdp(7890736);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_40_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_40->S00_AXI_buser.bind(*p_40_S00_AXI_buser);
        p_40_S00_AXI_buser->set_sv_netview_offsetfromdp(7890792);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_bvalid.bind(*p_40_S00_AXI_bvalid);
        p_40_S00_AXI_bvalid->set_sv_netview_offsetfromdp(7890848);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_bready.bind(*p_40_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->S00_AXI_arid.bind(*p_40_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_40_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_40->S00_AXI_araddr.bind(*p_40_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_40_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_40->S00_AXI_arlen.bind(*p_40_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->S00_AXI_arsize.bind(*p_40_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->S00_AXI_arburst.bind(*p_40_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->S00_AXI_arlock.bind(*p_40_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->S00_AXI_arcache.bind(*p_40_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->S00_AXI_arprot.bind(*p_40_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->S00_AXI_arqos.bind(*p_40_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_40_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_40->S00_AXI_aruser.bind(*p_40_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_arvalid.bind(*p_40_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_arready.bind(*p_40_S00_AXI_arready);
        p_40_S00_AXI_arready->set_sv_netview_offsetfromdp(7891576);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->S00_AXI_rid.bind(*p_40_S00_AXI_rid);
        p_40_S00_AXI_rid->set_sv_netview_offsetfromdp(7891632);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_40_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_40->S00_AXI_rdata.bind(*p_40_S00_AXI_rdata);
        p_40_S00_AXI_rdata->set_sv_netview_offsetfromdp(7891688);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->S00_AXI_rresp.bind(*p_40_S00_AXI_rresp);
        p_40_S00_AXI_rresp->set_sv_netview_offsetfromdp(7891744);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_rlast.bind(*p_40_S00_AXI_rlast);
        p_40_S00_AXI_rlast->set_sv_netview_offsetfromdp(7891800);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_40_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_40->S00_AXI_ruser.bind(*p_40_S00_AXI_ruser);
        p_40_S00_AXI_ruser->set_sv_netview_offsetfromdp(7891856);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_rvalid.bind(*p_40_S00_AXI_rvalid);
        p_40_S00_AXI_rvalid->set_sv_netview_offsetfromdp(7891912);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_rready.bind(*p_40_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_40_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_40->M00_AXI_awaddr.bind(*p_40_M00_AXI_awaddr);
        p_40_M00_AXI_awaddr->set_sv_netview_offsetfromdp(7892024);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_40_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_40->M00_AXI_awlen.bind(*p_40_M00_AXI_awlen);
        p_40_M00_AXI_awlen->set_sv_netview_offsetfromdp(7892080);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->M00_AXI_awsize.bind(*p_40_M00_AXI_awsize);
        p_40_M00_AXI_awsize->set_sv_netview_offsetfromdp(7892136);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->M00_AXI_awburst.bind(*p_40_M00_AXI_awburst);
        p_40_M00_AXI_awburst->set_sv_netview_offsetfromdp(7892192);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->M00_AXI_awlock.bind(*p_40_M00_AXI_awlock);
        p_40_M00_AXI_awlock->set_sv_netview_offsetfromdp(7892248);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->M00_AXI_awcache.bind(*p_40_M00_AXI_awcache);
        p_40_M00_AXI_awcache->set_sv_netview_offsetfromdp(7892304);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->M00_AXI_awprot.bind(*p_40_M00_AXI_awprot);
        p_40_M00_AXI_awprot->set_sv_netview_offsetfromdp(7892360);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->M00_AXI_awqos.bind(*p_40_M00_AXI_awqos);
        p_40_M00_AXI_awqos->set_sv_netview_offsetfromdp(7892416);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_awvalid.bind(*p_40_M00_AXI_awvalid);
        p_40_M00_AXI_awvalid->set_sv_netview_offsetfromdp(7892472);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_awready.bind(*p_40_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_40_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_40_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_40->M00_AXI_wdata.bind(*p_40_M00_AXI_wdata);
        p_40_M00_AXI_wdata->set_sv_netview_offsetfromdp(7892584);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_40_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_40->M00_AXI_wstrb.bind(*p_40_M00_AXI_wstrb);
        p_40_M00_AXI_wstrb->set_sv_netview_offsetfromdp(7892640);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_wlast.bind(*p_40_M00_AXI_wlast);
        p_40_M00_AXI_wlast->set_sv_netview_offsetfromdp(7892696);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_wvalid.bind(*p_40_M00_AXI_wvalid);
        p_40_M00_AXI_wvalid->set_sv_netview_offsetfromdp(7892752);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_wready.bind(*p_40_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_40_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->M00_AXI_bresp.bind(*p_40_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_40_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_bvalid.bind(*p_40_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_bready.bind(*p_40_M00_AXI_bready);
        p_40_M00_AXI_bready->set_sv_netview_offsetfromdp(7892976);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_40_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_40->M00_AXI_araddr.bind(*p_40_M00_AXI_araddr);
        p_40_M00_AXI_araddr->set_sv_netview_offsetfromdp(7893032);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_40_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_40->M00_AXI_arlen.bind(*p_40_M00_AXI_arlen);
        p_40_M00_AXI_arlen->set_sv_netview_offsetfromdp(7893088);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->M00_AXI_arsize.bind(*p_40_M00_AXI_arsize);
        p_40_M00_AXI_arsize->set_sv_netview_offsetfromdp(7893144);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->M00_AXI_arburst.bind(*p_40_M00_AXI_arburst);
        p_40_M00_AXI_arburst->set_sv_netview_offsetfromdp(7893200);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->M00_AXI_arlock.bind(*p_40_M00_AXI_arlock);
        p_40_M00_AXI_arlock->set_sv_netview_offsetfromdp(7893256);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->M00_AXI_arcache.bind(*p_40_M00_AXI_arcache);
        p_40_M00_AXI_arcache->set_sv_netview_offsetfromdp(7893312);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->M00_AXI_arprot.bind(*p_40_M00_AXI_arprot);
        p_40_M00_AXI_arprot->set_sv_netview_offsetfromdp(7893368);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->M00_AXI_arqos.bind(*p_40_M00_AXI_arqos);
        p_40_M00_AXI_arqos->set_sv_netview_offsetfromdp(7893424);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_arvalid.bind(*p_40_M00_AXI_arvalid);
        p_40_M00_AXI_arvalid->set_sv_netview_offsetfromdp(7893480);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_arready.bind(*p_40_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_40_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_40_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_40->M00_AXI_rdata.bind(*p_40_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_40_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->M00_AXI_rresp.bind(*p_40_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_40_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_rlast.bind(*p_40_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_40_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_rvalid.bind(*p_40_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_rready.bind(*p_40_M00_AXI_rready);
        p_40_M00_AXI_rready->set_sv_netview_offsetfromdp(7893816);
        sc_inst_41 = new bd_d216_interconnect_S00_AXI_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_s00_axi");
        sc_inst_41->xsim_set_dbg_index(2423);
        xsim_sc_channel<0, bool > *p_41_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_41->aclk.bind(*p_41_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_41_aclk);
        xsim_sc_channel<0, bool > *p_41_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_41->aresetn.bind(*p_41_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_41_aresetn);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_41_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_41->S00_AXI_awaddr.bind(*p_41_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_41_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_41->S00_AXI_awlen.bind(*p_41_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->S00_AXI_awsize.bind(*p_41_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->S00_AXI_awburst.bind(*p_41_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->S00_AXI_awlock.bind(*p_41_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->S00_AXI_awcache.bind(*p_41_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->S00_AXI_awprot.bind(*p_41_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->S00_AXI_awqos.bind(*p_41_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_awvalid.bind(*p_41_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_awready.bind(*p_41_S00_AXI_awready);
        p_41_S00_AXI_awready->set_sv_netview_offsetfromdp(7894536);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_41_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_41->S00_AXI_wdata.bind(*p_41_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->S00_AXI_wstrb.bind(*p_41_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_wlast.bind(*p_41_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_wvalid.bind(*p_41_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_wready.bind(*p_41_S00_AXI_wready);
        p_41_S00_AXI_wready->set_sv_netview_offsetfromdp(7894816);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->S00_AXI_bresp.bind(*p_41_S00_AXI_bresp);
        p_41_S00_AXI_bresp->set_sv_netview_offsetfromdp(7894872);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_bvalid.bind(*p_41_S00_AXI_bvalid);
        p_41_S00_AXI_bvalid->set_sv_netview_offsetfromdp(7894928);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_bready.bind(*p_41_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_bready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_41_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_41->S00_AXI_araddr.bind(*p_41_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_41_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_41->S00_AXI_arlen.bind(*p_41_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->S00_AXI_arsize.bind(*p_41_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->S00_AXI_arburst.bind(*p_41_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->S00_AXI_arlock.bind(*p_41_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->S00_AXI_arcache.bind(*p_41_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->S00_AXI_arprot.bind(*p_41_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->S00_AXI_arqos.bind(*p_41_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_arvalid.bind(*p_41_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_arready.bind(*p_41_S00_AXI_arready);
        p_41_S00_AXI_arready->set_sv_netview_offsetfromdp(7895544);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_41_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_41->S00_AXI_rdata.bind(*p_41_S00_AXI_rdata);
        p_41_S00_AXI_rdata->set_sv_netview_offsetfromdp(7895600);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->S00_AXI_rresp.bind(*p_41_S00_AXI_rresp);
        p_41_S00_AXI_rresp->set_sv_netview_offsetfromdp(7895656);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_rlast.bind(*p_41_S00_AXI_rlast);
        p_41_S00_AXI_rlast->set_sv_netview_offsetfromdp(7895712);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_rvalid.bind(*p_41_S00_AXI_rvalid);
        p_41_S00_AXI_rvalid->set_sv_netview_offsetfromdp(7895768);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_rready.bind(*p_41_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_M00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->M00_AXI_awid.bind(*p_41_M00_AXI_awid);
        p_41_M00_AXI_awid->set_sv_netview_offsetfromdp(7895880);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_41_M00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_41->M00_AXI_awaddr.bind(*p_41_M00_AXI_awaddr);
        p_41_M00_AXI_awaddr->set_sv_netview_offsetfromdp(7895936);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_41_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_41->M00_AXI_awlen.bind(*p_41_M00_AXI_awlen);
        p_41_M00_AXI_awlen->set_sv_netview_offsetfromdp(7895992);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->M00_AXI_awsize.bind(*p_41_M00_AXI_awsize);
        p_41_M00_AXI_awsize->set_sv_netview_offsetfromdp(7896048);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->M00_AXI_awburst.bind(*p_41_M00_AXI_awburst);
        p_41_M00_AXI_awburst->set_sv_netview_offsetfromdp(7896104);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->M00_AXI_awlock.bind(*p_41_M00_AXI_awlock);
        p_41_M00_AXI_awlock->set_sv_netview_offsetfromdp(7896160);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->M00_AXI_awcache.bind(*p_41_M00_AXI_awcache);
        p_41_M00_AXI_awcache->set_sv_netview_offsetfromdp(7896216);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->M00_AXI_awprot.bind(*p_41_M00_AXI_awprot);
        p_41_M00_AXI_awprot->set_sv_netview_offsetfromdp(7896272);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->M00_AXI_awqos.bind(*p_41_M00_AXI_awqos);
        p_41_M00_AXI_awqos->set_sv_netview_offsetfromdp(7896328);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_41_M00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_41->M00_AXI_awuser.bind(*p_41_M00_AXI_awuser);
        p_41_M00_AXI_awuser->set_sv_netview_offsetfromdp(7896384);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_awvalid.bind(*p_41_M00_AXI_awvalid);
        p_41_M00_AXI_awvalid->set_sv_netview_offsetfromdp(7896440);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_awready.bind(*p_41_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_41_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_41->M00_AXI_wdata.bind(*p_41_M00_AXI_wdata);
        p_41_M00_AXI_wdata->set_sv_netview_offsetfromdp(7896552);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_41_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_41->M00_AXI_wstrb.bind(*p_41_M00_AXI_wstrb);
        p_41_M00_AXI_wstrb->set_sv_netview_offsetfromdp(7896608);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_wlast.bind(*p_41_M00_AXI_wlast);
        p_41_M00_AXI_wlast->set_sv_netview_offsetfromdp(7896664);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_41_M00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_41->M00_AXI_wuser.bind(*p_41_M00_AXI_wuser);
        p_41_M00_AXI_wuser->set_sv_netview_offsetfromdp(7896720);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_wvalid.bind(*p_41_M00_AXI_wvalid);
        p_41_M00_AXI_wvalid->set_sv_netview_offsetfromdp(7896776);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_wready.bind(*p_41_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M00_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_M00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->M00_AXI_bid.bind(*p_41_M00_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M00_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->M00_AXI_bresp.bind(*p_41_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M00_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_41_M00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_41->M00_AXI_buser.bind(*p_41_M00_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M00_AXI_buser);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_bvalid.bind(*p_41_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_bready.bind(*p_41_M00_AXI_bready);
        p_41_M00_AXI_bready->set_sv_netview_offsetfromdp(7897112);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_M00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->M00_AXI_arid.bind(*p_41_M00_AXI_arid);
        p_41_M00_AXI_arid->set_sv_netview_offsetfromdp(7897168);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_41_M00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_41->M00_AXI_araddr.bind(*p_41_M00_AXI_araddr);
        p_41_M00_AXI_araddr->set_sv_netview_offsetfromdp(7897224);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_41_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_41->M00_AXI_arlen.bind(*p_41_M00_AXI_arlen);
        p_41_M00_AXI_arlen->set_sv_netview_offsetfromdp(7897280);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->M00_AXI_arsize.bind(*p_41_M00_AXI_arsize);
        p_41_M00_AXI_arsize->set_sv_netview_offsetfromdp(7897336);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->M00_AXI_arburst.bind(*p_41_M00_AXI_arburst);
        p_41_M00_AXI_arburst->set_sv_netview_offsetfromdp(7897392);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->M00_AXI_arlock.bind(*p_41_M00_AXI_arlock);
        p_41_M00_AXI_arlock->set_sv_netview_offsetfromdp(7897448);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->M00_AXI_arcache.bind(*p_41_M00_AXI_arcache);
        p_41_M00_AXI_arcache->set_sv_netview_offsetfromdp(7897504);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->M00_AXI_arprot.bind(*p_41_M00_AXI_arprot);
        p_41_M00_AXI_arprot->set_sv_netview_offsetfromdp(7897560);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->M00_AXI_arqos.bind(*p_41_M00_AXI_arqos);
        p_41_M00_AXI_arqos->set_sv_netview_offsetfromdp(7897616);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_41_M00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_41->M00_AXI_aruser.bind(*p_41_M00_AXI_aruser);
        p_41_M00_AXI_aruser->set_sv_netview_offsetfromdp(7897672);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_arvalid.bind(*p_41_M00_AXI_arvalid);
        p_41_M00_AXI_arvalid->set_sv_netview_offsetfromdp(7897728);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_arready.bind(*p_41_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M00_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_M00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->M00_AXI_rid.bind(*p_41_M00_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M00_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_41_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_41->M00_AXI_rdata.bind(*p_41_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->M00_AXI_rresp.bind(*p_41_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_rlast.bind(*p_41_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M00_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_41_M00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_41->M00_AXI_ruser.bind(*p_41_M00_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M00_AXI_ruser);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_rvalid.bind(*p_41_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_rready.bind(*p_41_M00_AXI_rready);
        p_41_M00_AXI_rready->set_sv_netview_offsetfromdp(7898176);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_M01_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->M01_AXI_awid.bind(*p_41_M01_AXI_awid);
        p_41_M01_AXI_awid->set_sv_netview_offsetfromdp(7898232);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_41_M01_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_41->M01_AXI_awaddr.bind(*p_41_M01_AXI_awaddr);
        p_41_M01_AXI_awaddr->set_sv_netview_offsetfromdp(7898288);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_41_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_41->M01_AXI_awlen.bind(*p_41_M01_AXI_awlen);
        p_41_M01_AXI_awlen->set_sv_netview_offsetfromdp(7898344);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->M01_AXI_awsize.bind(*p_41_M01_AXI_awsize);
        p_41_M01_AXI_awsize->set_sv_netview_offsetfromdp(7898400);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->M01_AXI_awburst.bind(*p_41_M01_AXI_awburst);
        p_41_M01_AXI_awburst->set_sv_netview_offsetfromdp(7898456);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_M01_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->M01_AXI_awlock.bind(*p_41_M01_AXI_awlock);
        p_41_M01_AXI_awlock->set_sv_netview_offsetfromdp(7898512);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_M01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->M01_AXI_awcache.bind(*p_41_M01_AXI_awcache);
        p_41_M01_AXI_awcache->set_sv_netview_offsetfromdp(7898568);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->M01_AXI_awprot.bind(*p_41_M01_AXI_awprot);
        p_41_M01_AXI_awprot->set_sv_netview_offsetfromdp(7898624);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_M01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->M01_AXI_awqos.bind(*p_41_M01_AXI_awqos);
        p_41_M01_AXI_awqos->set_sv_netview_offsetfromdp(7898680);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_41_M01_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_41->M01_AXI_awuser.bind(*p_41_M01_AXI_awuser);
        p_41_M01_AXI_awuser->set_sv_netview_offsetfromdp(7898736);
        xsim_sc_channel<0, bool > *p_41_M01_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->M01_AXI_awvalid.bind(*p_41_M01_AXI_awvalid);
        p_41_M01_AXI_awvalid->set_sv_netview_offsetfromdp(7898792);
        xsim_sc_channel<0, bool > *p_41_M01_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_41->M01_AXI_awready.bind(*p_41_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M01_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_41_M01_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_41->M01_AXI_wdata.bind(*p_41_M01_AXI_wdata);
        p_41_M01_AXI_wdata->set_sv_netview_offsetfromdp(7898904);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_41_M01_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_41->M01_AXI_wstrb.bind(*p_41_M01_AXI_wstrb);
        p_41_M01_AXI_wstrb->set_sv_netview_offsetfromdp(7898960);
        xsim_sc_channel<0, bool > *p_41_M01_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_41->M01_AXI_wlast.bind(*p_41_M01_AXI_wlast);
        p_41_M01_AXI_wlast->set_sv_netview_offsetfromdp(7899016);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_41_M01_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_41->M01_AXI_wuser.bind(*p_41_M01_AXI_wuser);
        p_41_M01_AXI_wuser->set_sv_netview_offsetfromdp(7899072);
        xsim_sc_channel<0, bool > *p_41_M01_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->M01_AXI_wvalid.bind(*p_41_M01_AXI_wvalid);
        p_41_M01_AXI_wvalid->set_sv_netview_offsetfromdp(7899128);
        xsim_sc_channel<0, bool > *p_41_M01_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_41->M01_AXI_wready.bind(*p_41_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M01_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_M01_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->M01_AXI_bid.bind(*p_41_M01_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M01_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->M01_AXI_bresp.bind(*p_41_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M01_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_41_M01_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_41->M01_AXI_buser.bind(*p_41_M01_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M01_AXI_buser);
        xsim_sc_channel<0, bool > *p_41_M01_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->M01_AXI_bvalid.bind(*p_41_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M01_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_41_M01_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_41->M01_AXI_bready.bind(*p_41_M01_AXI_bready);
        p_41_M01_AXI_bready->set_sv_netview_offsetfromdp(7899464);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_M01_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->M01_AXI_arid.bind(*p_41_M01_AXI_arid);
        p_41_M01_AXI_arid->set_sv_netview_offsetfromdp(7899520);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_41_M01_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_41->M01_AXI_araddr.bind(*p_41_M01_AXI_araddr);
        p_41_M01_AXI_araddr->set_sv_netview_offsetfromdp(7899576);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_41_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_41->M01_AXI_arlen.bind(*p_41_M01_AXI_arlen);
        p_41_M01_AXI_arlen->set_sv_netview_offsetfromdp(7899632);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->M01_AXI_arsize.bind(*p_41_M01_AXI_arsize);
        p_41_M01_AXI_arsize->set_sv_netview_offsetfromdp(7899688);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->M01_AXI_arburst.bind(*p_41_M01_AXI_arburst);
        p_41_M01_AXI_arburst->set_sv_netview_offsetfromdp(7899744);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_M01_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->M01_AXI_arlock.bind(*p_41_M01_AXI_arlock);
        p_41_M01_AXI_arlock->set_sv_netview_offsetfromdp(7899800);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_M01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->M01_AXI_arcache.bind(*p_41_M01_AXI_arcache);
        p_41_M01_AXI_arcache->set_sv_netview_offsetfromdp(7899856);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->M01_AXI_arprot.bind(*p_41_M01_AXI_arprot);
        p_41_M01_AXI_arprot->set_sv_netview_offsetfromdp(7899912);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_M01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->M01_AXI_arqos.bind(*p_41_M01_AXI_arqos);
        p_41_M01_AXI_arqos->set_sv_netview_offsetfromdp(7899968);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_41_M01_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_41->M01_AXI_aruser.bind(*p_41_M01_AXI_aruser);
        p_41_M01_AXI_aruser->set_sv_netview_offsetfromdp(7900024);
        xsim_sc_channel<0, bool > *p_41_M01_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->M01_AXI_arvalid.bind(*p_41_M01_AXI_arvalid);
        p_41_M01_AXI_arvalid->set_sv_netview_offsetfromdp(7900080);
        xsim_sc_channel<0, bool > *p_41_M01_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_41->M01_AXI_arready.bind(*p_41_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M01_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_M01_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->M01_AXI_rid.bind(*p_41_M01_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M01_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_41_M01_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_41->M01_AXI_rdata.bind(*p_41_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->M01_AXI_rresp.bind(*p_41_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M01_AXI_rresp);
        xsim_sc_channel<0, bool > *p_41_M01_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_41->M01_AXI_rlast.bind(*p_41_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M01_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_41_M01_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_41->M01_AXI_ruser.bind(*p_41_M01_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M01_AXI_ruser);
        xsim_sc_channel<0, bool > *p_41_M01_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->M01_AXI_rvalid.bind(*p_41_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M01_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_41_M01_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_41->M01_AXI_rready.bind(*p_41_M01_AXI_rready);
        p_41_M01_AXI_rready->set_sv_netview_offsetfromdp(7900528);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_M02_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->M02_AXI_awid.bind(*p_41_M02_AXI_awid);
        p_41_M02_AXI_awid->set_sv_netview_offsetfromdp(7900584);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_41_M02_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_41->M02_AXI_awaddr.bind(*p_41_M02_AXI_awaddr);
        p_41_M02_AXI_awaddr->set_sv_netview_offsetfromdp(7900640);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_41_M02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_41->M02_AXI_awlen.bind(*p_41_M02_AXI_awlen);
        p_41_M02_AXI_awlen->set_sv_netview_offsetfromdp(7900696);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_M02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->M02_AXI_awsize.bind(*p_41_M02_AXI_awsize);
        p_41_M02_AXI_awsize->set_sv_netview_offsetfromdp(7900752);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_M02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->M02_AXI_awburst.bind(*p_41_M02_AXI_awburst);
        p_41_M02_AXI_awburst->set_sv_netview_offsetfromdp(7900808);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_M02_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->M02_AXI_awlock.bind(*p_41_M02_AXI_awlock);
        p_41_M02_AXI_awlock->set_sv_netview_offsetfromdp(7900864);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_M02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->M02_AXI_awcache.bind(*p_41_M02_AXI_awcache);
        p_41_M02_AXI_awcache->set_sv_netview_offsetfromdp(7900920);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_M02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->M02_AXI_awprot.bind(*p_41_M02_AXI_awprot);
        p_41_M02_AXI_awprot->set_sv_netview_offsetfromdp(7900976);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_M02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->M02_AXI_awqos.bind(*p_41_M02_AXI_awqos);
        p_41_M02_AXI_awqos->set_sv_netview_offsetfromdp(7901032);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_41_M02_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_41->M02_AXI_awuser.bind(*p_41_M02_AXI_awuser);
        p_41_M02_AXI_awuser->set_sv_netview_offsetfromdp(7901088);
        xsim_sc_channel<0, bool > *p_41_M02_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->M02_AXI_awvalid.bind(*p_41_M02_AXI_awvalid);
        p_41_M02_AXI_awvalid->set_sv_netview_offsetfromdp(7901144);
        xsim_sc_channel<0, bool > *p_41_M02_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_41->M02_AXI_awready.bind(*p_41_M02_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M02_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_41_M02_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_41->M02_AXI_wdata.bind(*p_41_M02_AXI_wdata);
        p_41_M02_AXI_wdata->set_sv_netview_offsetfromdp(7901256);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_41_M02_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_41->M02_AXI_wstrb.bind(*p_41_M02_AXI_wstrb);
        p_41_M02_AXI_wstrb->set_sv_netview_offsetfromdp(7901312);
        xsim_sc_channel<0, bool > *p_41_M02_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_41->M02_AXI_wlast.bind(*p_41_M02_AXI_wlast);
        p_41_M02_AXI_wlast->set_sv_netview_offsetfromdp(7901368);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_41_M02_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_41->M02_AXI_wuser.bind(*p_41_M02_AXI_wuser);
        p_41_M02_AXI_wuser->set_sv_netview_offsetfromdp(7901424);
        xsim_sc_channel<0, bool > *p_41_M02_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->M02_AXI_wvalid.bind(*p_41_M02_AXI_wvalid);
        p_41_M02_AXI_wvalid->set_sv_netview_offsetfromdp(7901480);
        xsim_sc_channel<0, bool > *p_41_M02_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_41->M02_AXI_wready.bind(*p_41_M02_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M02_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_M02_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->M02_AXI_bid.bind(*p_41_M02_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M02_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_M02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->M02_AXI_bresp.bind(*p_41_M02_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M02_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_41_M02_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_41->M02_AXI_buser.bind(*p_41_M02_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M02_AXI_buser);
        xsim_sc_channel<0, bool > *p_41_M02_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->M02_AXI_bvalid.bind(*p_41_M02_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M02_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_41_M02_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_41->M02_AXI_bready.bind(*p_41_M02_AXI_bready);
        p_41_M02_AXI_bready->set_sv_netview_offsetfromdp(7901816);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_M02_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->M02_AXI_arid.bind(*p_41_M02_AXI_arid);
        p_41_M02_AXI_arid->set_sv_netview_offsetfromdp(7901872);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_41_M02_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_41->M02_AXI_araddr.bind(*p_41_M02_AXI_araddr);
        p_41_M02_AXI_araddr->set_sv_netview_offsetfromdp(7901928);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_41_M02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_41->M02_AXI_arlen.bind(*p_41_M02_AXI_arlen);
        p_41_M02_AXI_arlen->set_sv_netview_offsetfromdp(7901984);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_M02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->M02_AXI_arsize.bind(*p_41_M02_AXI_arsize);
        p_41_M02_AXI_arsize->set_sv_netview_offsetfromdp(7902040);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_M02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->M02_AXI_arburst.bind(*p_41_M02_AXI_arburst);
        p_41_M02_AXI_arburst->set_sv_netview_offsetfromdp(7902096);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_M02_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->M02_AXI_arlock.bind(*p_41_M02_AXI_arlock);
        p_41_M02_AXI_arlock->set_sv_netview_offsetfromdp(7902152);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_M02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->M02_AXI_arcache.bind(*p_41_M02_AXI_arcache);
        p_41_M02_AXI_arcache->set_sv_netview_offsetfromdp(7902208);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_M02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->M02_AXI_arprot.bind(*p_41_M02_AXI_arprot);
        p_41_M02_AXI_arprot->set_sv_netview_offsetfromdp(7902264);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_M02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->M02_AXI_arqos.bind(*p_41_M02_AXI_arqos);
        p_41_M02_AXI_arqos->set_sv_netview_offsetfromdp(7902320);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_41_M02_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_41->M02_AXI_aruser.bind(*p_41_M02_AXI_aruser);
        p_41_M02_AXI_aruser->set_sv_netview_offsetfromdp(7902376);
        xsim_sc_channel<0, bool > *p_41_M02_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->M02_AXI_arvalid.bind(*p_41_M02_AXI_arvalid);
        p_41_M02_AXI_arvalid->set_sv_netview_offsetfromdp(7902432);
        xsim_sc_channel<0, bool > *p_41_M02_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_41->M02_AXI_arready.bind(*p_41_M02_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M02_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_M02_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->M02_AXI_rid.bind(*p_41_M02_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M02_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_41_M02_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_41->M02_AXI_rdata.bind(*p_41_M02_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M02_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_M02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->M02_AXI_rresp.bind(*p_41_M02_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M02_AXI_rresp);
        xsim_sc_channel<0, bool > *p_41_M02_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_41->M02_AXI_rlast.bind(*p_41_M02_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M02_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_41_M02_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_41->M02_AXI_ruser.bind(*p_41_M02_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M02_AXI_ruser);
        xsim_sc_channel<0, bool > *p_41_M02_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->M02_AXI_rvalid.bind(*p_41_M02_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M02_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_41_M02_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_41->M02_AXI_rready.bind(*p_41_M02_AXI_rready);
        p_41_M02_AXI_rready->set_sv_netview_offsetfromdp(7902880);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_M03_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->M03_AXI_awid.bind(*p_41_M03_AXI_awid);
        p_41_M03_AXI_awid->set_sv_netview_offsetfromdp(7902936);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_41_M03_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_41->M03_AXI_awaddr.bind(*p_41_M03_AXI_awaddr);
        p_41_M03_AXI_awaddr->set_sv_netview_offsetfromdp(7902992);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_41_M03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_41->M03_AXI_awlen.bind(*p_41_M03_AXI_awlen);
        p_41_M03_AXI_awlen->set_sv_netview_offsetfromdp(7903048);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_M03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->M03_AXI_awsize.bind(*p_41_M03_AXI_awsize);
        p_41_M03_AXI_awsize->set_sv_netview_offsetfromdp(7903104);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_M03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->M03_AXI_awburst.bind(*p_41_M03_AXI_awburst);
        p_41_M03_AXI_awburst->set_sv_netview_offsetfromdp(7903160);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_M03_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->M03_AXI_awlock.bind(*p_41_M03_AXI_awlock);
        p_41_M03_AXI_awlock->set_sv_netview_offsetfromdp(7903216);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_M03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->M03_AXI_awcache.bind(*p_41_M03_AXI_awcache);
        p_41_M03_AXI_awcache->set_sv_netview_offsetfromdp(7903272);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_M03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->M03_AXI_awprot.bind(*p_41_M03_AXI_awprot);
        p_41_M03_AXI_awprot->set_sv_netview_offsetfromdp(7903328);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_M03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->M03_AXI_awqos.bind(*p_41_M03_AXI_awqos);
        p_41_M03_AXI_awqos->set_sv_netview_offsetfromdp(7903384);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_41_M03_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_41->M03_AXI_awuser.bind(*p_41_M03_AXI_awuser);
        p_41_M03_AXI_awuser->set_sv_netview_offsetfromdp(7903440);
        xsim_sc_channel<0, bool > *p_41_M03_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->M03_AXI_awvalid.bind(*p_41_M03_AXI_awvalid);
        p_41_M03_AXI_awvalid->set_sv_netview_offsetfromdp(7903496);
        xsim_sc_channel<0, bool > *p_41_M03_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_41->M03_AXI_awready.bind(*p_41_M03_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M03_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_41_M03_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_41->M03_AXI_wdata.bind(*p_41_M03_AXI_wdata);
        p_41_M03_AXI_wdata->set_sv_netview_offsetfromdp(7903608);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_41_M03_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_41->M03_AXI_wstrb.bind(*p_41_M03_AXI_wstrb);
        p_41_M03_AXI_wstrb->set_sv_netview_offsetfromdp(7903664);
        xsim_sc_channel<0, bool > *p_41_M03_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_41->M03_AXI_wlast.bind(*p_41_M03_AXI_wlast);
        p_41_M03_AXI_wlast->set_sv_netview_offsetfromdp(7903720);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_41_M03_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_41->M03_AXI_wuser.bind(*p_41_M03_AXI_wuser);
        p_41_M03_AXI_wuser->set_sv_netview_offsetfromdp(7903776);
        xsim_sc_channel<0, bool > *p_41_M03_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->M03_AXI_wvalid.bind(*p_41_M03_AXI_wvalid);
        p_41_M03_AXI_wvalid->set_sv_netview_offsetfromdp(7903832);
        xsim_sc_channel<0, bool > *p_41_M03_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_41->M03_AXI_wready.bind(*p_41_M03_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M03_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_M03_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->M03_AXI_bid.bind(*p_41_M03_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M03_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_M03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->M03_AXI_bresp.bind(*p_41_M03_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M03_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_41_M03_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_41->M03_AXI_buser.bind(*p_41_M03_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M03_AXI_buser);
        xsim_sc_channel<0, bool > *p_41_M03_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->M03_AXI_bvalid.bind(*p_41_M03_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M03_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_41_M03_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_41->M03_AXI_bready.bind(*p_41_M03_AXI_bready);
        p_41_M03_AXI_bready->set_sv_netview_offsetfromdp(7904168);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_M03_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->M03_AXI_arid.bind(*p_41_M03_AXI_arid);
        p_41_M03_AXI_arid->set_sv_netview_offsetfromdp(7904224);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_41_M03_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_41->M03_AXI_araddr.bind(*p_41_M03_AXI_araddr);
        p_41_M03_AXI_araddr->set_sv_netview_offsetfromdp(7904280);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_41_M03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_41->M03_AXI_arlen.bind(*p_41_M03_AXI_arlen);
        p_41_M03_AXI_arlen->set_sv_netview_offsetfromdp(7904336);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_M03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->M03_AXI_arsize.bind(*p_41_M03_AXI_arsize);
        p_41_M03_AXI_arsize->set_sv_netview_offsetfromdp(7904392);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_M03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->M03_AXI_arburst.bind(*p_41_M03_AXI_arburst);
        p_41_M03_AXI_arburst->set_sv_netview_offsetfromdp(7904448);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_M03_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->M03_AXI_arlock.bind(*p_41_M03_AXI_arlock);
        p_41_M03_AXI_arlock->set_sv_netview_offsetfromdp(7904504);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_M03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->M03_AXI_arcache.bind(*p_41_M03_AXI_arcache);
        p_41_M03_AXI_arcache->set_sv_netview_offsetfromdp(7904560);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_M03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->M03_AXI_arprot.bind(*p_41_M03_AXI_arprot);
        p_41_M03_AXI_arprot->set_sv_netview_offsetfromdp(7904616);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_M03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->M03_AXI_arqos.bind(*p_41_M03_AXI_arqos);
        p_41_M03_AXI_arqos->set_sv_netview_offsetfromdp(7904672);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_41_M03_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_41->M03_AXI_aruser.bind(*p_41_M03_AXI_aruser);
        p_41_M03_AXI_aruser->set_sv_netview_offsetfromdp(7904728);
        xsim_sc_channel<0, bool > *p_41_M03_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->M03_AXI_arvalid.bind(*p_41_M03_AXI_arvalid);
        p_41_M03_AXI_arvalid->set_sv_netview_offsetfromdp(7904784);
        xsim_sc_channel<0, bool > *p_41_M03_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_41->M03_AXI_arready.bind(*p_41_M03_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M03_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_M03_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->M03_AXI_rid.bind(*p_41_M03_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M03_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_41_M03_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_41->M03_AXI_rdata.bind(*p_41_M03_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M03_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_M03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->M03_AXI_rresp.bind(*p_41_M03_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M03_AXI_rresp);
        xsim_sc_channel<0, bool > *p_41_M03_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_41->M03_AXI_rlast.bind(*p_41_M03_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M03_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_41_M03_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_41->M03_AXI_ruser.bind(*p_41_M03_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M03_AXI_ruser);
        xsim_sc_channel<0, bool > *p_41_M03_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->M03_AXI_rvalid.bind(*p_41_M03_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M03_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_41_M03_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_41->M03_AXI_rready.bind(*p_41_M03_AXI_rready);
        p_41_M03_AXI_rready->set_sv_netview_offsetfromdp(7905232);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_M04_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->M04_AXI_awid.bind(*p_41_M04_AXI_awid);
        p_41_M04_AXI_awid->set_sv_netview_offsetfromdp(7905288);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_41_M04_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_41->M04_AXI_awaddr.bind(*p_41_M04_AXI_awaddr);
        p_41_M04_AXI_awaddr->set_sv_netview_offsetfromdp(7905344);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_41_M04_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_41->M04_AXI_awlen.bind(*p_41_M04_AXI_awlen);
        p_41_M04_AXI_awlen->set_sv_netview_offsetfromdp(7905400);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_M04_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->M04_AXI_awsize.bind(*p_41_M04_AXI_awsize);
        p_41_M04_AXI_awsize->set_sv_netview_offsetfromdp(7905456);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_M04_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->M04_AXI_awburst.bind(*p_41_M04_AXI_awburst);
        p_41_M04_AXI_awburst->set_sv_netview_offsetfromdp(7905512);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_M04_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->M04_AXI_awlock.bind(*p_41_M04_AXI_awlock);
        p_41_M04_AXI_awlock->set_sv_netview_offsetfromdp(7905568);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_M04_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->M04_AXI_awcache.bind(*p_41_M04_AXI_awcache);
        p_41_M04_AXI_awcache->set_sv_netview_offsetfromdp(7905624);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_M04_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->M04_AXI_awprot.bind(*p_41_M04_AXI_awprot);
        p_41_M04_AXI_awprot->set_sv_netview_offsetfromdp(7905680);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_M04_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->M04_AXI_awqos.bind(*p_41_M04_AXI_awqos);
        p_41_M04_AXI_awqos->set_sv_netview_offsetfromdp(7905736);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_41_M04_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_41->M04_AXI_awuser.bind(*p_41_M04_AXI_awuser);
        p_41_M04_AXI_awuser->set_sv_netview_offsetfromdp(7905792);
        xsim_sc_channel<0, bool > *p_41_M04_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->M04_AXI_awvalid.bind(*p_41_M04_AXI_awvalid);
        p_41_M04_AXI_awvalid->set_sv_netview_offsetfromdp(7905848);
        xsim_sc_channel<0, bool > *p_41_M04_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_41->M04_AXI_awready.bind(*p_41_M04_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M04_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_41_M04_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_41->M04_AXI_wdata.bind(*p_41_M04_AXI_wdata);
        p_41_M04_AXI_wdata->set_sv_netview_offsetfromdp(7905960);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_41_M04_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_41->M04_AXI_wstrb.bind(*p_41_M04_AXI_wstrb);
        p_41_M04_AXI_wstrb->set_sv_netview_offsetfromdp(7906016);
        xsim_sc_channel<0, bool > *p_41_M04_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_41->M04_AXI_wlast.bind(*p_41_M04_AXI_wlast);
        p_41_M04_AXI_wlast->set_sv_netview_offsetfromdp(7906072);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_41_M04_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_41->M04_AXI_wuser.bind(*p_41_M04_AXI_wuser);
        p_41_M04_AXI_wuser->set_sv_netview_offsetfromdp(7906128);
        xsim_sc_channel<0, bool > *p_41_M04_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->M04_AXI_wvalid.bind(*p_41_M04_AXI_wvalid);
        p_41_M04_AXI_wvalid->set_sv_netview_offsetfromdp(7906184);
        xsim_sc_channel<0, bool > *p_41_M04_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_41->M04_AXI_wready.bind(*p_41_M04_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M04_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_M04_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->M04_AXI_bid.bind(*p_41_M04_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M04_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_M04_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->M04_AXI_bresp.bind(*p_41_M04_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M04_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_41_M04_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_41->M04_AXI_buser.bind(*p_41_M04_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M04_AXI_buser);
        xsim_sc_channel<0, bool > *p_41_M04_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->M04_AXI_bvalid.bind(*p_41_M04_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M04_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_41_M04_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_41->M04_AXI_bready.bind(*p_41_M04_AXI_bready);
        p_41_M04_AXI_bready->set_sv_netview_offsetfromdp(7906520);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_M04_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->M04_AXI_arid.bind(*p_41_M04_AXI_arid);
        p_41_M04_AXI_arid->set_sv_netview_offsetfromdp(7906576);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_41_M04_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_41->M04_AXI_araddr.bind(*p_41_M04_AXI_araddr);
        p_41_M04_AXI_araddr->set_sv_netview_offsetfromdp(7906632);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_41_M04_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_41->M04_AXI_arlen.bind(*p_41_M04_AXI_arlen);
        p_41_M04_AXI_arlen->set_sv_netview_offsetfromdp(7906688);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_M04_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->M04_AXI_arsize.bind(*p_41_M04_AXI_arsize);
        p_41_M04_AXI_arsize->set_sv_netview_offsetfromdp(7906744);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_M04_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->M04_AXI_arburst.bind(*p_41_M04_AXI_arburst);
        p_41_M04_AXI_arburst->set_sv_netview_offsetfromdp(7906800);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_M04_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->M04_AXI_arlock.bind(*p_41_M04_AXI_arlock);
        p_41_M04_AXI_arlock->set_sv_netview_offsetfromdp(7906856);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_M04_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->M04_AXI_arcache.bind(*p_41_M04_AXI_arcache);
        p_41_M04_AXI_arcache->set_sv_netview_offsetfromdp(7906912);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_M04_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->M04_AXI_arprot.bind(*p_41_M04_AXI_arprot);
        p_41_M04_AXI_arprot->set_sv_netview_offsetfromdp(7906968);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_M04_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->M04_AXI_arqos.bind(*p_41_M04_AXI_arqos);
        p_41_M04_AXI_arqos->set_sv_netview_offsetfromdp(7907024);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_41_M04_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_41->M04_AXI_aruser.bind(*p_41_M04_AXI_aruser);
        p_41_M04_AXI_aruser->set_sv_netview_offsetfromdp(7907080);
        xsim_sc_channel<0, bool > *p_41_M04_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->M04_AXI_arvalid.bind(*p_41_M04_AXI_arvalid);
        p_41_M04_AXI_arvalid->set_sv_netview_offsetfromdp(7907136);
        xsim_sc_channel<0, bool > *p_41_M04_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_41->M04_AXI_arready.bind(*p_41_M04_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M04_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_M04_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->M04_AXI_rid.bind(*p_41_M04_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M04_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_41_M04_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_41->M04_AXI_rdata.bind(*p_41_M04_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M04_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_M04_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->M04_AXI_rresp.bind(*p_41_M04_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M04_AXI_rresp);
        xsim_sc_channel<0, bool > *p_41_M04_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_41->M04_AXI_rlast.bind(*p_41_M04_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M04_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_41_M04_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_41->M04_AXI_ruser.bind(*p_41_M04_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M04_AXI_ruser);
        xsim_sc_channel<0, bool > *p_41_M04_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->M04_AXI_rvalid.bind(*p_41_M04_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M04_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_41_M04_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_41->M04_AXI_rready.bind(*p_41_M04_AXI_rready);
        p_41_M04_AXI_rready->set_sv_netview_offsetfromdp(7907584);
        sc_inst_42 = new bd_d216_rs_M00_AXI_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.rs_m00_axi");
        sc_inst_42->xsim_set_dbg_index(2424);
        xsim_sc_channel<0, bool > *p_42_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_42->aclk.bind(*p_42_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_42_aclk);
        xsim_sc_channel<0, bool > *p_42_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_42->aresetn.bind(*p_42_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_42_aresetn);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_42_s_axi_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_42->s_axi_awaddr.bind(*p_42_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_42_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_42->s_axi_awlen.bind(*p_42_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->s_axi_awsize.bind(*p_42_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->s_axi_awburst.bind(*p_42_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_42_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_42->s_axi_awlock.bind(*p_42_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->s_axi_awcache.bind(*p_42_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->s_axi_awprot.bind(*p_42_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->s_axi_awregion.bind(*p_42_s_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->s_axi_awqos.bind(*p_42_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_42_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_awvalid.bind(*p_42_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_42_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_awready.bind(*p_42_s_axi_awready);
        p_42_s_axi_awready->set_sv_netview_offsetfromdp(7908360);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_42_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_42->s_axi_wdata.bind(*p_42_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->s_axi_wstrb.bind(*p_42_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_42_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_wlast.bind(*p_42_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_42_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_wvalid.bind(*p_42_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_42_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_wready.bind(*p_42_s_axi_wready);
        p_42_s_axi_wready->set_sv_netview_offsetfromdp(7908640);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->s_axi_bresp.bind(*p_42_s_axi_bresp);
        p_42_s_axi_bresp->set_sv_netview_offsetfromdp(7908696);
        xsim_sc_channel<0, bool > *p_42_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_bvalid.bind(*p_42_s_axi_bvalid);
        p_42_s_axi_bvalid->set_sv_netview_offsetfromdp(7908752);
        xsim_sc_channel<0, bool > *p_42_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_bready.bind(*p_42_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_bready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_42_s_axi_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_42->s_axi_araddr.bind(*p_42_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_42_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_42->s_axi_arlen.bind(*p_42_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->s_axi_arsize.bind(*p_42_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->s_axi_arburst.bind(*p_42_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_42_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_42->s_axi_arlock.bind(*p_42_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->s_axi_arcache.bind(*p_42_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->s_axi_arprot.bind(*p_42_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->s_axi_arregion.bind(*p_42_s_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->s_axi_arqos.bind(*p_42_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_42_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_arvalid.bind(*p_42_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_42_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_arready.bind(*p_42_s_axi_arready);
        p_42_s_axi_arready->set_sv_netview_offsetfromdp(7909424);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_42_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_42->s_axi_rdata.bind(*p_42_s_axi_rdata);
        p_42_s_axi_rdata->set_sv_netview_offsetfromdp(7909480);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->s_axi_rresp.bind(*p_42_s_axi_rresp);
        p_42_s_axi_rresp->set_sv_netview_offsetfromdp(7909536);
        xsim_sc_channel<0, bool > *p_42_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_rlast.bind(*p_42_s_axi_rlast);
        p_42_s_axi_rlast->set_sv_netview_offsetfromdp(7909592);
        xsim_sc_channel<0, bool > *p_42_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_rvalid.bind(*p_42_s_axi_rvalid);
        p_42_s_axi_rvalid->set_sv_netview_offsetfromdp(7909648);
        xsim_sc_channel<0, bool > *p_42_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_rready.bind(*p_42_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_rready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_42_m_axi_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_42->m_axi_awaddr.bind(*p_42_m_axi_awaddr);
        p_42_m_axi_awaddr->set_sv_netview_offsetfromdp(7909760);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_42_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_42->m_axi_awlen.bind(*p_42_m_axi_awlen);
        p_42_m_axi_awlen->set_sv_netview_offsetfromdp(7909816);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->m_axi_awsize.bind(*p_42_m_axi_awsize);
        p_42_m_axi_awsize->set_sv_netview_offsetfromdp(7909872);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->m_axi_awburst.bind(*p_42_m_axi_awburst);
        p_42_m_axi_awburst->set_sv_netview_offsetfromdp(7909928);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_42_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_42->m_axi_awlock.bind(*p_42_m_axi_awlock);
        p_42_m_axi_awlock->set_sv_netview_offsetfromdp(7909984);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->m_axi_awcache.bind(*p_42_m_axi_awcache);
        p_42_m_axi_awcache->set_sv_netview_offsetfromdp(7910040);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->m_axi_awprot.bind(*p_42_m_axi_awprot);
        p_42_m_axi_awprot->set_sv_netview_offsetfromdp(7910096);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_m_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->m_axi_awregion.bind(*p_42_m_axi_awregion);
        p_42_m_axi_awregion->set_sv_netview_offsetfromdp(7910152);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->m_axi_awqos.bind(*p_42_m_axi_awqos);
        p_42_m_axi_awqos->set_sv_netview_offsetfromdp(7910208);
        xsim_sc_channel<0, bool > *p_42_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_awvalid.bind(*p_42_m_axi_awvalid);
        p_42_m_axi_awvalid->set_sv_netview_offsetfromdp(7910264);
        xsim_sc_channel<0, bool > *p_42_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_awready.bind(*p_42_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_42_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_42->m_axi_wdata.bind(*p_42_m_axi_wdata);
        p_42_m_axi_wdata->set_sv_netview_offsetfromdp(7910376);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->m_axi_wstrb.bind(*p_42_m_axi_wstrb);
        p_42_m_axi_wstrb->set_sv_netview_offsetfromdp(7910432);
        xsim_sc_channel<0, bool > *p_42_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_wlast.bind(*p_42_m_axi_wlast);
        p_42_m_axi_wlast->set_sv_netview_offsetfromdp(7910488);
        xsim_sc_channel<0, bool > *p_42_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_wvalid.bind(*p_42_m_axi_wvalid);
        p_42_m_axi_wvalid->set_sv_netview_offsetfromdp(7910544);
        xsim_sc_channel<0, bool > *p_42_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_wready.bind(*p_42_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->m_axi_bresp.bind(*p_42_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_42_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_bvalid.bind(*p_42_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_42_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_bready.bind(*p_42_m_axi_bready);
        p_42_m_axi_bready->set_sv_netview_offsetfromdp(7910768);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_42_m_axi_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_42->m_axi_araddr.bind(*p_42_m_axi_araddr);
        p_42_m_axi_araddr->set_sv_netview_offsetfromdp(7910824);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_42_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_42->m_axi_arlen.bind(*p_42_m_axi_arlen);
        p_42_m_axi_arlen->set_sv_netview_offsetfromdp(7910880);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->m_axi_arsize.bind(*p_42_m_axi_arsize);
        p_42_m_axi_arsize->set_sv_netview_offsetfromdp(7910936);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->m_axi_arburst.bind(*p_42_m_axi_arburst);
        p_42_m_axi_arburst->set_sv_netview_offsetfromdp(7910992);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_42_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_42->m_axi_arlock.bind(*p_42_m_axi_arlock);
        p_42_m_axi_arlock->set_sv_netview_offsetfromdp(7911048);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->m_axi_arcache.bind(*p_42_m_axi_arcache);
        p_42_m_axi_arcache->set_sv_netview_offsetfromdp(7911104);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->m_axi_arprot.bind(*p_42_m_axi_arprot);
        p_42_m_axi_arprot->set_sv_netview_offsetfromdp(7911160);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_m_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->m_axi_arregion.bind(*p_42_m_axi_arregion);
        p_42_m_axi_arregion->set_sv_netview_offsetfromdp(7911216);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->m_axi_arqos.bind(*p_42_m_axi_arqos);
        p_42_m_axi_arqos->set_sv_netview_offsetfromdp(7911272);
        xsim_sc_channel<0, bool > *p_42_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_arvalid.bind(*p_42_m_axi_arvalid);
        p_42_m_axi_arvalid->set_sv_netview_offsetfromdp(7911328);
        xsim_sc_channel<0, bool > *p_42_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_arready.bind(*p_42_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_42_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_42->m_axi_rdata.bind(*p_42_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->m_axi_rresp.bind(*p_42_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_42_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_rlast.bind(*p_42_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_42_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_rvalid.bind(*p_42_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_42_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_rready.bind(*p_42_m_axi_rready);
        p_42_m_axi_rready->set_sv_netview_offsetfromdp(7911664);
        sc_inst_43 = new bd_d216_plram_mem00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem00");
        sc_inst_43->xsim_set_dbg_index(2620);
        xsim_sc_channel<0, bool > *p_43_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_aclk.bind(*p_43_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_43_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_aresetn.bind(*p_43_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_43_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_43->s_axi_awaddr.bind(*p_43_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_43_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_43->s_axi_awlen.bind(*p_43_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->s_axi_awsize.bind(*p_43_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->s_axi_awburst.bind(*p_43_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_43_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_awlock.bind(*p_43_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->s_axi_awcache.bind(*p_43_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->s_axi_awprot.bind(*p_43_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_43_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_awvalid.bind(*p_43_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_43_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_awready.bind(*p_43_s_axi_awready);
        p_43_s_axi_awready->set_sv_netview_offsetfromdp(8012048);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_43_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_43->s_axi_wdata.bind(*p_43_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_43_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_43->s_axi_wstrb.bind(*p_43_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_43_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_wlast.bind(*p_43_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_43_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_wvalid.bind(*p_43_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_43_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_wready.bind(*p_43_s_axi_wready);
        p_43_s_axi_wready->set_sv_netview_offsetfromdp(8012328);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->s_axi_bresp.bind(*p_43_s_axi_bresp);
        p_43_s_axi_bresp->set_sv_netview_offsetfromdp(8012384);
        xsim_sc_channel<0, bool > *p_43_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_bvalid.bind(*p_43_s_axi_bvalid);
        p_43_s_axi_bvalid->set_sv_netview_offsetfromdp(8012440);
        xsim_sc_channel<0, bool > *p_43_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_bready.bind(*p_43_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_43_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_43->s_axi_araddr.bind(*p_43_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_43_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_43->s_axi_arlen.bind(*p_43_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->s_axi_arsize.bind(*p_43_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->s_axi_arburst.bind(*p_43_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_43_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_arlock.bind(*p_43_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->s_axi_arcache.bind(*p_43_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->s_axi_arprot.bind(*p_43_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_43_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_arvalid.bind(*p_43_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_43_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_arready.bind(*p_43_s_axi_arready);
        p_43_s_axi_arready->set_sv_netview_offsetfromdp(8013000);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_43_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_43->s_axi_rdata.bind(*p_43_s_axi_rdata);
        p_43_s_axi_rdata->set_sv_netview_offsetfromdp(8013056);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->s_axi_rresp.bind(*p_43_s_axi_rresp);
        p_43_s_axi_rresp->set_sv_netview_offsetfromdp(8013112);
        xsim_sc_channel<0, bool > *p_43_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_rlast.bind(*p_43_s_axi_rlast);
        p_43_s_axi_rlast->set_sv_netview_offsetfromdp(8013168);
        xsim_sc_channel<0, bool > *p_43_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_rvalid.bind(*p_43_s_axi_rvalid);
        p_43_s_axi_rvalid->set_sv_netview_offsetfromdp(8013224);
        xsim_sc_channel<0, bool > *p_43_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_rready.bind(*p_43_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_rready);
        xsim_sc_channel<0, bool > *p_43_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_43->bram_rst_a.bind(*p_43_bram_rst_a);
        p_43_bram_rst_a->set_sv_netview_offsetfromdp(8013336);
        xsim_sc_channel<0, bool > *p_43_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_43->bram_clk_a.bind(*p_43_bram_clk_a);
        p_43_bram_clk_a->set_sv_netview_offsetfromdp(8013392);
        xsim_sc_channel<0, bool > *p_43_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_43->bram_en_a.bind(*p_43_bram_en_a);
        p_43_bram_en_a->set_sv_netview_offsetfromdp(8013448);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_43_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_43->bram_we_a.bind(*p_43_bram_we_a);
        p_43_bram_we_a->set_sv_netview_offsetfromdp(8013504);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_43_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_43->bram_addr_a.bind(*p_43_bram_addr_a);
        p_43_bram_addr_a->set_sv_netview_offsetfromdp(8013560);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_43_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_43->bram_wrdata_a.bind(*p_43_bram_wrdata_a);
        p_43_bram_wrdata_a->set_sv_netview_offsetfromdp(8013616);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_43_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_43->bram_rddata_a.bind(*p_43_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_43_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_43_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_43->bram_rst_b.bind(*p_43_bram_rst_b);
        p_43_bram_rst_b->set_sv_netview_offsetfromdp(8013728);
        xsim_sc_channel<0, bool > *p_43_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_43->bram_clk_b.bind(*p_43_bram_clk_b);
        p_43_bram_clk_b->set_sv_netview_offsetfromdp(8013784);
        xsim_sc_channel<0, bool > *p_43_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_43->bram_en_b.bind(*p_43_bram_en_b);
        p_43_bram_en_b->set_sv_netview_offsetfromdp(8013840);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_43_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_43->bram_we_b.bind(*p_43_bram_we_b);
        p_43_bram_we_b->set_sv_netview_offsetfromdp(8013896);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_43_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_43->bram_addr_b.bind(*p_43_bram_addr_b);
        p_43_bram_addr_b->set_sv_netview_offsetfromdp(8013952);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_43_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_43->bram_wrdata_b.bind(*p_43_bram_wrdata_b);
        p_43_bram_wrdata_b->set_sv_netview_offsetfromdp(8014008);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_43_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_43->bram_rddata_b.bind(*p_43_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_43_bram_rddata_b);
        sc_inst_44 = new bd_d216_plram_mem01_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem01");
        sc_inst_44->xsim_set_dbg_index(2622);
        xsim_sc_channel<0, bool > *p_44_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_aclk.bind(*p_44_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_44_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_aresetn.bind(*p_44_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_44_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_44->s_axi_awaddr.bind(*p_44_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_44_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_44->s_axi_awlen.bind(*p_44_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->s_axi_awsize.bind(*p_44_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->s_axi_awburst.bind(*p_44_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_44_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_awlock.bind(*p_44_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->s_axi_awcache.bind(*p_44_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->s_axi_awprot.bind(*p_44_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_44_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_awvalid.bind(*p_44_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_44_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_awready.bind(*p_44_s_axi_awready);
        p_44_s_axi_awready->set_sv_netview_offsetfromdp(8075848);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_44_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_44->s_axi_wdata.bind(*p_44_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_44_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_44->s_axi_wstrb.bind(*p_44_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_44_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_wlast.bind(*p_44_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_44_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_wvalid.bind(*p_44_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_44_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_wready.bind(*p_44_s_axi_wready);
        p_44_s_axi_wready->set_sv_netview_offsetfromdp(8076128);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->s_axi_bresp.bind(*p_44_s_axi_bresp);
        p_44_s_axi_bresp->set_sv_netview_offsetfromdp(8076184);
        xsim_sc_channel<0, bool > *p_44_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_bvalid.bind(*p_44_s_axi_bvalid);
        p_44_s_axi_bvalid->set_sv_netview_offsetfromdp(8076240);
        xsim_sc_channel<0, bool > *p_44_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_bready.bind(*p_44_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_44_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_44->s_axi_araddr.bind(*p_44_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_44_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_44->s_axi_arlen.bind(*p_44_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->s_axi_arsize.bind(*p_44_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->s_axi_arburst.bind(*p_44_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_44_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_arlock.bind(*p_44_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->s_axi_arcache.bind(*p_44_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->s_axi_arprot.bind(*p_44_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_44_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_arvalid.bind(*p_44_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_44_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_arready.bind(*p_44_s_axi_arready);
        p_44_s_axi_arready->set_sv_netview_offsetfromdp(8076800);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_44_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_44->s_axi_rdata.bind(*p_44_s_axi_rdata);
        p_44_s_axi_rdata->set_sv_netview_offsetfromdp(8076856);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->s_axi_rresp.bind(*p_44_s_axi_rresp);
        p_44_s_axi_rresp->set_sv_netview_offsetfromdp(8076912);
        xsim_sc_channel<0, bool > *p_44_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_rlast.bind(*p_44_s_axi_rlast);
        p_44_s_axi_rlast->set_sv_netview_offsetfromdp(8076968);
        xsim_sc_channel<0, bool > *p_44_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_rvalid.bind(*p_44_s_axi_rvalid);
        p_44_s_axi_rvalid->set_sv_netview_offsetfromdp(8077024);
        xsim_sc_channel<0, bool > *p_44_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_rready.bind(*p_44_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_rready);
        xsim_sc_channel<0, bool > *p_44_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_44->bram_rst_a.bind(*p_44_bram_rst_a);
        p_44_bram_rst_a->set_sv_netview_offsetfromdp(8077136);
        xsim_sc_channel<0, bool > *p_44_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_44->bram_clk_a.bind(*p_44_bram_clk_a);
        p_44_bram_clk_a->set_sv_netview_offsetfromdp(8077192);
        xsim_sc_channel<0, bool > *p_44_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_44->bram_en_a.bind(*p_44_bram_en_a);
        p_44_bram_en_a->set_sv_netview_offsetfromdp(8077248);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_44_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_44->bram_we_a.bind(*p_44_bram_we_a);
        p_44_bram_we_a->set_sv_netview_offsetfromdp(8077304);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_44_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_44->bram_addr_a.bind(*p_44_bram_addr_a);
        p_44_bram_addr_a->set_sv_netview_offsetfromdp(8077360);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_44_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_44->bram_wrdata_a.bind(*p_44_bram_wrdata_a);
        p_44_bram_wrdata_a->set_sv_netview_offsetfromdp(8077416);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_44_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_44->bram_rddata_a.bind(*p_44_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_44_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_44_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_44->bram_rst_b.bind(*p_44_bram_rst_b);
        p_44_bram_rst_b->set_sv_netview_offsetfromdp(8077528);
        xsim_sc_channel<0, bool > *p_44_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_44->bram_clk_b.bind(*p_44_bram_clk_b);
        p_44_bram_clk_b->set_sv_netview_offsetfromdp(8077584);
        xsim_sc_channel<0, bool > *p_44_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_44->bram_en_b.bind(*p_44_bram_en_b);
        p_44_bram_en_b->set_sv_netview_offsetfromdp(8077640);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_44_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_44->bram_we_b.bind(*p_44_bram_we_b);
        p_44_bram_we_b->set_sv_netview_offsetfromdp(8077696);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_44_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_44->bram_addr_b.bind(*p_44_bram_addr_b);
        p_44_bram_addr_b->set_sv_netview_offsetfromdp(8077752);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_44_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_44->bram_wrdata_b.bind(*p_44_bram_wrdata_b);
        p_44_bram_wrdata_b->set_sv_netview_offsetfromdp(8077808);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_44_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_44->bram_rddata_b.bind(*p_44_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_44_bram_rddata_b);
        sc_inst_45 = new bd_d216_plram_mem02_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem02");
        sc_inst_45->xsim_set_dbg_index(2624);
        xsim_sc_channel<0, bool > *p_45_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_aclk.bind(*p_45_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_45_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_aresetn.bind(*p_45_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_45_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_45->s_axi_awaddr.bind(*p_45_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->s_axi_awlen.bind(*p_45_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->s_axi_awsize.bind(*p_45_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->s_axi_awburst.bind(*p_45_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_45_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_awlock.bind(*p_45_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->s_axi_awcache.bind(*p_45_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->s_axi_awprot.bind(*p_45_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_45_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_awvalid.bind(*p_45_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_45_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_awready.bind(*p_45_s_axi_awready);
        p_45_s_axi_awready->set_sv_netview_offsetfromdp(8139648);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->s_axi_wdata.bind(*p_45_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_45_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_45->s_axi_wstrb.bind(*p_45_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_45_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_wlast.bind(*p_45_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_45_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_wvalid.bind(*p_45_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_45_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_wready.bind(*p_45_s_axi_wready);
        p_45_s_axi_wready->set_sv_netview_offsetfromdp(8139928);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->s_axi_bresp.bind(*p_45_s_axi_bresp);
        p_45_s_axi_bresp->set_sv_netview_offsetfromdp(8139984);
        xsim_sc_channel<0, bool > *p_45_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_bvalid.bind(*p_45_s_axi_bvalid);
        p_45_s_axi_bvalid->set_sv_netview_offsetfromdp(8140040);
        xsim_sc_channel<0, bool > *p_45_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_bready.bind(*p_45_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_45_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_45->s_axi_araddr.bind(*p_45_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->s_axi_arlen.bind(*p_45_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->s_axi_arsize.bind(*p_45_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->s_axi_arburst.bind(*p_45_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_45_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_arlock.bind(*p_45_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->s_axi_arcache.bind(*p_45_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->s_axi_arprot.bind(*p_45_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_45_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_arvalid.bind(*p_45_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_45_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_arready.bind(*p_45_s_axi_arready);
        p_45_s_axi_arready->set_sv_netview_offsetfromdp(8140600);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->s_axi_rdata.bind(*p_45_s_axi_rdata);
        p_45_s_axi_rdata->set_sv_netview_offsetfromdp(8140656);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->s_axi_rresp.bind(*p_45_s_axi_rresp);
        p_45_s_axi_rresp->set_sv_netview_offsetfromdp(8140712);
        xsim_sc_channel<0, bool > *p_45_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_rlast.bind(*p_45_s_axi_rlast);
        p_45_s_axi_rlast->set_sv_netview_offsetfromdp(8140768);
        xsim_sc_channel<0, bool > *p_45_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_rvalid.bind(*p_45_s_axi_rvalid);
        p_45_s_axi_rvalid->set_sv_netview_offsetfromdp(8140824);
        xsim_sc_channel<0, bool > *p_45_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_rready.bind(*p_45_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_rready);
        xsim_sc_channel<0, bool > *p_45_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_45->bram_rst_a.bind(*p_45_bram_rst_a);
        p_45_bram_rst_a->set_sv_netview_offsetfromdp(8140936);
        xsim_sc_channel<0, bool > *p_45_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_45->bram_clk_a.bind(*p_45_bram_clk_a);
        p_45_bram_clk_a->set_sv_netview_offsetfromdp(8140992);
        xsim_sc_channel<0, bool > *p_45_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_45->bram_en_a.bind(*p_45_bram_en_a);
        p_45_bram_en_a->set_sv_netview_offsetfromdp(8141048);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_45_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_45->bram_we_a.bind(*p_45_bram_we_a);
        p_45_bram_we_a->set_sv_netview_offsetfromdp(8141104);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_45_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_45->bram_addr_a.bind(*p_45_bram_addr_a);
        p_45_bram_addr_a->set_sv_netview_offsetfromdp(8141160);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->bram_wrdata_a.bind(*p_45_bram_wrdata_a);
        p_45_bram_wrdata_a->set_sv_netview_offsetfromdp(8141216);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->bram_rddata_a.bind(*p_45_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_45_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_45_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_45->bram_rst_b.bind(*p_45_bram_rst_b);
        p_45_bram_rst_b->set_sv_netview_offsetfromdp(8141328);
        xsim_sc_channel<0, bool > *p_45_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_45->bram_clk_b.bind(*p_45_bram_clk_b);
        p_45_bram_clk_b->set_sv_netview_offsetfromdp(8141384);
        xsim_sc_channel<0, bool > *p_45_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_45->bram_en_b.bind(*p_45_bram_en_b);
        p_45_bram_en_b->set_sv_netview_offsetfromdp(8141440);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_45_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_45->bram_we_b.bind(*p_45_bram_we_b);
        p_45_bram_we_b->set_sv_netview_offsetfromdp(8141496);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_45_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_45->bram_addr_b.bind(*p_45_bram_addr_b);
        p_45_bram_addr_b->set_sv_netview_offsetfromdp(8141552);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->bram_wrdata_b.bind(*p_45_bram_wrdata_b);
        p_45_bram_wrdata_b->set_sv_netview_offsetfromdp(8141608);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->bram_rddata_b.bind(*p_45_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_45_bram_rddata_b);
        sc_inst_46 = new bd_d216_plram_mem03_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem03");
        sc_inst_46->xsim_set_dbg_index(2626);
        xsim_sc_channel<0, bool > *p_46_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_aclk.bind(*p_46_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_46_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_aresetn.bind(*p_46_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_46_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_46->s_axi_awaddr.bind(*p_46_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_46_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_46->s_axi_awlen.bind(*p_46_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->s_axi_awsize.bind(*p_46_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->s_axi_awburst.bind(*p_46_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_46_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_awlock.bind(*p_46_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->s_axi_awcache.bind(*p_46_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->s_axi_awprot.bind(*p_46_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_46_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_awvalid.bind(*p_46_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_46_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_awready.bind(*p_46_s_axi_awready);
        p_46_s_axi_awready->set_sv_netview_offsetfromdp(8203448);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_46_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_46->s_axi_wdata.bind(*p_46_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_46_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_46->s_axi_wstrb.bind(*p_46_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_46_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_wlast.bind(*p_46_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_46_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_wvalid.bind(*p_46_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_46_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_wready.bind(*p_46_s_axi_wready);
        p_46_s_axi_wready->set_sv_netview_offsetfromdp(8203728);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->s_axi_bresp.bind(*p_46_s_axi_bresp);
        p_46_s_axi_bresp->set_sv_netview_offsetfromdp(8203784);
        xsim_sc_channel<0, bool > *p_46_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_bvalid.bind(*p_46_s_axi_bvalid);
        p_46_s_axi_bvalid->set_sv_netview_offsetfromdp(8203840);
        xsim_sc_channel<0, bool > *p_46_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_bready.bind(*p_46_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_46_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_46->s_axi_araddr.bind(*p_46_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_46_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_46->s_axi_arlen.bind(*p_46_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->s_axi_arsize.bind(*p_46_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->s_axi_arburst.bind(*p_46_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_46_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_arlock.bind(*p_46_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->s_axi_arcache.bind(*p_46_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->s_axi_arprot.bind(*p_46_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_46_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_arvalid.bind(*p_46_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_46_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_arready.bind(*p_46_s_axi_arready);
        p_46_s_axi_arready->set_sv_netview_offsetfromdp(8204400);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_46_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_46->s_axi_rdata.bind(*p_46_s_axi_rdata);
        p_46_s_axi_rdata->set_sv_netview_offsetfromdp(8204456);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->s_axi_rresp.bind(*p_46_s_axi_rresp);
        p_46_s_axi_rresp->set_sv_netview_offsetfromdp(8204512);
        xsim_sc_channel<0, bool > *p_46_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_rlast.bind(*p_46_s_axi_rlast);
        p_46_s_axi_rlast->set_sv_netview_offsetfromdp(8204568);
        xsim_sc_channel<0, bool > *p_46_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_rvalid.bind(*p_46_s_axi_rvalid);
        p_46_s_axi_rvalid->set_sv_netview_offsetfromdp(8204624);
        xsim_sc_channel<0, bool > *p_46_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_rready.bind(*p_46_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_rready);
        xsim_sc_channel<0, bool > *p_46_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_46->bram_rst_a.bind(*p_46_bram_rst_a);
        p_46_bram_rst_a->set_sv_netview_offsetfromdp(8204736);
        xsim_sc_channel<0, bool > *p_46_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_46->bram_clk_a.bind(*p_46_bram_clk_a);
        p_46_bram_clk_a->set_sv_netview_offsetfromdp(8204792);
        xsim_sc_channel<0, bool > *p_46_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_46->bram_en_a.bind(*p_46_bram_en_a);
        p_46_bram_en_a->set_sv_netview_offsetfromdp(8204848);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_46_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_46->bram_we_a.bind(*p_46_bram_we_a);
        p_46_bram_we_a->set_sv_netview_offsetfromdp(8204904);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_46_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_46->bram_addr_a.bind(*p_46_bram_addr_a);
        p_46_bram_addr_a->set_sv_netview_offsetfromdp(8204960);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_46_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_46->bram_wrdata_a.bind(*p_46_bram_wrdata_a);
        p_46_bram_wrdata_a->set_sv_netview_offsetfromdp(8205016);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_46_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_46->bram_rddata_a.bind(*p_46_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_46_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_46_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_46->bram_rst_b.bind(*p_46_bram_rst_b);
        p_46_bram_rst_b->set_sv_netview_offsetfromdp(8205128);
        xsim_sc_channel<0, bool > *p_46_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_46->bram_clk_b.bind(*p_46_bram_clk_b);
        p_46_bram_clk_b->set_sv_netview_offsetfromdp(8205184);
        xsim_sc_channel<0, bool > *p_46_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_46->bram_en_b.bind(*p_46_bram_en_b);
        p_46_bram_en_b->set_sv_netview_offsetfromdp(8205240);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_46_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_46->bram_we_b.bind(*p_46_bram_we_b);
        p_46_bram_we_b->set_sv_netview_offsetfromdp(8205296);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_46_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_46->bram_addr_b.bind(*p_46_bram_addr_b);
        p_46_bram_addr_b->set_sv_netview_offsetfromdp(8205352);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_46_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_46->bram_wrdata_b.bind(*p_46_bram_wrdata_b);
        p_46_bram_wrdata_b->set_sv_netview_offsetfromdp(8205408);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_46_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_46->bram_rddata_b.bind(*p_46_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_46_bram_rddata_b);
        sc_inst_47 = new pfm_dynamic_sci(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.pfm_dynamic_sci_inst");
        sc_inst_47->xsim_set_dbg_index(52);
        sc_inst_48 = new pfm_dynamic_profile_vip_0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.profile_vip_0");
        sc_inst_48->xsim_set_dbg_index(53);
        xsim_sc_channel<0, bool > *p_48_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_48->aclk.bind(*p_48_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_48_aclk);
        xsim_sc_channel<0, bool > *p_48_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_48->aresetn.bind(*p_48_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_48_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_48_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_48->s_axi_awaddr.bind(*p_48_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_48_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_48->s_axi_awlen.bind(*p_48_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->s_axi_awburst.bind(*p_48_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_48_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_48->s_axi_awlock.bind(*p_48_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_48_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_48->s_axi_awcache.bind(*p_48_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_48_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_48->s_axi_awprot.bind(*p_48_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_48_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_48->s_axi_awqos.bind(*p_48_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_48_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_awvalid.bind(*p_48_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_48_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_awready.bind(*p_48_s_axi_awready);
        p_48_s_axi_awready->set_sv_netview_offsetfromdp(8365688);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_48_s_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_48->s_axi_wdata.bind(*p_48_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_48_s_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_48->s_axi_wstrb.bind(*p_48_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_48_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_wlast.bind(*p_48_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_48_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_wvalid.bind(*p_48_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_48_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_wready.bind(*p_48_s_axi_wready);
        p_48_s_axi_wready->set_sv_netview_offsetfromdp(8365968);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->s_axi_bresp.bind(*p_48_s_axi_bresp);
        p_48_s_axi_bresp->set_sv_netview_offsetfromdp(8366024);
        xsim_sc_channel<0, bool > *p_48_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_bvalid.bind(*p_48_s_axi_bvalid);
        p_48_s_axi_bvalid->set_sv_netview_offsetfromdp(8366080);
        xsim_sc_channel<0, bool > *p_48_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_bready.bind(*p_48_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_48_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_48->s_axi_araddr.bind(*p_48_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_48_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_48->s_axi_arlen.bind(*p_48_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->s_axi_arburst.bind(*p_48_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_48_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_48->s_axi_arlock.bind(*p_48_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_48_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_48->s_axi_arcache.bind(*p_48_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_48_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_48->s_axi_arprot.bind(*p_48_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_48_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_48->s_axi_arqos.bind(*p_48_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_48_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_arvalid.bind(*p_48_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_48_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_arready.bind(*p_48_s_axi_arready);
        p_48_s_axi_arready->set_sv_netview_offsetfromdp(8366640);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_48_s_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_48->s_axi_rdata.bind(*p_48_s_axi_rdata);
        p_48_s_axi_rdata->set_sv_netview_offsetfromdp(8366696);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->s_axi_rresp.bind(*p_48_s_axi_rresp);
        p_48_s_axi_rresp->set_sv_netview_offsetfromdp(8366752);
        xsim_sc_channel<0, bool > *p_48_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_rlast.bind(*p_48_s_axi_rlast);
        p_48_s_axi_rlast->set_sv_netview_offsetfromdp(8366808);
        xsim_sc_channel<0, bool > *p_48_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_rvalid.bind(*p_48_s_axi_rvalid);
        p_48_s_axi_rvalid->set_sv_netview_offsetfromdp(8366864);
        xsim_sc_channel<0, bool > *p_48_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_rready.bind(*p_48_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_48_m_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_48->m_axi_awaddr.bind(*p_48_m_axi_awaddr);
        p_48_m_axi_awaddr->set_sv_netview_offsetfromdp(8366976);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_48_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_48->m_axi_awlen.bind(*p_48_m_axi_awlen);
        p_48_m_axi_awlen->set_sv_netview_offsetfromdp(8367032);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->m_axi_awburst.bind(*p_48_m_axi_awburst);
        p_48_m_axi_awburst->set_sv_netview_offsetfromdp(8367088);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_48_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_48->m_axi_awlock.bind(*p_48_m_axi_awlock);
        p_48_m_axi_awlock->set_sv_netview_offsetfromdp(8367144);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_48_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_48->m_axi_awcache.bind(*p_48_m_axi_awcache);
        p_48_m_axi_awcache->set_sv_netview_offsetfromdp(8367200);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_48_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_48->m_axi_awprot.bind(*p_48_m_axi_awprot);
        p_48_m_axi_awprot->set_sv_netview_offsetfromdp(8367256);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_48_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_48->m_axi_awqos.bind(*p_48_m_axi_awqos);
        p_48_m_axi_awqos->set_sv_netview_offsetfromdp(8367312);
        xsim_sc_channel<0, bool > *p_48_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_awvalid.bind(*p_48_m_axi_awvalid);
        p_48_m_axi_awvalid->set_sv_netview_offsetfromdp(8367368);
        xsim_sc_channel<0, bool > *p_48_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_awready.bind(*p_48_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_48_m_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_48->m_axi_wdata.bind(*p_48_m_axi_wdata);
        p_48_m_axi_wdata->set_sv_netview_offsetfromdp(8367480);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_48_m_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_48->m_axi_wstrb.bind(*p_48_m_axi_wstrb);
        p_48_m_axi_wstrb->set_sv_netview_offsetfromdp(8367536);
        xsim_sc_channel<0, bool > *p_48_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_wlast.bind(*p_48_m_axi_wlast);
        p_48_m_axi_wlast->set_sv_netview_offsetfromdp(8367592);
        xsim_sc_channel<0, bool > *p_48_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_wvalid.bind(*p_48_m_axi_wvalid);
        p_48_m_axi_wvalid->set_sv_netview_offsetfromdp(8367648);
        xsim_sc_channel<0, bool > *p_48_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_wready.bind(*p_48_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->m_axi_bresp.bind(*p_48_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_48_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_bvalid.bind(*p_48_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_48_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_bready.bind(*p_48_m_axi_bready);
        p_48_m_axi_bready->set_sv_netview_offsetfromdp(8367872);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_48_m_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_48->m_axi_araddr.bind(*p_48_m_axi_araddr);
        p_48_m_axi_araddr->set_sv_netview_offsetfromdp(8367928);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_48_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_48->m_axi_arlen.bind(*p_48_m_axi_arlen);
        p_48_m_axi_arlen->set_sv_netview_offsetfromdp(8367984);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->m_axi_arburst.bind(*p_48_m_axi_arburst);
        p_48_m_axi_arburst->set_sv_netview_offsetfromdp(8368040);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_48_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_48->m_axi_arlock.bind(*p_48_m_axi_arlock);
        p_48_m_axi_arlock->set_sv_netview_offsetfromdp(8368096);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_48_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_48->m_axi_arcache.bind(*p_48_m_axi_arcache);
        p_48_m_axi_arcache->set_sv_netview_offsetfromdp(8368152);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_48_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_48->m_axi_arprot.bind(*p_48_m_axi_arprot);
        p_48_m_axi_arprot->set_sv_netview_offsetfromdp(8368208);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_48_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_48->m_axi_arqos.bind(*p_48_m_axi_arqos);
        p_48_m_axi_arqos->set_sv_netview_offsetfromdp(8368264);
        xsim_sc_channel<0, bool > *p_48_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_arvalid.bind(*p_48_m_axi_arvalid);
        p_48_m_axi_arvalid->set_sv_netview_offsetfromdp(8368320);
        xsim_sc_channel<0, bool > *p_48_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_arready.bind(*p_48_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_arready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_48_m_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_48->m_axi_rdata.bind(*p_48_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->m_axi_rresp.bind(*p_48_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_48_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_rlast.bind(*p_48_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_48_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_rvalid.bind(*p_48_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_48_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_rready.bind(*p_48_m_axi_rready);
        p_48_m_axi_rready->set_sv_netview_offsetfromdp(8368656);
        sc_inst_49 = new pfm_dynamic_m01_regslice_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.m01_couplers.m01_regslice");
        sc_inst_49->xsim_set_dbg_index(2969);
        xsim_sc_channel<0, bool > *p_49_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_49->aclk.bind(*p_49_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_49_aclk);
        xsim_sc_channel<0, bool > *p_49_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_49->aresetn.bind(*p_49_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_49_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_49_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_49->s_axi_awaddr.bind(*p_49_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_49_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_49->s_axi_awprot.bind(*p_49_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_49_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_awvalid.bind(*p_49_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_49_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_awready.bind(*p_49_s_axi_awready);
        p_49_s_axi_awready->set_sv_netview_offsetfromdp(8904272);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_49_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_49->s_axi_wdata.bind(*p_49_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_49_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_49->s_axi_wstrb.bind(*p_49_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_49_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_wvalid.bind(*p_49_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_49_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_wready.bind(*p_49_s_axi_wready);
        p_49_s_axi_wready->set_sv_netview_offsetfromdp(8904496);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->s_axi_bresp.bind(*p_49_s_axi_bresp);
        p_49_s_axi_bresp->set_sv_netview_offsetfromdp(8904552);
        xsim_sc_channel<0, bool > *p_49_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_bvalid.bind(*p_49_s_axi_bvalid);
        p_49_s_axi_bvalid->set_sv_netview_offsetfromdp(8904608);
        xsim_sc_channel<0, bool > *p_49_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_bready.bind(*p_49_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_49_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_49->s_axi_araddr.bind(*p_49_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_49_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_49->s_axi_arprot.bind(*p_49_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_49_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_arvalid.bind(*p_49_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_49_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_arready.bind(*p_49_s_axi_arready);
        p_49_s_axi_arready->set_sv_netview_offsetfromdp(8904888);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_49_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_49->s_axi_rdata.bind(*p_49_s_axi_rdata);
        p_49_s_axi_rdata->set_sv_netview_offsetfromdp(8904944);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->s_axi_rresp.bind(*p_49_s_axi_rresp);
        p_49_s_axi_rresp->set_sv_netview_offsetfromdp(8905000);
        xsim_sc_channel<0, bool > *p_49_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_rvalid.bind(*p_49_s_axi_rvalid);
        p_49_s_axi_rvalid->set_sv_netview_offsetfromdp(8905056);
        xsim_sc_channel<0, bool > *p_49_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_rready.bind(*p_49_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_49_m_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_49->m_axi_awaddr.bind(*p_49_m_axi_awaddr);
        p_49_m_axi_awaddr->set_sv_netview_offsetfromdp(8905168);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_49_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_49->m_axi_awprot.bind(*p_49_m_axi_awprot);
        p_49_m_axi_awprot->set_sv_netview_offsetfromdp(8905224);
        xsim_sc_channel<0, bool > *p_49_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->m_axi_awvalid.bind(*p_49_m_axi_awvalid);
        p_49_m_axi_awvalid->set_sv_netview_offsetfromdp(8905280);
        xsim_sc_channel<0, bool > *p_49_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_49->m_axi_awready.bind(*p_49_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_49_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_49_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_49->m_axi_wdata.bind(*p_49_m_axi_wdata);
        p_49_m_axi_wdata->set_sv_netview_offsetfromdp(8905392);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_49_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_49->m_axi_wstrb.bind(*p_49_m_axi_wstrb);
        p_49_m_axi_wstrb->set_sv_netview_offsetfromdp(8905448);
        xsim_sc_channel<0, bool > *p_49_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->m_axi_wvalid.bind(*p_49_m_axi_wvalid);
        p_49_m_axi_wvalid->set_sv_netview_offsetfromdp(8905504);
        xsim_sc_channel<0, bool > *p_49_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_49->m_axi_wready.bind(*p_49_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_49_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->m_axi_bresp.bind(*p_49_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_49_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_49_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->m_axi_bvalid.bind(*p_49_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_49_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_49->m_axi_bready.bind(*p_49_m_axi_bready);
        p_49_m_axi_bready->set_sv_netview_offsetfromdp(8905728);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_49_m_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_49->m_axi_araddr.bind(*p_49_m_axi_araddr);
        p_49_m_axi_araddr->set_sv_netview_offsetfromdp(8905784);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_49_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_49->m_axi_arprot.bind(*p_49_m_axi_arprot);
        p_49_m_axi_arprot->set_sv_netview_offsetfromdp(8905840);
        xsim_sc_channel<0, bool > *p_49_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->m_axi_arvalid.bind(*p_49_m_axi_arvalid);
        p_49_m_axi_arvalid->set_sv_netview_offsetfromdp(8905896);
        xsim_sc_channel<0, bool > *p_49_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_49->m_axi_arready.bind(*p_49_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_49_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_49_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_49->m_axi_rdata.bind(*p_49_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_49_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->m_axi_rresp.bind(*p_49_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_49_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_49_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->m_axi_rvalid.bind(*p_49_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_49_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_49->m_axi_rready.bind(*p_49_m_axi_rready);
        p_49_m_axi_rready->set_sv_netview_offsetfromdp(8906176);
        sc_inst_50 = new pfm_dynamic_auto_cc_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.m02_couplers.auto_cc");
        sc_inst_50->xsim_set_dbg_index(3010);
        xsim_sc_channel<0, bool > *p_50_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_aclk.bind(*p_50_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_50_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_aresetn.bind(*p_50_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_aresetn);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_50_s_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_50->s_axi_awaddr.bind(*p_50_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->s_axi_awprot.bind(*p_50_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_50_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_awvalid.bind(*p_50_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_50_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_awready.bind(*p_50_s_axi_awready);
        p_50_s_axi_awready->set_sv_netview_offsetfromdp(8943200);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_50_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_50->s_axi_wdata.bind(*p_50_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_50_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_50->s_axi_wstrb.bind(*p_50_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_50_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_wvalid.bind(*p_50_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_50_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_wready.bind(*p_50_s_axi_wready);
        p_50_s_axi_wready->set_sv_netview_offsetfromdp(8943424);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->s_axi_bresp.bind(*p_50_s_axi_bresp);
        p_50_s_axi_bresp->set_sv_netview_offsetfromdp(8943480);
        xsim_sc_channel<0, bool > *p_50_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_bvalid.bind(*p_50_s_axi_bvalid);
        p_50_s_axi_bvalid->set_sv_netview_offsetfromdp(8943536);
        xsim_sc_channel<0, bool > *p_50_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_bready.bind(*p_50_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_bready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_50_s_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_50->s_axi_araddr.bind(*p_50_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->s_axi_arprot.bind(*p_50_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_50_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_arvalid.bind(*p_50_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_50_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_arready.bind(*p_50_s_axi_arready);
        p_50_s_axi_arready->set_sv_netview_offsetfromdp(8943816);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_50_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_50->s_axi_rdata.bind(*p_50_s_axi_rdata);
        p_50_s_axi_rdata->set_sv_netview_offsetfromdp(8943872);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->s_axi_rresp.bind(*p_50_s_axi_rresp);
        p_50_s_axi_rresp->set_sv_netview_offsetfromdp(8943928);
        xsim_sc_channel<0, bool > *p_50_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_rvalid.bind(*p_50_s_axi_rvalid);
        p_50_s_axi_rvalid->set_sv_netview_offsetfromdp(8943984);
        xsim_sc_channel<0, bool > *p_50_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_rready.bind(*p_50_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_rready);
        xsim_sc_channel<0, bool > *p_50_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_aclk.bind(*p_50_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_50_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_aresetn.bind(*p_50_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_aresetn);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_50_m_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_50->m_axi_awaddr.bind(*p_50_m_axi_awaddr);
        p_50_m_axi_awaddr->set_sv_netview_offsetfromdp(8944208);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->m_axi_awprot.bind(*p_50_m_axi_awprot);
        p_50_m_axi_awprot->set_sv_netview_offsetfromdp(8944264);
        xsim_sc_channel<0, bool > *p_50_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_awvalid.bind(*p_50_m_axi_awvalid);
        p_50_m_axi_awvalid->set_sv_netview_offsetfromdp(8944320);
        xsim_sc_channel<0, bool > *p_50_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_awready.bind(*p_50_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_50_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_50->m_axi_wdata.bind(*p_50_m_axi_wdata);
        p_50_m_axi_wdata->set_sv_netview_offsetfromdp(8944432);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_50_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_50->m_axi_wstrb.bind(*p_50_m_axi_wstrb);
        p_50_m_axi_wstrb->set_sv_netview_offsetfromdp(8944488);
        xsim_sc_channel<0, bool > *p_50_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_wvalid.bind(*p_50_m_axi_wvalid);
        p_50_m_axi_wvalid->set_sv_netview_offsetfromdp(8944544);
        xsim_sc_channel<0, bool > *p_50_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_wready.bind(*p_50_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->m_axi_bresp.bind(*p_50_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_50_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_bvalid.bind(*p_50_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_50_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_bready.bind(*p_50_m_axi_bready);
        p_50_m_axi_bready->set_sv_netview_offsetfromdp(8944768);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_50_m_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_50->m_axi_araddr.bind(*p_50_m_axi_araddr);
        p_50_m_axi_araddr->set_sv_netview_offsetfromdp(8944824);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->m_axi_arprot.bind(*p_50_m_axi_arprot);
        p_50_m_axi_arprot->set_sv_netview_offsetfromdp(8944880);
        xsim_sc_channel<0, bool > *p_50_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_arvalid.bind(*p_50_m_axi_arvalid);
        p_50_m_axi_arvalid->set_sv_netview_offsetfromdp(8944936);
        xsim_sc_channel<0, bool > *p_50_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_arready.bind(*p_50_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_50_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_50->m_axi_rdata.bind(*p_50_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->m_axi_rresp.bind(*p_50_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_50_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_rvalid.bind(*p_50_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_50_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_rready.bind(*p_50_m_axi_rready);
        p_50_m_axi_rready->set_sv_netview_offsetfromdp(8945216);
        sc_inst_51 = new pfm_dynamic_m02_regslice_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.m02_couplers.m02_regslice");
        sc_inst_51->xsim_set_dbg_index(3011);
        xsim_sc_channel<0, bool > *p_51_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_51->aclk.bind(*p_51_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_51_aclk);
        xsim_sc_channel<0, bool > *p_51_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_51->aresetn.bind(*p_51_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_51_aresetn);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_51_s_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_51->s_axi_awaddr.bind(*p_51_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->s_axi_awprot.bind(*p_51_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_51_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_awvalid.bind(*p_51_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_51_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_awready.bind(*p_51_s_axi_awready);
        p_51_s_axi_awready->set_sv_netview_offsetfromdp(8945600);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_51_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_51->s_axi_wdata.bind(*p_51_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->s_axi_wstrb.bind(*p_51_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_51_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_wvalid.bind(*p_51_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_51_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_wready.bind(*p_51_s_axi_wready);
        p_51_s_axi_wready->set_sv_netview_offsetfromdp(8945824);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->s_axi_bresp.bind(*p_51_s_axi_bresp);
        p_51_s_axi_bresp->set_sv_netview_offsetfromdp(8945880);
        xsim_sc_channel<0, bool > *p_51_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_bvalid.bind(*p_51_s_axi_bvalid);
        p_51_s_axi_bvalid->set_sv_netview_offsetfromdp(8945936);
        xsim_sc_channel<0, bool > *p_51_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_bready.bind(*p_51_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_bready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_51_s_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_51->s_axi_araddr.bind(*p_51_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->s_axi_arprot.bind(*p_51_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_51_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_arvalid.bind(*p_51_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_51_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_arready.bind(*p_51_s_axi_arready);
        p_51_s_axi_arready->set_sv_netview_offsetfromdp(8946216);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_51_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_51->s_axi_rdata.bind(*p_51_s_axi_rdata);
        p_51_s_axi_rdata->set_sv_netview_offsetfromdp(8946272);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->s_axi_rresp.bind(*p_51_s_axi_rresp);
        p_51_s_axi_rresp->set_sv_netview_offsetfromdp(8946328);
        xsim_sc_channel<0, bool > *p_51_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_rvalid.bind(*p_51_s_axi_rvalid);
        p_51_s_axi_rvalid->set_sv_netview_offsetfromdp(8946384);
        xsim_sc_channel<0, bool > *p_51_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_rready.bind(*p_51_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_rready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_51_m_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_51->m_axi_awaddr.bind(*p_51_m_axi_awaddr);
        p_51_m_axi_awaddr->set_sv_netview_offsetfromdp(8946496);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->m_axi_awprot.bind(*p_51_m_axi_awprot);
        p_51_m_axi_awprot->set_sv_netview_offsetfromdp(8946552);
        xsim_sc_channel<0, bool > *p_51_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->m_axi_awvalid.bind(*p_51_m_axi_awvalid);
        p_51_m_axi_awvalid->set_sv_netview_offsetfromdp(8946608);
        xsim_sc_channel<0, bool > *p_51_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_51->m_axi_awready.bind(*p_51_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_51_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_51->m_axi_wdata.bind(*p_51_m_axi_wdata);
        p_51_m_axi_wdata->set_sv_netview_offsetfromdp(8946720);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->m_axi_wstrb.bind(*p_51_m_axi_wstrb);
        p_51_m_axi_wstrb->set_sv_netview_offsetfromdp(8946776);
        xsim_sc_channel<0, bool > *p_51_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->m_axi_wvalid.bind(*p_51_m_axi_wvalid);
        p_51_m_axi_wvalid->set_sv_netview_offsetfromdp(8946832);
        xsim_sc_channel<0, bool > *p_51_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_51->m_axi_wready.bind(*p_51_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->m_axi_bresp.bind(*p_51_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_51_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->m_axi_bvalid.bind(*p_51_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_51_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_51->m_axi_bready.bind(*p_51_m_axi_bready);
        p_51_m_axi_bready->set_sv_netview_offsetfromdp(8947056);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_51_m_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_51->m_axi_araddr.bind(*p_51_m_axi_araddr);
        p_51_m_axi_araddr->set_sv_netview_offsetfromdp(8947112);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->m_axi_arprot.bind(*p_51_m_axi_arprot);
        p_51_m_axi_arprot->set_sv_netview_offsetfromdp(8947168);
        xsim_sc_channel<0, bool > *p_51_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->m_axi_arvalid.bind(*p_51_m_axi_arvalid);
        p_51_m_axi_arvalid->set_sv_netview_offsetfromdp(8947224);
        xsim_sc_channel<0, bool > *p_51_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_51->m_axi_arready.bind(*p_51_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_51_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_51->m_axi_rdata.bind(*p_51_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->m_axi_rresp.bind(*p_51_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_51_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->m_axi_rvalid.bind(*p_51_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_51_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_51->m_axi_rready.bind(*p_51_m_axi_rready);
        p_51_m_axi_rready->set_sv_netview_offsetfromdp(8947504);
        sc_inst_52 = new pfm_dynamic_auto_cc_1(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.m03_couplers.auto_cc");
        sc_inst_52->xsim_set_dbg_index(3054);
        xsim_sc_channel<0, bool > *p_52_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_aclk.bind(*p_52_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_52_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_aresetn.bind(*p_52_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_aresetn);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_52_s_axi_awaddr = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_52->s_axi_awaddr.bind(*p_52_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_52_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_52->s_axi_awprot.bind(*p_52_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_52_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_awvalid.bind(*p_52_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_52_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_awready.bind(*p_52_s_axi_awready);
        p_52_s_axi_awready->set_sv_netview_offsetfromdp(8984528);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_52_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_52->s_axi_wdata.bind(*p_52_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->s_axi_wstrb.bind(*p_52_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_52_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_wvalid.bind(*p_52_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_52_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_wready.bind(*p_52_s_axi_wready);
        p_52_s_axi_wready->set_sv_netview_offsetfromdp(8984752);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->s_axi_bresp.bind(*p_52_s_axi_bresp);
        p_52_s_axi_bresp->set_sv_netview_offsetfromdp(8984808);
        xsim_sc_channel<0, bool > *p_52_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_bvalid.bind(*p_52_s_axi_bvalid);
        p_52_s_axi_bvalid->set_sv_netview_offsetfromdp(8984864);
        xsim_sc_channel<0, bool > *p_52_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_bready.bind(*p_52_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_bready);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_52_s_axi_araddr = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_52->s_axi_araddr.bind(*p_52_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_52_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_52->s_axi_arprot.bind(*p_52_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_52_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_arvalid.bind(*p_52_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_52_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_arready.bind(*p_52_s_axi_arready);
        p_52_s_axi_arready->set_sv_netview_offsetfromdp(8985144);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_52_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_52->s_axi_rdata.bind(*p_52_s_axi_rdata);
        p_52_s_axi_rdata->set_sv_netview_offsetfromdp(8985200);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->s_axi_rresp.bind(*p_52_s_axi_rresp);
        p_52_s_axi_rresp->set_sv_netview_offsetfromdp(8985256);
        xsim_sc_channel<0, bool > *p_52_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_rvalid.bind(*p_52_s_axi_rvalid);
        p_52_s_axi_rvalid->set_sv_netview_offsetfromdp(8985312);
        xsim_sc_channel<0, bool > *p_52_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_rready.bind(*p_52_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_rready);
        xsim_sc_channel<0, bool > *p_52_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_axi_aclk.bind(*p_52_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_52_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_52_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_axi_aresetn.bind(*p_52_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_52_m_axi_aresetn);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_52_m_axi_awaddr = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_52->m_axi_awaddr.bind(*p_52_m_axi_awaddr);
        p_52_m_axi_awaddr->set_sv_netview_offsetfromdp(8985536);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_52_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_52->m_axi_awprot.bind(*p_52_m_axi_awprot);
        p_52_m_axi_awprot->set_sv_netview_offsetfromdp(8985592);
        xsim_sc_channel<0, bool > *p_52_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_axi_awvalid.bind(*p_52_m_axi_awvalid);
        p_52_m_axi_awvalid->set_sv_netview_offsetfromdp(8985648);
        xsim_sc_channel<0, bool > *p_52_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_axi_awready.bind(*p_52_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_52_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_52_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_52->m_axi_wdata.bind(*p_52_m_axi_wdata);
        p_52_m_axi_wdata->set_sv_netview_offsetfromdp(8985760);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->m_axi_wstrb.bind(*p_52_m_axi_wstrb);
        p_52_m_axi_wstrb->set_sv_netview_offsetfromdp(8985816);
        xsim_sc_channel<0, bool > *p_52_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_axi_wvalid.bind(*p_52_m_axi_wvalid);
        p_52_m_axi_wvalid->set_sv_netview_offsetfromdp(8985872);
        xsim_sc_channel<0, bool > *p_52_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_axi_wready.bind(*p_52_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_52_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->m_axi_bresp.bind(*p_52_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_52_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_52_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_axi_bvalid.bind(*p_52_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_52_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_52_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_axi_bready.bind(*p_52_m_axi_bready);
        p_52_m_axi_bready->set_sv_netview_offsetfromdp(8986096);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_52_m_axi_araddr = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_52->m_axi_araddr.bind(*p_52_m_axi_araddr);
        p_52_m_axi_araddr->set_sv_netview_offsetfromdp(8986152);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_52_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_52->m_axi_arprot.bind(*p_52_m_axi_arprot);
        p_52_m_axi_arprot->set_sv_netview_offsetfromdp(8986208);
        xsim_sc_channel<0, bool > *p_52_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_axi_arvalid.bind(*p_52_m_axi_arvalid);
        p_52_m_axi_arvalid->set_sv_netview_offsetfromdp(8986264);
        xsim_sc_channel<0, bool > *p_52_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_axi_arready.bind(*p_52_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_52_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_52_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_52->m_axi_rdata.bind(*p_52_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_52_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->m_axi_rresp.bind(*p_52_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_52_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_52_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_axi_rvalid.bind(*p_52_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_52_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_52_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_axi_rready.bind(*p_52_m_axi_rready);
        p_52_m_axi_rready->set_sv_netview_offsetfromdp(8986544);
        sc_inst_53 = new pfm_dynamic_m03_regslice_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.m03_couplers.m03_regslice");
        sc_inst_53->xsim_set_dbg_index(3055);
        xsim_sc_channel<0, bool > *p_53_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_53->aclk.bind(*p_53_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_53_aclk);
        xsim_sc_channel<0, bool > *p_53_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_53->aresetn.bind(*p_53_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_53_aresetn);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_53_s_axi_awaddr = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_53->s_axi_awaddr.bind(*p_53_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_53_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_53->s_axi_awprot.bind(*p_53_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_53_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_awvalid.bind(*p_53_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_53_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_awready.bind(*p_53_s_axi_awready);
        p_53_s_axi_awready->set_sv_netview_offsetfromdp(8986928);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_53_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_53->s_axi_wdata.bind(*p_53_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->s_axi_wstrb.bind(*p_53_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_53_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_wvalid.bind(*p_53_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_53_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_wready.bind(*p_53_s_axi_wready);
        p_53_s_axi_wready->set_sv_netview_offsetfromdp(8987152);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->s_axi_bresp.bind(*p_53_s_axi_bresp);
        p_53_s_axi_bresp->set_sv_netview_offsetfromdp(8987208);
        xsim_sc_channel<0, bool > *p_53_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_bvalid.bind(*p_53_s_axi_bvalid);
        p_53_s_axi_bvalid->set_sv_netview_offsetfromdp(8987264);
        xsim_sc_channel<0, bool > *p_53_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_bready.bind(*p_53_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_bready);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_53_s_axi_araddr = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_53->s_axi_araddr.bind(*p_53_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_53_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_53->s_axi_arprot.bind(*p_53_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_53_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_arvalid.bind(*p_53_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_53_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_arready.bind(*p_53_s_axi_arready);
        p_53_s_axi_arready->set_sv_netview_offsetfromdp(8987544);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_53_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_53->s_axi_rdata.bind(*p_53_s_axi_rdata);
        p_53_s_axi_rdata->set_sv_netview_offsetfromdp(8987600);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->s_axi_rresp.bind(*p_53_s_axi_rresp);
        p_53_s_axi_rresp->set_sv_netview_offsetfromdp(8987656);
        xsim_sc_channel<0, bool > *p_53_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_rvalid.bind(*p_53_s_axi_rvalid);
        p_53_s_axi_rvalid->set_sv_netview_offsetfromdp(8987712);
        xsim_sc_channel<0, bool > *p_53_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_rready.bind(*p_53_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_rready);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_53_m_axi_awaddr = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_53->m_axi_awaddr.bind(*p_53_m_axi_awaddr);
        p_53_m_axi_awaddr->set_sv_netview_offsetfromdp(8987824);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_53_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_53->m_axi_awprot.bind(*p_53_m_axi_awprot);
        p_53_m_axi_awprot->set_sv_netview_offsetfromdp(8987880);
        xsim_sc_channel<0, bool > *p_53_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_awvalid.bind(*p_53_m_axi_awvalid);
        p_53_m_axi_awvalid->set_sv_netview_offsetfromdp(8987936);
        xsim_sc_channel<0, bool > *p_53_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_awready.bind(*p_53_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_53_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_53->m_axi_wdata.bind(*p_53_m_axi_wdata);
        p_53_m_axi_wdata->set_sv_netview_offsetfromdp(8988048);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->m_axi_wstrb.bind(*p_53_m_axi_wstrb);
        p_53_m_axi_wstrb->set_sv_netview_offsetfromdp(8988104);
        xsim_sc_channel<0, bool > *p_53_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_wvalid.bind(*p_53_m_axi_wvalid);
        p_53_m_axi_wvalid->set_sv_netview_offsetfromdp(8988160);
        xsim_sc_channel<0, bool > *p_53_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_wready.bind(*p_53_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->m_axi_bresp.bind(*p_53_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_53_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_bvalid.bind(*p_53_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_53_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_bready.bind(*p_53_m_axi_bready);
        p_53_m_axi_bready->set_sv_netview_offsetfromdp(8988384);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_53_m_axi_araddr = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_53->m_axi_araddr.bind(*p_53_m_axi_araddr);
        p_53_m_axi_araddr->set_sv_netview_offsetfromdp(8988440);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_53_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_53->m_axi_arprot.bind(*p_53_m_axi_arprot);
        p_53_m_axi_arprot->set_sv_netview_offsetfromdp(8988496);
        xsim_sc_channel<0, bool > *p_53_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_arvalid.bind(*p_53_m_axi_arvalid);
        p_53_m_axi_arvalid->set_sv_netview_offsetfromdp(8988552);
        xsim_sc_channel<0, bool > *p_53_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_arready.bind(*p_53_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_53_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_53->m_axi_rdata.bind(*p_53_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->m_axi_rresp.bind(*p_53_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_53_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_rvalid.bind(*p_53_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_53_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_rready.bind(*p_53_m_axi_rready);
        p_53_m_axi_rready->set_sv_netview_offsetfromdp(8988832);
        sc_inst_54 = new pfm_dynamic_xbar_3(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.xbar");
        sc_inst_54->xsim_set_dbg_index(1463);
        xsim_sc_channel<0, bool > *p_54_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_54->aclk.bind(*p_54_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_54_aclk);
        xsim_sc_channel<0, bool > *p_54_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_54->aresetn.bind(*p_54_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_54_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_54_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_54->s_axi_awaddr.bind(*p_54_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->s_axi_awprot.bind(*p_54_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_54_s_axi_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_54->s_axi_awvalid.bind(*p_54_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_54_s_axi_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_54->s_axi_awready.bind(*p_54_s_axi_awready);
        p_54_s_axi_awready->set_sv_netview_offsetfromdp(8999392);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_54_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_54->s_axi_wdata.bind(*p_54_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->s_axi_wstrb.bind(*p_54_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_54_s_axi_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_54->s_axi_wvalid.bind(*p_54_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_54_s_axi_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_54->s_axi_wready.bind(*p_54_s_axi_wready);
        p_54_s_axi_wready->set_sv_netview_offsetfromdp(8999616);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->s_axi_bresp.bind(*p_54_s_axi_bresp);
        p_54_s_axi_bresp->set_sv_netview_offsetfromdp(8999672);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_54_s_axi_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_54->s_axi_bvalid.bind(*p_54_s_axi_bvalid);
        p_54_s_axi_bvalid->set_sv_netview_offsetfromdp(8999728);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_54_s_axi_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_54->s_axi_bready.bind(*p_54_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_54_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_54->s_axi_araddr.bind(*p_54_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->s_axi_arprot.bind(*p_54_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_arprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_54_s_axi_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_54->s_axi_arvalid.bind(*p_54_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_54_s_axi_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_54->s_axi_arready.bind(*p_54_s_axi_arready);
        p_54_s_axi_arready->set_sv_netview_offsetfromdp(9000008);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_54_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_54->s_axi_rdata.bind(*p_54_s_axi_rdata);
        p_54_s_axi_rdata->set_sv_netview_offsetfromdp(9000064);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->s_axi_rresp.bind(*p_54_s_axi_rresp);
        p_54_s_axi_rresp->set_sv_netview_offsetfromdp(9000120);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_54_s_axi_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_54->s_axi_rvalid.bind(*p_54_s_axi_rvalid);
        p_54_s_axi_rvalid->set_sv_netview_offsetfromdp(9000176);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_54_s_axi_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_54->s_axi_rready.bind(*p_54_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_rready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_54_m_axi_awaddr = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_54->m_axi_awaddr.bind(*p_54_m_axi_awaddr);
        p_54_m_axi_awaddr->set_sv_netview_offsetfromdp(9000288);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_54_m_axi_awprot = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_54->m_axi_awprot.bind(*p_54_m_axi_awprot);
        p_54_m_axi_awprot->set_sv_netview_offsetfromdp(9000344);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_m_axi_awvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->m_axi_awvalid.bind(*p_54_m_axi_awvalid);
        p_54_m_axi_awvalid->set_sv_netview_offsetfromdp(9000400);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_m_axi_awready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->m_axi_awready.bind(*p_54_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_awready);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_54_m_axi_wdata = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_54->m_axi_wdata.bind(*p_54_m_axi_wdata);
        p_54_m_axi_wdata->set_sv_netview_offsetfromdp(9000512);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_54_m_axi_wstrb = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_54->m_axi_wstrb.bind(*p_54_m_axi_wstrb);
        p_54_m_axi_wstrb->set_sv_netview_offsetfromdp(9000568);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_m_axi_wvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->m_axi_wvalid.bind(*p_54_m_axi_wvalid);
        p_54_m_axi_wvalid->set_sv_netview_offsetfromdp(9000624);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_m_axi_wready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->m_axi_wready.bind(*p_54_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_wready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_54_m_axi_bresp = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_54->m_axi_bresp.bind(*p_54_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_bresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_m_axi_bvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->m_axi_bvalid.bind(*p_54_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_bvalid);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_m_axi_bready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->m_axi_bready.bind(*p_54_m_axi_bready);
        p_54_m_axi_bready->set_sv_netview_offsetfromdp(9000848);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_54_m_axi_araddr = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_54->m_axi_araddr.bind(*p_54_m_axi_araddr);
        p_54_m_axi_araddr->set_sv_netview_offsetfromdp(9000904);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_54_m_axi_arprot = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_54->m_axi_arprot.bind(*p_54_m_axi_arprot);
        p_54_m_axi_arprot->set_sv_netview_offsetfromdp(9000960);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_m_axi_arvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->m_axi_arvalid.bind(*p_54_m_axi_arvalid);
        p_54_m_axi_arvalid->set_sv_netview_offsetfromdp(9001016);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_m_axi_arready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->m_axi_arready.bind(*p_54_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_arready);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_54_m_axi_rdata = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_54->m_axi_rdata.bind(*p_54_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_rdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_54_m_axi_rresp = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_54->m_axi_rresp.bind(*p_54_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_rresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_m_axi_rvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->m_axi_rvalid.bind(*p_54_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_rvalid);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_m_axi_rready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->m_axi_rready.bind(*p_54_m_axi_rready);
        p_54_m_axi_rready->set_sv_netview_offsetfromdp(9001296);
        sc_inst_55 = new pfm_dynamic_smartconn_data_0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.smartconn_data_0");
        sc_inst_55->xsim_set_dbg_index(61);
        xsim_sc_channel<0, bool > *p_55_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_55->aclk.bind(*p_55_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_55_aclk);
        xsim_sc_channel<0, bool > *p_55_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_55->aresetn.bind(*p_55_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_55_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_55_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_55->S00_AXI_awid.bind(*p_55_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_55_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_55->S00_AXI_awaddr.bind(*p_55_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_55_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_55_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_55->S00_AXI_awlen.bind(*p_55_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_55_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->S00_AXI_awsize.bind(*p_55_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_55_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->S00_AXI_awburst.bind(*p_55_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_55_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_55_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_55->S00_AXI_awlock.bind(*p_55_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_55_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->S00_AXI_awcache.bind(*p_55_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_55_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->S00_AXI_awprot.bind(*p_55_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_55_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->S00_AXI_awqos.bind(*p_55_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_55_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_55_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->S00_AXI_awvalid.bind(*p_55_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_55_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_55->S00_AXI_awready.bind(*p_55_S00_AXI_awready);
        p_55_S00_AXI_awready->set_sv_netview_offsetfromdp(9830392);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_55_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_55->S00_AXI_wdata.bind(*p_55_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_55_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->S00_AXI_wstrb.bind(*p_55_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_55_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_55_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_55->S00_AXI_wlast.bind(*p_55_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_55_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_55_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->S00_AXI_wvalid.bind(*p_55_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_55_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_55->S00_AXI_wready.bind(*p_55_S00_AXI_wready);
        p_55_S00_AXI_wready->set_sv_netview_offsetfromdp(9830672);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_55_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_55->S00_AXI_bid.bind(*p_55_S00_AXI_bid);
        p_55_S00_AXI_bid->set_sv_netview_offsetfromdp(9830728);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->S00_AXI_bresp.bind(*p_55_S00_AXI_bresp);
        p_55_S00_AXI_bresp->set_sv_netview_offsetfromdp(9830784);
        xsim_sc_channel<0, bool > *p_55_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->S00_AXI_bvalid.bind(*p_55_S00_AXI_bvalid);
        p_55_S00_AXI_bvalid->set_sv_netview_offsetfromdp(9830840);
        xsim_sc_channel<0, bool > *p_55_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_55->S00_AXI_bready.bind(*p_55_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_55_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_55->S00_AXI_arid.bind(*p_55_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_55_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_55->S00_AXI_araddr.bind(*p_55_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_55_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_55_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_55->S00_AXI_arlen.bind(*p_55_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_55_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->S00_AXI_arsize.bind(*p_55_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_55_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->S00_AXI_arburst.bind(*p_55_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_55_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_55_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_55->S00_AXI_arlock.bind(*p_55_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_55_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->S00_AXI_arcache.bind(*p_55_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_55_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->S00_AXI_arprot.bind(*p_55_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_55_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->S00_AXI_arqos.bind(*p_55_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_55_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_55_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->S00_AXI_arvalid.bind(*p_55_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_55_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_55->S00_AXI_arready.bind(*p_55_S00_AXI_arready);
        p_55_S00_AXI_arready->set_sv_netview_offsetfromdp(9831512);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_55_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_55->S00_AXI_rid.bind(*p_55_S00_AXI_rid);
        p_55_S00_AXI_rid->set_sv_netview_offsetfromdp(9831568);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_55_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_55->S00_AXI_rdata.bind(*p_55_S00_AXI_rdata);
        p_55_S00_AXI_rdata->set_sv_netview_offsetfromdp(9831624);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->S00_AXI_rresp.bind(*p_55_S00_AXI_rresp);
        p_55_S00_AXI_rresp->set_sv_netview_offsetfromdp(9831680);
        xsim_sc_channel<0, bool > *p_55_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_55->S00_AXI_rlast.bind(*p_55_S00_AXI_rlast);
        p_55_S00_AXI_rlast->set_sv_netview_offsetfromdp(9831736);
        xsim_sc_channel<0, bool > *p_55_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->S00_AXI_rvalid.bind(*p_55_S00_AXI_rvalid);
        p_55_S00_AXI_rvalid->set_sv_netview_offsetfromdp(9831792);
        xsim_sc_channel<0, bool > *p_55_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_55->S00_AXI_rready.bind(*p_55_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_S00_AXI_rready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_55_M00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_55->M00_AXI_awaddr.bind(*p_55_M00_AXI_awaddr);
        p_55_M00_AXI_awaddr->set_sv_netview_offsetfromdp(9831904);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_55_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_55->M00_AXI_awlen.bind(*p_55_M00_AXI_awlen);
        p_55_M00_AXI_awlen->set_sv_netview_offsetfromdp(9831960);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->M00_AXI_awsize.bind(*p_55_M00_AXI_awsize);
        p_55_M00_AXI_awsize->set_sv_netview_offsetfromdp(9832016);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->M00_AXI_awburst.bind(*p_55_M00_AXI_awburst);
        p_55_M00_AXI_awburst->set_sv_netview_offsetfromdp(9832072);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_55_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_55->M00_AXI_awlock.bind(*p_55_M00_AXI_awlock);
        p_55_M00_AXI_awlock->set_sv_netview_offsetfromdp(9832128);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->M00_AXI_awcache.bind(*p_55_M00_AXI_awcache);
        p_55_M00_AXI_awcache->set_sv_netview_offsetfromdp(9832184);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->M00_AXI_awprot.bind(*p_55_M00_AXI_awprot);
        p_55_M00_AXI_awprot->set_sv_netview_offsetfromdp(9832240);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->M00_AXI_awqos.bind(*p_55_M00_AXI_awqos);
        p_55_M00_AXI_awqos->set_sv_netview_offsetfromdp(9832296);
        xsim_sc_channel<0, bool > *p_55_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->M00_AXI_awvalid.bind(*p_55_M00_AXI_awvalid);
        p_55_M00_AXI_awvalid->set_sv_netview_offsetfromdp(9832352);
        xsim_sc_channel<0, bool > *p_55_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_55->M00_AXI_awready.bind(*p_55_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M00_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_55_M00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_55->M00_AXI_wdata.bind(*p_55_M00_AXI_wdata);
        p_55_M00_AXI_wdata->set_sv_netview_offsetfromdp(9832464);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_M00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->M00_AXI_wstrb.bind(*p_55_M00_AXI_wstrb);
        p_55_M00_AXI_wstrb->set_sv_netview_offsetfromdp(9832520);
        xsim_sc_channel<0, bool > *p_55_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_55->M00_AXI_wlast.bind(*p_55_M00_AXI_wlast);
        p_55_M00_AXI_wlast->set_sv_netview_offsetfromdp(9832576);
        xsim_sc_channel<0, bool > *p_55_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->M00_AXI_wvalid.bind(*p_55_M00_AXI_wvalid);
        p_55_M00_AXI_wvalid->set_sv_netview_offsetfromdp(9832632);
        xsim_sc_channel<0, bool > *p_55_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_55->M00_AXI_wready.bind(*p_55_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->M00_AXI_bresp.bind(*p_55_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_55_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->M00_AXI_bvalid.bind(*p_55_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_55_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_55->M00_AXI_bready.bind(*p_55_M00_AXI_bready);
        p_55_M00_AXI_bready->set_sv_netview_offsetfromdp(9832856);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_55_M00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_55->M00_AXI_araddr.bind(*p_55_M00_AXI_araddr);
        p_55_M00_AXI_araddr->set_sv_netview_offsetfromdp(9832912);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_55_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_55->M00_AXI_arlen.bind(*p_55_M00_AXI_arlen);
        p_55_M00_AXI_arlen->set_sv_netview_offsetfromdp(9832968);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->M00_AXI_arsize.bind(*p_55_M00_AXI_arsize);
        p_55_M00_AXI_arsize->set_sv_netview_offsetfromdp(9833024);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->M00_AXI_arburst.bind(*p_55_M00_AXI_arburst);
        p_55_M00_AXI_arburst->set_sv_netview_offsetfromdp(9833080);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_55_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_55->M00_AXI_arlock.bind(*p_55_M00_AXI_arlock);
        p_55_M00_AXI_arlock->set_sv_netview_offsetfromdp(9833136);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->M00_AXI_arcache.bind(*p_55_M00_AXI_arcache);
        p_55_M00_AXI_arcache->set_sv_netview_offsetfromdp(9833192);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->M00_AXI_arprot.bind(*p_55_M00_AXI_arprot);
        p_55_M00_AXI_arprot->set_sv_netview_offsetfromdp(9833248);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->M00_AXI_arqos.bind(*p_55_M00_AXI_arqos);
        p_55_M00_AXI_arqos->set_sv_netview_offsetfromdp(9833304);
        xsim_sc_channel<0, bool > *p_55_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->M00_AXI_arvalid.bind(*p_55_M00_AXI_arvalid);
        p_55_M00_AXI_arvalid->set_sv_netview_offsetfromdp(9833360);
        xsim_sc_channel<0, bool > *p_55_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_55->M00_AXI_arready.bind(*p_55_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M00_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_55_M00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_55->M00_AXI_rdata.bind(*p_55_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->M00_AXI_rresp.bind(*p_55_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_55_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_55->M00_AXI_rlast.bind(*p_55_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_55_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->M00_AXI_rvalid.bind(*p_55_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_55_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_55->M00_AXI_rready.bind(*p_55_M00_AXI_rready);
        p_55_M00_AXI_rready->set_sv_netview_offsetfromdp(9833696);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_55_M01_AXI_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_55->M01_AXI_awaddr.bind(*p_55_M01_AXI_awaddr);
        p_55_M01_AXI_awaddr->set_sv_netview_offsetfromdp(9833752);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_55_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_55->M01_AXI_awlen.bind(*p_55_M01_AXI_awlen);
        p_55_M01_AXI_awlen->set_sv_netview_offsetfromdp(9833808);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->M01_AXI_awsize.bind(*p_55_M01_AXI_awsize);
        p_55_M01_AXI_awsize->set_sv_netview_offsetfromdp(9833864);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->M01_AXI_awburst.bind(*p_55_M01_AXI_awburst);
        p_55_M01_AXI_awburst->set_sv_netview_offsetfromdp(9833920);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_55_M01_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_55->M01_AXI_awlock.bind(*p_55_M01_AXI_awlock);
        p_55_M01_AXI_awlock->set_sv_netview_offsetfromdp(9833976);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_M01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->M01_AXI_awcache.bind(*p_55_M01_AXI_awcache);
        p_55_M01_AXI_awcache->set_sv_netview_offsetfromdp(9834032);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->M01_AXI_awprot.bind(*p_55_M01_AXI_awprot);
        p_55_M01_AXI_awprot->set_sv_netview_offsetfromdp(9834088);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_M01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->M01_AXI_awqos.bind(*p_55_M01_AXI_awqos);
        p_55_M01_AXI_awqos->set_sv_netview_offsetfromdp(9834144);
        xsim_sc_channel<0, bool > *p_55_M01_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->M01_AXI_awvalid.bind(*p_55_M01_AXI_awvalid);
        p_55_M01_AXI_awvalid->set_sv_netview_offsetfromdp(9834200);
        xsim_sc_channel<0, bool > *p_55_M01_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_55->M01_AXI_awready.bind(*p_55_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M01_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_55_M01_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_55->M01_AXI_wdata.bind(*p_55_M01_AXI_wdata);
        p_55_M01_AXI_wdata->set_sv_netview_offsetfromdp(9834312);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_55_M01_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_55->M01_AXI_wstrb.bind(*p_55_M01_AXI_wstrb);
        p_55_M01_AXI_wstrb->set_sv_netview_offsetfromdp(9834368);
        xsim_sc_channel<0, bool > *p_55_M01_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_55->M01_AXI_wlast.bind(*p_55_M01_AXI_wlast);
        p_55_M01_AXI_wlast->set_sv_netview_offsetfromdp(9834424);
        xsim_sc_channel<0, bool > *p_55_M01_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->M01_AXI_wvalid.bind(*p_55_M01_AXI_wvalid);
        p_55_M01_AXI_wvalid->set_sv_netview_offsetfromdp(9834480);
        xsim_sc_channel<0, bool > *p_55_M01_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_55->M01_AXI_wready.bind(*p_55_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M01_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->M01_AXI_bresp.bind(*p_55_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M01_AXI_bresp);
        xsim_sc_channel<0, bool > *p_55_M01_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->M01_AXI_bvalid.bind(*p_55_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M01_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_55_M01_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_55->M01_AXI_bready.bind(*p_55_M01_AXI_bready);
        p_55_M01_AXI_bready->set_sv_netview_offsetfromdp(9834704);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_55_M01_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_55->M01_AXI_araddr.bind(*p_55_M01_AXI_araddr);
        p_55_M01_AXI_araddr->set_sv_netview_offsetfromdp(9834760);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_55_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_55->M01_AXI_arlen.bind(*p_55_M01_AXI_arlen);
        p_55_M01_AXI_arlen->set_sv_netview_offsetfromdp(9834816);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->M01_AXI_arsize.bind(*p_55_M01_AXI_arsize);
        p_55_M01_AXI_arsize->set_sv_netview_offsetfromdp(9834872);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->M01_AXI_arburst.bind(*p_55_M01_AXI_arburst);
        p_55_M01_AXI_arburst->set_sv_netview_offsetfromdp(9834928);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_55_M01_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_55->M01_AXI_arlock.bind(*p_55_M01_AXI_arlock);
        p_55_M01_AXI_arlock->set_sv_netview_offsetfromdp(9834984);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_M01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->M01_AXI_arcache.bind(*p_55_M01_AXI_arcache);
        p_55_M01_AXI_arcache->set_sv_netview_offsetfromdp(9835040);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->M01_AXI_arprot.bind(*p_55_M01_AXI_arprot);
        p_55_M01_AXI_arprot->set_sv_netview_offsetfromdp(9835096);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_M01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->M01_AXI_arqos.bind(*p_55_M01_AXI_arqos);
        p_55_M01_AXI_arqos->set_sv_netview_offsetfromdp(9835152);
        xsim_sc_channel<0, bool > *p_55_M01_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->M01_AXI_arvalid.bind(*p_55_M01_AXI_arvalid);
        p_55_M01_AXI_arvalid->set_sv_netview_offsetfromdp(9835208);
        xsim_sc_channel<0, bool > *p_55_M01_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_55->M01_AXI_arready.bind(*p_55_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M01_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_55_M01_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_55->M01_AXI_rdata.bind(*p_55_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->M01_AXI_rresp.bind(*p_55_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M01_AXI_rresp);
        xsim_sc_channel<0, bool > *p_55_M01_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_55->M01_AXI_rlast.bind(*p_55_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M01_AXI_rlast);
        xsim_sc_channel<0, bool > *p_55_M01_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->M01_AXI_rvalid.bind(*p_55_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M01_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_55_M01_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_55->M01_AXI_rready.bind(*p_55_M01_AXI_rready);
        p_55_M01_AXI_rready->set_sv_netview_offsetfromdp(9835544);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_55_M02_AXI_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_55->M02_AXI_awaddr.bind(*p_55_M02_AXI_awaddr);
        p_55_M02_AXI_awaddr->set_sv_netview_offsetfromdp(9835600);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_55_M02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_55->M02_AXI_awlen.bind(*p_55_M02_AXI_awlen);
        p_55_M02_AXI_awlen->set_sv_netview_offsetfromdp(9835656);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_M02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->M02_AXI_awsize.bind(*p_55_M02_AXI_awsize);
        p_55_M02_AXI_awsize->set_sv_netview_offsetfromdp(9835712);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_M02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->M02_AXI_awburst.bind(*p_55_M02_AXI_awburst);
        p_55_M02_AXI_awburst->set_sv_netview_offsetfromdp(9835768);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_55_M02_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_55->M02_AXI_awlock.bind(*p_55_M02_AXI_awlock);
        p_55_M02_AXI_awlock->set_sv_netview_offsetfromdp(9835824);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_M02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->M02_AXI_awcache.bind(*p_55_M02_AXI_awcache);
        p_55_M02_AXI_awcache->set_sv_netview_offsetfromdp(9835880);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_M02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->M02_AXI_awprot.bind(*p_55_M02_AXI_awprot);
        p_55_M02_AXI_awprot->set_sv_netview_offsetfromdp(9835936);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_M02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->M02_AXI_awqos.bind(*p_55_M02_AXI_awqos);
        p_55_M02_AXI_awqos->set_sv_netview_offsetfromdp(9835992);
        xsim_sc_channel<0, bool > *p_55_M02_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->M02_AXI_awvalid.bind(*p_55_M02_AXI_awvalid);
        p_55_M02_AXI_awvalid->set_sv_netview_offsetfromdp(9836048);
        xsim_sc_channel<0, bool > *p_55_M02_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_55->M02_AXI_awready.bind(*p_55_M02_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M02_AXI_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_55_M02_AXI_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_55->M02_AXI_wdata.bind(*p_55_M02_AXI_wdata);
        p_55_M02_AXI_wdata->set_sv_netview_offsetfromdp(9836160);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_55_M02_AXI_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_55->M02_AXI_wstrb.bind(*p_55_M02_AXI_wstrb);
        p_55_M02_AXI_wstrb->set_sv_netview_offsetfromdp(9836216);
        xsim_sc_channel<0, bool > *p_55_M02_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_55->M02_AXI_wlast.bind(*p_55_M02_AXI_wlast);
        p_55_M02_AXI_wlast->set_sv_netview_offsetfromdp(9836272);
        xsim_sc_channel<0, bool > *p_55_M02_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->M02_AXI_wvalid.bind(*p_55_M02_AXI_wvalid);
        p_55_M02_AXI_wvalid->set_sv_netview_offsetfromdp(9836328);
        xsim_sc_channel<0, bool > *p_55_M02_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_55->M02_AXI_wready.bind(*p_55_M02_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M02_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_M02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->M02_AXI_bresp.bind(*p_55_M02_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M02_AXI_bresp);
        xsim_sc_channel<0, bool > *p_55_M02_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->M02_AXI_bvalid.bind(*p_55_M02_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M02_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_55_M02_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_55->M02_AXI_bready.bind(*p_55_M02_AXI_bready);
        p_55_M02_AXI_bready->set_sv_netview_offsetfromdp(9836552);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_55_M02_AXI_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_55->M02_AXI_araddr.bind(*p_55_M02_AXI_araddr);
        p_55_M02_AXI_araddr->set_sv_netview_offsetfromdp(9836608);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_55_M02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_55->M02_AXI_arlen.bind(*p_55_M02_AXI_arlen);
        p_55_M02_AXI_arlen->set_sv_netview_offsetfromdp(9836664);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_M02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->M02_AXI_arsize.bind(*p_55_M02_AXI_arsize);
        p_55_M02_AXI_arsize->set_sv_netview_offsetfromdp(9836720);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_M02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->M02_AXI_arburst.bind(*p_55_M02_AXI_arburst);
        p_55_M02_AXI_arburst->set_sv_netview_offsetfromdp(9836776);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_55_M02_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_55->M02_AXI_arlock.bind(*p_55_M02_AXI_arlock);
        p_55_M02_AXI_arlock->set_sv_netview_offsetfromdp(9836832);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_M02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->M02_AXI_arcache.bind(*p_55_M02_AXI_arcache);
        p_55_M02_AXI_arcache->set_sv_netview_offsetfromdp(9836888);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_M02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->M02_AXI_arprot.bind(*p_55_M02_AXI_arprot);
        p_55_M02_AXI_arprot->set_sv_netview_offsetfromdp(9836944);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_M02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->M02_AXI_arqos.bind(*p_55_M02_AXI_arqos);
        p_55_M02_AXI_arqos->set_sv_netview_offsetfromdp(9837000);
        xsim_sc_channel<0, bool > *p_55_M02_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->M02_AXI_arvalid.bind(*p_55_M02_AXI_arvalid);
        p_55_M02_AXI_arvalid->set_sv_netview_offsetfromdp(9837056);
        xsim_sc_channel<0, bool > *p_55_M02_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_55->M02_AXI_arready.bind(*p_55_M02_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M02_AXI_arready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_55_M02_AXI_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_55->M02_AXI_rdata.bind(*p_55_M02_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M02_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_M02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->M02_AXI_rresp.bind(*p_55_M02_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M02_AXI_rresp);
        xsim_sc_channel<0, bool > *p_55_M02_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_55->M02_AXI_rlast.bind(*p_55_M02_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M02_AXI_rlast);
        xsim_sc_channel<0, bool > *p_55_M02_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->M02_AXI_rvalid.bind(*p_55_M02_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M02_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_55_M02_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_55->M02_AXI_rready.bind(*p_55_M02_AXI_rready);
        p_55_M02_AXI_rready->set_sv_netview_offsetfromdp(9837392);
        sc_inst_56 = new pfm_top_sci(".pfm_top_wrapper.pfm_top_i.pfm_top_sci_inst");
        sc_inst_56->xsim_set_dbg_index(37);
        sc_inst_57 = new pfm_top_axi_vip_0_0(".pfm_top_wrapper.pfm_top_i.static_region.axi_vip_0");
        sc_inst_57->xsim_set_dbg_index(189);
        xsim_sc_channel<0, bool > *p_57_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_57->aclk.bind(*p_57_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_57_aclk);
        xsim_sc_channel<0, bool > *p_57_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_57->aresetn.bind(*p_57_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_57_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_57_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_57->s_axi_awaddr.bind(*p_57_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_57_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_57->s_axi_awlen.bind(*p_57_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->s_axi_awburst.bind(*p_57_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->s_axi_awlock.bind(*p_57_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->s_axi_awcache.bind(*p_57_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->s_axi_awprot.bind(*p_57_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->s_axi_awqos.bind(*p_57_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_57_s_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_57->s_axi_awuser.bind(*p_57_s_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awuser);
        xsim_sc_channel<0, bool > *p_57_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_awvalid.bind(*p_57_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_57_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_awready.bind(*p_57_s_axi_awready);
        p_57_s_axi_awready->set_sv_netview_offsetfromdp(10012336);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_57_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_57->s_axi_wdata.bind(*p_57_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->s_axi_wstrb.bind(*p_57_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_57_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_wlast.bind(*p_57_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_57_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_wvalid.bind(*p_57_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_57_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_wready.bind(*p_57_s_axi_wready);
        p_57_s_axi_wready->set_sv_netview_offsetfromdp(10012616);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->s_axi_bresp.bind(*p_57_s_axi_bresp);
        p_57_s_axi_bresp->set_sv_netview_offsetfromdp(10012672);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_s_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->s_axi_buser.bind(*p_57_s_axi_buser);
        p_57_s_axi_buser->set_sv_netview_offsetfromdp(10012728);
        xsim_sc_channel<0, bool > *p_57_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_bvalid.bind(*p_57_s_axi_bvalid);
        p_57_s_axi_bvalid->set_sv_netview_offsetfromdp(10012784);
        xsim_sc_channel<0, bool > *p_57_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_bready.bind(*p_57_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_57_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_57->s_axi_araddr.bind(*p_57_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_57_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_57->s_axi_arlen.bind(*p_57_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->s_axi_arburst.bind(*p_57_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->s_axi_arlock.bind(*p_57_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->s_axi_arcache.bind(*p_57_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->s_axi_arprot.bind(*p_57_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->s_axi_arqos.bind(*p_57_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_57_s_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_57->s_axi_aruser.bind(*p_57_s_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_aruser);
        xsim_sc_channel<0, bool > *p_57_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_arvalid.bind(*p_57_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_57_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_arready.bind(*p_57_s_axi_arready);
        p_57_s_axi_arready->set_sv_netview_offsetfromdp(10013400);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_57_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_57->s_axi_rdata.bind(*p_57_s_axi_rdata);
        p_57_s_axi_rdata->set_sv_netview_offsetfromdp(10013456);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->s_axi_rresp.bind(*p_57_s_axi_rresp);
        p_57_s_axi_rresp->set_sv_netview_offsetfromdp(10013512);
        xsim_sc_channel<0, bool > *p_57_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_rlast.bind(*p_57_s_axi_rlast);
        p_57_s_axi_rlast->set_sv_netview_offsetfromdp(10013568);
        xsim_sc_channel<0, bool > *p_57_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_rvalid.bind(*p_57_s_axi_rvalid);
        p_57_s_axi_rvalid->set_sv_netview_offsetfromdp(10013624);
        xsim_sc_channel<0, bool > *p_57_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_rready.bind(*p_57_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_57_m_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_57->m_axi_awaddr.bind(*p_57_m_axi_awaddr);
        p_57_m_axi_awaddr->set_sv_netview_offsetfromdp(10013736);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_57_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_57->m_axi_awlen.bind(*p_57_m_axi_awlen);
        p_57_m_axi_awlen->set_sv_netview_offsetfromdp(10013792);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->m_axi_awburst.bind(*p_57_m_axi_awburst);
        p_57_m_axi_awburst->set_sv_netview_offsetfromdp(10013848);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->m_axi_awlock.bind(*p_57_m_axi_awlock);
        p_57_m_axi_awlock->set_sv_netview_offsetfromdp(10013904);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->m_axi_awcache.bind(*p_57_m_axi_awcache);
        p_57_m_axi_awcache->set_sv_netview_offsetfromdp(10013960);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->m_axi_awprot.bind(*p_57_m_axi_awprot);
        p_57_m_axi_awprot->set_sv_netview_offsetfromdp(10014016);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->m_axi_awqos.bind(*p_57_m_axi_awqos);
        p_57_m_axi_awqos->set_sv_netview_offsetfromdp(10014072);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_57_m_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_57->m_axi_awuser.bind(*p_57_m_axi_awuser);
        p_57_m_axi_awuser->set_sv_netview_offsetfromdp(10014128);
        xsim_sc_channel<0, bool > *p_57_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_axi_awvalid.bind(*p_57_m_axi_awvalid);
        p_57_m_axi_awvalid->set_sv_netview_offsetfromdp(10014184);
        xsim_sc_channel<0, bool > *p_57_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_axi_awready.bind(*p_57_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_57_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_57->m_axi_wdata.bind(*p_57_m_axi_wdata);
        p_57_m_axi_wdata->set_sv_netview_offsetfromdp(10014296);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->m_axi_wstrb.bind(*p_57_m_axi_wstrb);
        p_57_m_axi_wstrb->set_sv_netview_offsetfromdp(10014352);
        xsim_sc_channel<0, bool > *p_57_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_axi_wlast.bind(*p_57_m_axi_wlast);
        p_57_m_axi_wlast->set_sv_netview_offsetfromdp(10014408);
        xsim_sc_channel<0, bool > *p_57_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_axi_wvalid.bind(*p_57_m_axi_wvalid);
        p_57_m_axi_wvalid->set_sv_netview_offsetfromdp(10014464);
        xsim_sc_channel<0, bool > *p_57_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_axi_wready.bind(*p_57_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->m_axi_bresp.bind(*p_57_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_m_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->m_axi_buser.bind(*p_57_m_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axi_buser);
        xsim_sc_channel<0, bool > *p_57_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_axi_bvalid.bind(*p_57_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_57_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_axi_bready.bind(*p_57_m_axi_bready);
        p_57_m_axi_bready->set_sv_netview_offsetfromdp(10014744);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_57_m_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_57->m_axi_araddr.bind(*p_57_m_axi_araddr);
        p_57_m_axi_araddr->set_sv_netview_offsetfromdp(10014800);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_57_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_57->m_axi_arlen.bind(*p_57_m_axi_arlen);
        p_57_m_axi_arlen->set_sv_netview_offsetfromdp(10014856);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->m_axi_arburst.bind(*p_57_m_axi_arburst);
        p_57_m_axi_arburst->set_sv_netview_offsetfromdp(10014912);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->m_axi_arlock.bind(*p_57_m_axi_arlock);
        p_57_m_axi_arlock->set_sv_netview_offsetfromdp(10014968);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->m_axi_arcache.bind(*p_57_m_axi_arcache);
        p_57_m_axi_arcache->set_sv_netview_offsetfromdp(10015024);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->m_axi_arprot.bind(*p_57_m_axi_arprot);
        p_57_m_axi_arprot->set_sv_netview_offsetfromdp(10015080);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->m_axi_arqos.bind(*p_57_m_axi_arqos);
        p_57_m_axi_arqos->set_sv_netview_offsetfromdp(10015136);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_57_m_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_57->m_axi_aruser.bind(*p_57_m_axi_aruser);
        p_57_m_axi_aruser->set_sv_netview_offsetfromdp(10015192);
        xsim_sc_channel<0, bool > *p_57_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_axi_arvalid.bind(*p_57_m_axi_arvalid);
        p_57_m_axi_arvalid->set_sv_netview_offsetfromdp(10015248);
        xsim_sc_channel<0, bool > *p_57_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_axi_arready.bind(*p_57_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_57_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_57->m_axi_rdata.bind(*p_57_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->m_axi_rresp.bind(*p_57_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_57_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_axi_rlast.bind(*p_57_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_57_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_axi_rvalid.bind(*p_57_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_57_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_axi_rready.bind(*p_57_m_axi_rready);
        p_57_m_axi_rready->set_sv_netview_offsetfromdp(10015584);
        sc_inst_58 = new pfm_top_xbar_0(".pfm_top_wrapper.pfm_top_i.static_region.connect_to_es_cu.xbar");
        sc_inst_58->xsim_set_dbg_index(600);
        xsim_sc_channel<0, bool > *p_58_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_58->aclk.bind(*p_58_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_58_aclk);
        xsim_sc_channel<0, bool > *p_58_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_58->aresetn.bind(*p_58_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_58_aresetn);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_58_s_axi_awaddr = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_58->s_axi_awaddr.bind(*p_58_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_58_s_axi_awaddr);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_58_s_axi_awprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_58->s_axi_awprot.bind(*p_58_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_58_s_axi_awprot);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_s_axi_awvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->s_axi_awvalid.bind(*p_58_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_s_axi_awvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_s_axi_awready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->s_axi_awready.bind(*p_58_s_axi_awready);
        p_58_s_axi_awready->set_sv_netview_offsetfromdp(10115560);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_58_s_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_58->s_axi_wdata.bind(*p_58_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_58_s_axi_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_58_s_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_58->s_axi_wstrb.bind(*p_58_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_58_s_axi_wstrb);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_s_axi_wvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->s_axi_wvalid.bind(*p_58_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_s_axi_wvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_s_axi_wready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->s_axi_wready.bind(*p_58_s_axi_wready);
        p_58_s_axi_wready->set_sv_netview_offsetfromdp(10115784);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_s_axi_bresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->s_axi_bresp.bind(*p_58_s_axi_bresp);
        p_58_s_axi_bresp->set_sv_netview_offsetfromdp(10115840);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_s_axi_bvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->s_axi_bvalid.bind(*p_58_s_axi_bvalid);
        p_58_s_axi_bvalid->set_sv_netview_offsetfromdp(10115896);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_s_axi_bready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->s_axi_bready.bind(*p_58_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_s_axi_bready);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_58_s_axi_araddr = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_58->s_axi_araddr.bind(*p_58_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_58_s_axi_araddr);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_58_s_axi_arprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_58->s_axi_arprot.bind(*p_58_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_58_s_axi_arprot);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_s_axi_arvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->s_axi_arvalid.bind(*p_58_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_s_axi_arvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_s_axi_arready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->s_axi_arready.bind(*p_58_s_axi_arready);
        p_58_s_axi_arready->set_sv_netview_offsetfromdp(10116176);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_58_s_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_58->s_axi_rdata.bind(*p_58_s_axi_rdata);
        p_58_s_axi_rdata->set_sv_netview_offsetfromdp(10116232);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_s_axi_rresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->s_axi_rresp.bind(*p_58_s_axi_rresp);
        p_58_s_axi_rresp->set_sv_netview_offsetfromdp(10116288);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_s_axi_rvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->s_axi_rvalid.bind(*p_58_s_axi_rvalid);
        p_58_s_axi_rvalid->set_sv_netview_offsetfromdp(10116344);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_s_axi_rready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->s_axi_rready.bind(*p_58_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_s_axi_rready);
        xsim_sc_channel<192, sc_dt::sc_bv<192> > *p_58_m_axi_awaddr = new xsim_sc_channel<192, sc_dt::sc_bv<192> >();
        sc_inst_58->m_axi_awaddr.bind(*p_58_m_axi_awaddr);
        p_58_m_axi_awaddr->set_sv_netview_offsetfromdp(10116456);
        xsim_sc_channel<9, sc_dt::sc_bv<9> > *p_58_m_axi_awprot = new xsim_sc_channel<9, sc_dt::sc_bv<9> >();
        sc_inst_58->m_axi_awprot.bind(*p_58_m_axi_awprot);
        p_58_m_axi_awprot->set_sv_netview_offsetfromdp(10116512);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_m_axi_awvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->m_axi_awvalid.bind(*p_58_m_axi_awvalid);
        p_58_m_axi_awvalid->set_sv_netview_offsetfromdp(10116568);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_m_axi_awready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->m_axi_awready.bind(*p_58_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_m_axi_awready);
        xsim_sc_channel<96, sc_dt::sc_bv<96> > *p_58_m_axi_wdata = new xsim_sc_channel<96, sc_dt::sc_bv<96> >();
        sc_inst_58->m_axi_wdata.bind(*p_58_m_axi_wdata);
        p_58_m_axi_wdata->set_sv_netview_offsetfromdp(10116680);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_58_m_axi_wstrb = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_58->m_axi_wstrb.bind(*p_58_m_axi_wstrb);
        p_58_m_axi_wstrb->set_sv_netview_offsetfromdp(10116736);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_m_axi_wvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->m_axi_wvalid.bind(*p_58_m_axi_wvalid);
        p_58_m_axi_wvalid->set_sv_netview_offsetfromdp(10116792);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_m_axi_wready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->m_axi_wready.bind(*p_58_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_m_axi_wready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_58_m_axi_bresp = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_58->m_axi_bresp.bind(*p_58_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_58_m_axi_bresp);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_m_axi_bvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->m_axi_bvalid.bind(*p_58_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_m_axi_bvalid);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_m_axi_bready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->m_axi_bready.bind(*p_58_m_axi_bready);
        p_58_m_axi_bready->set_sv_netview_offsetfromdp(10117016);
        xsim_sc_channel<192, sc_dt::sc_bv<192> > *p_58_m_axi_araddr = new xsim_sc_channel<192, sc_dt::sc_bv<192> >();
        sc_inst_58->m_axi_araddr.bind(*p_58_m_axi_araddr);
        p_58_m_axi_araddr->set_sv_netview_offsetfromdp(10117072);
        xsim_sc_channel<9, sc_dt::sc_bv<9> > *p_58_m_axi_arprot = new xsim_sc_channel<9, sc_dt::sc_bv<9> >();
        sc_inst_58->m_axi_arprot.bind(*p_58_m_axi_arprot);
        p_58_m_axi_arprot->set_sv_netview_offsetfromdp(10117128);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_m_axi_arvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->m_axi_arvalid.bind(*p_58_m_axi_arvalid);
        p_58_m_axi_arvalid->set_sv_netview_offsetfromdp(10117184);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_m_axi_arready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->m_axi_arready.bind(*p_58_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_m_axi_arready);
        xsim_sc_channel<96, sc_dt::sc_bv<96> > *p_58_m_axi_rdata = new xsim_sc_channel<96, sc_dt::sc_bv<96> >();
        sc_inst_58->m_axi_rdata.bind(*p_58_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_58_m_axi_rdata);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_58_m_axi_rresp = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_58->m_axi_rresp.bind(*p_58_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_58_m_axi_rresp);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_m_axi_rvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->m_axi_rvalid.bind(*p_58_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_m_axi_rvalid);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_m_axi_rready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->m_axi_rready.bind(*p_58_m_axi_rready);
        p_58_m_axi_rready->set_sv_netview_offsetfromdp(10117464);
        sc_inst_59 = new pfm_top_embedded_schedular_0(".pfm_top_wrapper.pfm_top_i.static_region.embedded_schedular");
        sc_inst_59->xsim_set_dbg_index(193);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_59_interrupt_cu = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_59->interrupt_cu.bind(*p_59_interrupt_cu);
        (*_glb_hdl_sc_channel_map).push_back(p_59_interrupt_cu);
        xsim_sc_channel<0, bool > *p_59_interrupt_m2m = new xsim_sc_channel<0, bool >();
        sc_inst_59->interrupt_m2m.bind(*p_59_interrupt_m2m);
        p_59_interrupt_m2m->set_sv_netview_offsetfromdp(10119352);
        xsim_sc_channel<0, bool > *p_59_s_axi_ctrl_user_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_ctrl_user_aresetn.bind(*p_59_s_axi_ctrl_user_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_ctrl_user_aresetn);
        xsim_sc_channel<0, bool > *p_59_s_axi_data_p2p_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_data_p2p_aresetn.bind(*p_59_s_axi_data_p2p_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_aresetn);
        xsim_sc_channel<0, bool > *p_59_maxi_lite_mb_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_59->maxi_lite_mb_aresetn.bind(*p_59_maxi_lite_mb_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_59_maxi_lite_mb_aresetn);
        xsim_sc_channel<0, bool > *p_59_m_axi_data_m2m_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_59->m_axi_data_m2m_aresetn.bind(*p_59_m_axi_data_m2m_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_59_m_axi_data_m2m_aresetn);
        xsim_sc_channel<0, bool > *p_59_s_axi_ctrl_user_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_ctrl_user_aclk.bind(*p_59_s_axi_ctrl_user_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_ctrl_user_aclk);
        xsim_sc_channel<0, bool > *p_59_s_axi_data_p2p_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_data_p2p_aclk.bind(*p_59_s_axi_data_p2p_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_aclk);
        xsim_sc_channel<0, bool > *p_59_maxi_lite_mb_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_59->maxi_lite_mb_aclk.bind(*p_59_maxi_lite_mb_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_59_maxi_lite_mb_aclk);
        xsim_sc_channel<0, bool > *p_59_m_axi_data_m2m_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_59->m_axi_data_m2m_aclk.bind(*p_59_m_axi_data_m2m_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_59_m_axi_data_m2m_aclk);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_59_s_axi_data_p2p_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_59->s_axi_data_p2p_awaddr.bind(*p_59_s_axi_data_p2p_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_59_s_axi_data_p2p_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_59->s_axi_data_p2p_awlen.bind(*p_59_s_axi_data_p2p_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_59_s_axi_data_p2p_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_59->s_axi_data_p2p_awsize.bind(*p_59_s_axi_data_p2p_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_59_s_axi_data_p2p_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_59->s_axi_data_p2p_awburst.bind(*p_59_s_axi_data_p2p_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_awburst);
        xsim_sc_channel<0, bool > *p_59_s_axi_data_p2p_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_data_p2p_awlock.bind(*p_59_s_axi_data_p2p_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_s_axi_data_p2p_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->s_axi_data_p2p_awcache.bind(*p_59_s_axi_data_p2p_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_59_s_axi_data_p2p_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_59->s_axi_data_p2p_awprot.bind(*p_59_s_axi_data_p2p_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_s_axi_data_p2p_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->s_axi_data_p2p_awregion.bind(*p_59_s_axi_data_p2p_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_s_axi_data_p2p_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->s_axi_data_p2p_awqos.bind(*p_59_s_axi_data_p2p_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_59_s_axi_data_p2p_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_59->s_axi_data_p2p_awuser.bind(*p_59_s_axi_data_p2p_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_awuser);
        xsim_sc_channel<0, bool > *p_59_s_axi_data_p2p_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_data_p2p_awvalid.bind(*p_59_s_axi_data_p2p_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_awvalid);
        xsim_sc_channel<0, bool > *p_59_s_axi_data_p2p_awready = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_data_p2p_awready.bind(*p_59_s_axi_data_p2p_awready);
        p_59_s_axi_data_p2p_awready->set_sv_netview_offsetfromdp(10120472);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_59_s_axi_data_p2p_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_59->s_axi_data_p2p_wdata.bind(*p_59_s_axi_data_p2p_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_s_axi_data_p2p_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->s_axi_data_p2p_wstrb.bind(*p_59_s_axi_data_p2p_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_wstrb);
        xsim_sc_channel<0, bool > *p_59_s_axi_data_p2p_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_data_p2p_wlast.bind(*p_59_s_axi_data_p2p_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_wlast);
        xsim_sc_channel<0, bool > *p_59_s_axi_data_p2p_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_data_p2p_wvalid.bind(*p_59_s_axi_data_p2p_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_wvalid);
        xsim_sc_channel<0, bool > *p_59_s_axi_data_p2p_wready = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_data_p2p_wready.bind(*p_59_s_axi_data_p2p_wready);
        p_59_s_axi_data_p2p_wready->set_sv_netview_offsetfromdp(10120752);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_59_s_axi_data_p2p_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_59->s_axi_data_p2p_bresp.bind(*p_59_s_axi_data_p2p_bresp);
        p_59_s_axi_data_p2p_bresp->set_sv_netview_offsetfromdp(10120808);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_59_s_axi_data_p2p_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_59->s_axi_data_p2p_buser.bind(*p_59_s_axi_data_p2p_buser);
        p_59_s_axi_data_p2p_buser->set_sv_netview_offsetfromdp(10120864);
        xsim_sc_channel<0, bool > *p_59_s_axi_data_p2p_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_data_p2p_bvalid.bind(*p_59_s_axi_data_p2p_bvalid);
        p_59_s_axi_data_p2p_bvalid->set_sv_netview_offsetfromdp(10120920);
        xsim_sc_channel<0, bool > *p_59_s_axi_data_p2p_bready = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_data_p2p_bready.bind(*p_59_s_axi_data_p2p_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_59_s_axi_data_p2p_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_59->s_axi_data_p2p_araddr.bind(*p_59_s_axi_data_p2p_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_59_s_axi_data_p2p_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_59->s_axi_data_p2p_arlen.bind(*p_59_s_axi_data_p2p_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_59_s_axi_data_p2p_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_59->s_axi_data_p2p_arsize.bind(*p_59_s_axi_data_p2p_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_59_s_axi_data_p2p_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_59->s_axi_data_p2p_arburst.bind(*p_59_s_axi_data_p2p_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_arburst);
        xsim_sc_channel<0, bool > *p_59_s_axi_data_p2p_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_data_p2p_arlock.bind(*p_59_s_axi_data_p2p_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_s_axi_data_p2p_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->s_axi_data_p2p_arcache.bind(*p_59_s_axi_data_p2p_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_59_s_axi_data_p2p_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_59->s_axi_data_p2p_arprot.bind(*p_59_s_axi_data_p2p_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_s_axi_data_p2p_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->s_axi_data_p2p_arregion.bind(*p_59_s_axi_data_p2p_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_s_axi_data_p2p_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->s_axi_data_p2p_arqos.bind(*p_59_s_axi_data_p2p_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_59_s_axi_data_p2p_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_59->s_axi_data_p2p_aruser.bind(*p_59_s_axi_data_p2p_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_aruser);
        xsim_sc_channel<0, bool > *p_59_s_axi_data_p2p_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_data_p2p_arvalid.bind(*p_59_s_axi_data_p2p_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_arvalid);
        xsim_sc_channel<0, bool > *p_59_s_axi_data_p2p_arready = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_data_p2p_arready.bind(*p_59_s_axi_data_p2p_arready);
        p_59_s_axi_data_p2p_arready->set_sv_netview_offsetfromdp(10121648);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_59_s_axi_data_p2p_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_59->s_axi_data_p2p_rdata.bind(*p_59_s_axi_data_p2p_rdata);
        p_59_s_axi_data_p2p_rdata->set_sv_netview_offsetfromdp(10121704);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_59_s_axi_data_p2p_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_59->s_axi_data_p2p_rresp.bind(*p_59_s_axi_data_p2p_rresp);
        p_59_s_axi_data_p2p_rresp->set_sv_netview_offsetfromdp(10121760);
        xsim_sc_channel<0, bool > *p_59_s_axi_data_p2p_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_data_p2p_rlast.bind(*p_59_s_axi_data_p2p_rlast);
        p_59_s_axi_data_p2p_rlast->set_sv_netview_offsetfromdp(10121816);
        xsim_sc_channel<0, bool > *p_59_s_axi_data_p2p_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_data_p2p_rvalid.bind(*p_59_s_axi_data_p2p_rvalid);
        p_59_s_axi_data_p2p_rvalid->set_sv_netview_offsetfromdp(10121872);
        xsim_sc_channel<0, bool > *p_59_s_axi_data_p2p_rready = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_data_p2p_rready.bind(*p_59_s_axi_data_p2p_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_59_maxi_lite_mb_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_59->maxi_lite_mb_awaddr.bind(*p_59_maxi_lite_mb_awaddr);
        p_59_maxi_lite_mb_awaddr->set_sv_netview_offsetfromdp(10121984);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_59_maxi_lite_mb_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_59->maxi_lite_mb_awprot.bind(*p_59_maxi_lite_mb_awprot);
        p_59_maxi_lite_mb_awprot->set_sv_netview_offsetfromdp(10122040);
        xsim_sc_channel<0, bool > *p_59_maxi_lite_mb_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->maxi_lite_mb_awvalid.bind(*p_59_maxi_lite_mb_awvalid);
        p_59_maxi_lite_mb_awvalid->set_sv_netview_offsetfromdp(10122096);
        xsim_sc_channel<0, bool > *p_59_maxi_lite_mb_awready = new xsim_sc_channel<0, bool >();
        sc_inst_59->maxi_lite_mb_awready.bind(*p_59_maxi_lite_mb_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_59_maxi_lite_mb_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_59_maxi_lite_mb_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_59->maxi_lite_mb_wdata.bind(*p_59_maxi_lite_mb_wdata);
        p_59_maxi_lite_mb_wdata->set_sv_netview_offsetfromdp(10122208);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_maxi_lite_mb_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->maxi_lite_mb_wstrb.bind(*p_59_maxi_lite_mb_wstrb);
        p_59_maxi_lite_mb_wstrb->set_sv_netview_offsetfromdp(10122264);
        xsim_sc_channel<0, bool > *p_59_maxi_lite_mb_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->maxi_lite_mb_wvalid.bind(*p_59_maxi_lite_mb_wvalid);
        p_59_maxi_lite_mb_wvalid->set_sv_netview_offsetfromdp(10122320);
        xsim_sc_channel<0, bool > *p_59_maxi_lite_mb_wready = new xsim_sc_channel<0, bool >();
        sc_inst_59->maxi_lite_mb_wready.bind(*p_59_maxi_lite_mb_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_59_maxi_lite_mb_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_59_maxi_lite_mb_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_59->maxi_lite_mb_bresp.bind(*p_59_maxi_lite_mb_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_59_maxi_lite_mb_bresp);
        xsim_sc_channel<0, bool > *p_59_maxi_lite_mb_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->maxi_lite_mb_bvalid.bind(*p_59_maxi_lite_mb_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_59_maxi_lite_mb_bvalid);
        xsim_sc_channel<0, bool > *p_59_maxi_lite_mb_bready = new xsim_sc_channel<0, bool >();
        sc_inst_59->maxi_lite_mb_bready.bind(*p_59_maxi_lite_mb_bready);
        p_59_maxi_lite_mb_bready->set_sv_netview_offsetfromdp(10122544);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_59_maxi_lite_mb_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_59->maxi_lite_mb_araddr.bind(*p_59_maxi_lite_mb_araddr);
        p_59_maxi_lite_mb_araddr->set_sv_netview_offsetfromdp(10122600);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_59_maxi_lite_mb_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_59->maxi_lite_mb_arprot.bind(*p_59_maxi_lite_mb_arprot);
        p_59_maxi_lite_mb_arprot->set_sv_netview_offsetfromdp(10122656);
        xsim_sc_channel<0, bool > *p_59_maxi_lite_mb_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->maxi_lite_mb_arvalid.bind(*p_59_maxi_lite_mb_arvalid);
        p_59_maxi_lite_mb_arvalid->set_sv_netview_offsetfromdp(10122712);
        xsim_sc_channel<0, bool > *p_59_maxi_lite_mb_arready = new xsim_sc_channel<0, bool >();
        sc_inst_59->maxi_lite_mb_arready.bind(*p_59_maxi_lite_mb_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_59_maxi_lite_mb_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_59_maxi_lite_mb_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_59->maxi_lite_mb_rdata.bind(*p_59_maxi_lite_mb_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_59_maxi_lite_mb_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_59_maxi_lite_mb_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_59->maxi_lite_mb_rresp.bind(*p_59_maxi_lite_mb_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_59_maxi_lite_mb_rresp);
        xsim_sc_channel<0, bool > *p_59_maxi_lite_mb_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->maxi_lite_mb_rvalid.bind(*p_59_maxi_lite_mb_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_59_maxi_lite_mb_rvalid);
        xsim_sc_channel<0, bool > *p_59_maxi_lite_mb_rready = new xsim_sc_channel<0, bool >();
        sc_inst_59->maxi_lite_mb_rready.bind(*p_59_maxi_lite_mb_rready);
        p_59_maxi_lite_mb_rready->set_sv_netview_offsetfromdp(10122992);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_59_s_axi_ctrl_user_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_59->s_axi_ctrl_user_awaddr.bind(*p_59_s_axi_ctrl_user_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_ctrl_user_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_59_s_axi_ctrl_user_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_59->s_axi_ctrl_user_awprot.bind(*p_59_s_axi_ctrl_user_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_ctrl_user_awprot);
        xsim_sc_channel<0, bool > *p_59_s_axi_ctrl_user_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_ctrl_user_awvalid.bind(*p_59_s_axi_ctrl_user_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_ctrl_user_awvalid);
        xsim_sc_channel<0, bool > *p_59_s_axi_ctrl_user_awready = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_ctrl_user_awready.bind(*p_59_s_axi_ctrl_user_awready);
        p_59_s_axi_ctrl_user_awready->set_sv_netview_offsetfromdp(10123216);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_59_s_axi_ctrl_user_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_59->s_axi_ctrl_user_wdata.bind(*p_59_s_axi_ctrl_user_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_ctrl_user_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_s_axi_ctrl_user_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->s_axi_ctrl_user_wstrb.bind(*p_59_s_axi_ctrl_user_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_ctrl_user_wstrb);
        xsim_sc_channel<0, bool > *p_59_s_axi_ctrl_user_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_ctrl_user_wvalid.bind(*p_59_s_axi_ctrl_user_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_ctrl_user_wvalid);
        xsim_sc_channel<0, bool > *p_59_s_axi_ctrl_user_wready = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_ctrl_user_wready.bind(*p_59_s_axi_ctrl_user_wready);
        p_59_s_axi_ctrl_user_wready->set_sv_netview_offsetfromdp(10123440);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_59_s_axi_ctrl_user_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_59->s_axi_ctrl_user_bresp.bind(*p_59_s_axi_ctrl_user_bresp);
        p_59_s_axi_ctrl_user_bresp->set_sv_netview_offsetfromdp(10123496);
        xsim_sc_channel<0, bool > *p_59_s_axi_ctrl_user_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_ctrl_user_bvalid.bind(*p_59_s_axi_ctrl_user_bvalid);
        p_59_s_axi_ctrl_user_bvalid->set_sv_netview_offsetfromdp(10123552);
        xsim_sc_channel<0, bool > *p_59_s_axi_ctrl_user_bready = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_ctrl_user_bready.bind(*p_59_s_axi_ctrl_user_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_ctrl_user_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_59_s_axi_ctrl_user_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_59->s_axi_ctrl_user_araddr.bind(*p_59_s_axi_ctrl_user_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_ctrl_user_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_59_s_axi_ctrl_user_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_59->s_axi_ctrl_user_arprot.bind(*p_59_s_axi_ctrl_user_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_ctrl_user_arprot);
        xsim_sc_channel<0, bool > *p_59_s_axi_ctrl_user_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_ctrl_user_arvalid.bind(*p_59_s_axi_ctrl_user_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_ctrl_user_arvalid);
        xsim_sc_channel<0, bool > *p_59_s_axi_ctrl_user_arready = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_ctrl_user_arready.bind(*p_59_s_axi_ctrl_user_arready);
        p_59_s_axi_ctrl_user_arready->set_sv_netview_offsetfromdp(10123832);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_59_s_axi_ctrl_user_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_59->s_axi_ctrl_user_rdata.bind(*p_59_s_axi_ctrl_user_rdata);
        p_59_s_axi_ctrl_user_rdata->set_sv_netview_offsetfromdp(10123888);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_59_s_axi_ctrl_user_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_59->s_axi_ctrl_user_rresp.bind(*p_59_s_axi_ctrl_user_rresp);
        p_59_s_axi_ctrl_user_rresp->set_sv_netview_offsetfromdp(10123944);
        xsim_sc_channel<0, bool > *p_59_s_axi_ctrl_user_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_ctrl_user_rvalid.bind(*p_59_s_axi_ctrl_user_rvalid);
        p_59_s_axi_ctrl_user_rvalid->set_sv_netview_offsetfromdp(10124000);
        xsim_sc_channel<0, bool > *p_59_s_axi_ctrl_user_rready = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_ctrl_user_rready.bind(*p_59_s_axi_ctrl_user_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_ctrl_user_rready);
        sc_inst_60 = new pfm_top_sim_address_0_0(".pfm_top_wrapper.pfm_top_i.static_region.sim_address_0");
        sc_inst_60->xsim_set_dbg_index(194);
        xsim_sc_channel<0, bool > *p_60_m_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_aximm_aclk.bind(*p_60_m_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_aximm_aclk);
        xsim_sc_channel<0, bool > *p_60_m_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_aximm_aresetn.bind(*p_60_m_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_60_s_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_aximm_aclk.bind(*p_60_s_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_aximm_aclk);
        xsim_sc_channel<0, bool > *p_60_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_aximm_aresetn.bind(*p_60_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_60_m_aximm_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_aximm_AWVALID.bind(*p_60_m_aximm_AWVALID);
        p_60_m_aximm_AWVALID->set_sv_netview_offsetfromdp(10124384);
        xsim_sc_channel<0, bool > *p_60_m_aximm_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_aximm_AWREADY.bind(*p_60_m_aximm_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_aximm_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_60_m_aximm_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_60->m_aximm_AWADDR.bind(*p_60_m_aximm_AWADDR);
        p_60_m_aximm_AWADDR->set_sv_netview_offsetfromdp(10124496);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_60_m_aximm_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_60->m_aximm_AWID.bind(*p_60_m_aximm_AWID);
        p_60_m_aximm_AWID->set_sv_netview_offsetfromdp(10124552);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_60_m_aximm_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_60->m_aximm_AWLEN.bind(*p_60_m_aximm_AWLEN);
        p_60_m_aximm_AWLEN->set_sv_netview_offsetfromdp(10124608);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_60_m_aximm_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_60->m_aximm_AWSIZE.bind(*p_60_m_aximm_AWSIZE);
        p_60_m_aximm_AWSIZE->set_sv_netview_offsetfromdp(10124664);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_m_aximm_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->m_aximm_AWBURST.bind(*p_60_m_aximm_AWBURST);
        p_60_m_aximm_AWBURST->set_sv_netview_offsetfromdp(10124720);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_60_m_aximm_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_60->m_aximm_AWLOCK.bind(*p_60_m_aximm_AWLOCK);
        p_60_m_aximm_AWLOCK->set_sv_netview_offsetfromdp(10124776);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_m_aximm_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->m_aximm_AWCACHE.bind(*p_60_m_aximm_AWCACHE);
        p_60_m_aximm_AWCACHE->set_sv_netview_offsetfromdp(10124832);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_60_m_aximm_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_60->m_aximm_AWPROT.bind(*p_60_m_aximm_AWPROT);
        p_60_m_aximm_AWPROT->set_sv_netview_offsetfromdp(10124888);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_m_aximm_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->m_aximm_AWREGION.bind(*p_60_m_aximm_AWREGION);
        p_60_m_aximm_AWREGION->set_sv_netview_offsetfromdp(10124944);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_m_aximm_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->m_aximm_AWQOS.bind(*p_60_m_aximm_AWQOS);
        p_60_m_aximm_AWQOS->set_sv_netview_offsetfromdp(10125000);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_60_m_aximm_AWUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_60->m_aximm_AWUSER.bind(*p_60_m_aximm_AWUSER);
        p_60_m_aximm_AWUSER->set_sv_netview_offsetfromdp(10125056);
        xsim_sc_channel<0, bool > *p_60_m_aximm_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_aximm_WVALID.bind(*p_60_m_aximm_WVALID);
        p_60_m_aximm_WVALID->set_sv_netview_offsetfromdp(10125112);
        xsim_sc_channel<0, bool > *p_60_m_aximm_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_aximm_WREADY.bind(*p_60_m_aximm_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_aximm_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_m_aximm_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->m_aximm_WDATA.bind(*p_60_m_aximm_WDATA);
        p_60_m_aximm_WDATA->set_sv_netview_offsetfromdp(10125224);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_m_aximm_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->m_aximm_WSTRB.bind(*p_60_m_aximm_WSTRB);
        p_60_m_aximm_WSTRB->set_sv_netview_offsetfromdp(10125280);
        xsim_sc_channel<0, bool > *p_60_m_aximm_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_aximm_WLAST.bind(*p_60_m_aximm_WLAST);
        p_60_m_aximm_WLAST->set_sv_netview_offsetfromdp(10125336);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_60_m_aximm_WUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_60->m_aximm_WUSER.bind(*p_60_m_aximm_WUSER);
        p_60_m_aximm_WUSER->set_sv_netview_offsetfromdp(10125392);
        xsim_sc_channel<0, bool > *p_60_m_aximm_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_aximm_ARVALID.bind(*p_60_m_aximm_ARVALID);
        p_60_m_aximm_ARVALID->set_sv_netview_offsetfromdp(10125448);
        xsim_sc_channel<0, bool > *p_60_m_aximm_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_aximm_ARREADY.bind(*p_60_m_aximm_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_aximm_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_60_m_aximm_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_60->m_aximm_ARADDR.bind(*p_60_m_aximm_ARADDR);
        p_60_m_aximm_ARADDR->set_sv_netview_offsetfromdp(10125560);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_60_m_aximm_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_60->m_aximm_ARID.bind(*p_60_m_aximm_ARID);
        p_60_m_aximm_ARID->set_sv_netview_offsetfromdp(10125616);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_60_m_aximm_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_60->m_aximm_ARLEN.bind(*p_60_m_aximm_ARLEN);
        p_60_m_aximm_ARLEN->set_sv_netview_offsetfromdp(10125672);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_60_m_aximm_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_60->m_aximm_ARSIZE.bind(*p_60_m_aximm_ARSIZE);
        p_60_m_aximm_ARSIZE->set_sv_netview_offsetfromdp(10125728);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_m_aximm_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->m_aximm_ARBURST.bind(*p_60_m_aximm_ARBURST);
        p_60_m_aximm_ARBURST->set_sv_netview_offsetfromdp(10125784);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_60_m_aximm_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_60->m_aximm_ARLOCK.bind(*p_60_m_aximm_ARLOCK);
        p_60_m_aximm_ARLOCK->set_sv_netview_offsetfromdp(10125840);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_m_aximm_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->m_aximm_ARCACHE.bind(*p_60_m_aximm_ARCACHE);
        p_60_m_aximm_ARCACHE->set_sv_netview_offsetfromdp(10125896);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_60_m_aximm_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_60->m_aximm_ARPROT.bind(*p_60_m_aximm_ARPROT);
        p_60_m_aximm_ARPROT->set_sv_netview_offsetfromdp(10125952);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_m_aximm_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->m_aximm_ARREGION.bind(*p_60_m_aximm_ARREGION);
        p_60_m_aximm_ARREGION->set_sv_netview_offsetfromdp(10126008);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_m_aximm_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->m_aximm_ARQOS.bind(*p_60_m_aximm_ARQOS);
        p_60_m_aximm_ARQOS->set_sv_netview_offsetfromdp(10126064);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_60_m_aximm_ARUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_60->m_aximm_ARUSER.bind(*p_60_m_aximm_ARUSER);
        p_60_m_aximm_ARUSER->set_sv_netview_offsetfromdp(10126120);
        xsim_sc_channel<0, bool > *p_60_m_aximm_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_aximm_RVALID.bind(*p_60_m_aximm_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_aximm_RVALID);
        xsim_sc_channel<0, bool > *p_60_m_aximm_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_aximm_RREADY.bind(*p_60_m_aximm_RREADY);
        p_60_m_aximm_RREADY->set_sv_netview_offsetfromdp(10126232);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_m_aximm_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->m_aximm_RDATA.bind(*p_60_m_aximm_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_aximm_RDATA);
        xsim_sc_channel<0, bool > *p_60_m_aximm_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_aximm_RLAST.bind(*p_60_m_aximm_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_aximm_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_60_m_aximm_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_60->m_aximm_RID.bind(*p_60_m_aximm_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_aximm_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_m_aximm_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->m_aximm_RRESP.bind(*p_60_m_aximm_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_aximm_RRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_60_m_aximm_RUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_60->m_aximm_RUSER.bind(*p_60_m_aximm_RUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_aximm_RUSER);
        xsim_sc_channel<0, bool > *p_60_m_aximm_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_aximm_BVALID.bind(*p_60_m_aximm_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_aximm_BVALID);
        xsim_sc_channel<0, bool > *p_60_m_aximm_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_aximm_BREADY.bind(*p_60_m_aximm_BREADY);
        p_60_m_aximm_BREADY->set_sv_netview_offsetfromdp(10126624);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_m_aximm_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->m_aximm_BRESP.bind(*p_60_m_aximm_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_aximm_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_60_m_aximm_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_60->m_aximm_BID.bind(*p_60_m_aximm_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_aximm_BID);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_60_m_aximm_BUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_60->m_aximm_BUSER.bind(*p_60_m_aximm_BUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_aximm_BUSER);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->s_axi_awaddr.bind(*p_60_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_60_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_60->s_axi_awlen.bind(*p_60_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_60_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_60->s_axi_awsize.bind(*p_60_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->s_axi_awburst.bind(*p_60_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_60_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_60->s_axi_awlock.bind(*p_60_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->s_axi_awcache.bind(*p_60_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_60_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_60->s_axi_awprot.bind(*p_60_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->s_axi_awregion.bind(*p_60_s_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->s_axi_awqos.bind(*p_60_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_s_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->s_axi_awuser.bind(*p_60_s_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awuser);
        xsim_sc_channel<0, bool > *p_60_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_awvalid.bind(*p_60_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_60_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_awready.bind(*p_60_s_axi_awready);
        p_60_s_axi_awready->set_sv_netview_offsetfromdp(10127464);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->s_axi_wdata.bind(*p_60_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->s_axi_wstrb.bind(*p_60_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_60_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_wlast.bind(*p_60_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_60_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_wvalid.bind(*p_60_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_60_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_wready.bind(*p_60_s_axi_wready);
        p_60_s_axi_wready->set_sv_netview_offsetfromdp(10127744);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->s_axi_bresp.bind(*p_60_s_axi_bresp);
        p_60_s_axi_bresp->set_sv_netview_offsetfromdp(10127800);
        xsim_sc_channel<0, bool > *p_60_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_bvalid.bind(*p_60_s_axi_bvalid);
        p_60_s_axi_bvalid->set_sv_netview_offsetfromdp(10127856);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_60_s_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_60->s_axi_buser.bind(*p_60_s_axi_buser);
        p_60_s_axi_buser->set_sv_netview_offsetfromdp(10127912);
        xsim_sc_channel<0, bool > *p_60_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_bready.bind(*p_60_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->s_axi_araddr.bind(*p_60_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_60_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_60->s_axi_arlen.bind(*p_60_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_60_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_60->s_axi_arsize.bind(*p_60_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->s_axi_arburst.bind(*p_60_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_60_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_60->s_axi_arlock.bind(*p_60_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->s_axi_arcache.bind(*p_60_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_60_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_60->s_axi_arprot.bind(*p_60_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->s_axi_arregion.bind(*p_60_s_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->s_axi_arqos.bind(*p_60_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_s_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->s_axi_aruser.bind(*p_60_s_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_aruser);
        xsim_sc_channel<0, bool > *p_60_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_arvalid.bind(*p_60_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_60_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_arready.bind(*p_60_s_axi_arready);
        p_60_s_axi_arready->set_sv_netview_offsetfromdp(10128640);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->s_axi_rdata.bind(*p_60_s_axi_rdata);
        p_60_s_axi_rdata->set_sv_netview_offsetfromdp(10128696);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->s_axi_rresp.bind(*p_60_s_axi_rresp);
        p_60_s_axi_rresp->set_sv_netview_offsetfromdp(10128752);
        xsim_sc_channel<0, bool > *p_60_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_rlast.bind(*p_60_s_axi_rlast);
        p_60_s_axi_rlast->set_sv_netview_offsetfromdp(10128808);
        xsim_sc_channel<0, bool > *p_60_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_rvalid.bind(*p_60_s_axi_rvalid);
        p_60_s_axi_rvalid->set_sv_netview_offsetfromdp(10128864);
        xsim_sc_channel<0, bool > *p_60_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_rready.bind(*p_60_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_rready);
        sc_inst_61 = new pfm_top_sim_qdma_0_0(".pfm_top_wrapper.pfm_top_i.static_region.sim_qdma_0");
        sc_inst_61->xsim_set_dbg_index(195);
        xsim_sc_channel<0, bool > *p_61_m_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_aximm_aclk.bind(*p_61_m_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_aximm_aclk);
        xsim_sc_channel<0, bool > *p_61_m_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_aximm_aresetn.bind(*p_61_m_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_61_m_axictrl_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axictrl_aclk.bind(*p_61_m_axictrl_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axictrl_aclk);
        xsim_sc_channel<0, bool > *p_61_m_axictrl_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axictrl_aresetn.bind(*p_61_m_axictrl_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axictrl_aresetn);
        xsim_sc_channel<0, bool > *p_61_s_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_aximm_aclk.bind(*p_61_s_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_aximm_aclk);
        xsim_sc_channel<0, bool > *p_61_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_aximm_aresetn.bind(*p_61_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_aximm_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_61_m_axictrl_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_61->m_axictrl_awaddr.bind(*p_61_m_axictrl_awaddr);
        p_61_m_axictrl_awaddr->set_sv_netview_offsetfromdp(10129360);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_61_m_axictrl_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_61->m_axictrl_awprot.bind(*p_61_m_axictrl_awprot);
        p_61_m_axictrl_awprot->set_sv_netview_offsetfromdp(10129416);
        xsim_sc_channel<0, bool > *p_61_m_axictrl_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axictrl_awvalid.bind(*p_61_m_axictrl_awvalid);
        p_61_m_axictrl_awvalid->set_sv_netview_offsetfromdp(10129472);
        xsim_sc_channel<0, bool > *p_61_m_axictrl_awready = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axictrl_awready.bind(*p_61_m_axictrl_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axictrl_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_61_m_axictrl_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_61->m_axictrl_wdata.bind(*p_61_m_axictrl_wdata);
        p_61_m_axictrl_wdata->set_sv_netview_offsetfromdp(10129584);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_m_axictrl_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->m_axictrl_wstrb.bind(*p_61_m_axictrl_wstrb);
        p_61_m_axictrl_wstrb->set_sv_netview_offsetfromdp(10129640);
        xsim_sc_channel<0, bool > *p_61_m_axictrl_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axictrl_wvalid.bind(*p_61_m_axictrl_wvalid);
        p_61_m_axictrl_wvalid->set_sv_netview_offsetfromdp(10129696);
        xsim_sc_channel<0, bool > *p_61_m_axictrl_wready = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axictrl_wready.bind(*p_61_m_axictrl_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axictrl_wready);
        xsim_sc_channel<0, bool > *p_61_m_axictrl_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axictrl_bvalid.bind(*p_61_m_axictrl_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axictrl_bvalid);
        xsim_sc_channel<0, bool > *p_61_m_axictrl_bready = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axictrl_bready.bind(*p_61_m_axictrl_bready);
        p_61_m_axictrl_bready->set_sv_netview_offsetfromdp(10129864);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_m_axictrl_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->m_axictrl_bresp.bind(*p_61_m_axictrl_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axictrl_bresp);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_61_m_axictrl_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_61->m_axictrl_araddr.bind(*p_61_m_axictrl_araddr);
        p_61_m_axictrl_araddr->set_sv_netview_offsetfromdp(10129976);
        xsim_sc_channel<0, bool > *p_61_m_axictrl_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axictrl_arvalid.bind(*p_61_m_axictrl_arvalid);
        p_61_m_axictrl_arvalid->set_sv_netview_offsetfromdp(10130032);
        xsim_sc_channel<0, bool > *p_61_m_axictrl_arready = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axictrl_arready.bind(*p_61_m_axictrl_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axictrl_arready);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_61_m_axictrl_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_61->m_axictrl_arprot.bind(*p_61_m_axictrl_arprot);
        p_61_m_axictrl_arprot->set_sv_netview_offsetfromdp(10130144);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_61_m_axictrl_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_61->m_axictrl_rdata.bind(*p_61_m_axictrl_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axictrl_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_m_axictrl_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->m_axictrl_rresp.bind(*p_61_m_axictrl_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axictrl_rresp);
        xsim_sc_channel<0, bool > *p_61_m_axictrl_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axictrl_rvalid.bind(*p_61_m_axictrl_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axictrl_rvalid);
        xsim_sc_channel<0, bool > *p_61_m_axictrl_rready = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axictrl_rready.bind(*p_61_m_axictrl_rready);
        p_61_m_axictrl_rready->set_sv_netview_offsetfromdp(10130368);
        xsim_sc_channel<0, bool > *p_61_m_aximm_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_aximm_AWVALID.bind(*p_61_m_aximm_AWVALID);
        p_61_m_aximm_AWVALID->set_sv_netview_offsetfromdp(10130424);
        xsim_sc_channel<0, bool > *p_61_m_aximm_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_aximm_AWREADY.bind(*p_61_m_aximm_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_aximm_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_61_m_aximm_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_61->m_aximm_AWADDR.bind(*p_61_m_aximm_AWADDR);
        p_61_m_aximm_AWADDR->set_sv_netview_offsetfromdp(10130536);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_61_m_aximm_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_61->m_aximm_AWID.bind(*p_61_m_aximm_AWID);
        p_61_m_aximm_AWID->set_sv_netview_offsetfromdp(10130592);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_61_m_aximm_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_61->m_aximm_AWLEN.bind(*p_61_m_aximm_AWLEN);
        p_61_m_aximm_AWLEN->set_sv_netview_offsetfromdp(10130648);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_61_m_aximm_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_61->m_aximm_AWSIZE.bind(*p_61_m_aximm_AWSIZE);
        p_61_m_aximm_AWSIZE->set_sv_netview_offsetfromdp(10130704);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_m_aximm_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->m_aximm_AWBURST.bind(*p_61_m_aximm_AWBURST);
        p_61_m_aximm_AWBURST->set_sv_netview_offsetfromdp(10130760);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_61_m_aximm_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_61->m_aximm_AWLOCK.bind(*p_61_m_aximm_AWLOCK);
        p_61_m_aximm_AWLOCK->set_sv_netview_offsetfromdp(10130816);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_m_aximm_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->m_aximm_AWCACHE.bind(*p_61_m_aximm_AWCACHE);
        p_61_m_aximm_AWCACHE->set_sv_netview_offsetfromdp(10130872);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_61_m_aximm_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_61->m_aximm_AWPROT.bind(*p_61_m_aximm_AWPROT);
        p_61_m_aximm_AWPROT->set_sv_netview_offsetfromdp(10130928);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_m_aximm_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->m_aximm_AWREGION.bind(*p_61_m_aximm_AWREGION);
        p_61_m_aximm_AWREGION->set_sv_netview_offsetfromdp(10130984);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_m_aximm_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->m_aximm_AWQOS.bind(*p_61_m_aximm_AWQOS);
        p_61_m_aximm_AWQOS->set_sv_netview_offsetfromdp(10131040);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_61_m_aximm_AWUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_61->m_aximm_AWUSER.bind(*p_61_m_aximm_AWUSER);
        p_61_m_aximm_AWUSER->set_sv_netview_offsetfromdp(10131096);
        xsim_sc_channel<0, bool > *p_61_m_aximm_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_aximm_WVALID.bind(*p_61_m_aximm_WVALID);
        p_61_m_aximm_WVALID->set_sv_netview_offsetfromdp(10131152);
        xsim_sc_channel<0, bool > *p_61_m_aximm_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_aximm_WREADY.bind(*p_61_m_aximm_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_aximm_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_61_m_aximm_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_61->m_aximm_WDATA.bind(*p_61_m_aximm_WDATA);
        p_61_m_aximm_WDATA->set_sv_netview_offsetfromdp(10131264);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_m_aximm_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->m_aximm_WSTRB.bind(*p_61_m_aximm_WSTRB);
        p_61_m_aximm_WSTRB->set_sv_netview_offsetfromdp(10131320);
        xsim_sc_channel<0, bool > *p_61_m_aximm_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_aximm_WLAST.bind(*p_61_m_aximm_WLAST);
        p_61_m_aximm_WLAST->set_sv_netview_offsetfromdp(10131376);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_61_m_aximm_WUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_61->m_aximm_WUSER.bind(*p_61_m_aximm_WUSER);
        p_61_m_aximm_WUSER->set_sv_netview_offsetfromdp(10131432);
        xsim_sc_channel<0, bool > *p_61_m_aximm_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_aximm_ARVALID.bind(*p_61_m_aximm_ARVALID);
        p_61_m_aximm_ARVALID->set_sv_netview_offsetfromdp(10131488);
        xsim_sc_channel<0, bool > *p_61_m_aximm_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_aximm_ARREADY.bind(*p_61_m_aximm_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_aximm_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_61_m_aximm_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_61->m_aximm_ARADDR.bind(*p_61_m_aximm_ARADDR);
        p_61_m_aximm_ARADDR->set_sv_netview_offsetfromdp(10131600);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_61_m_aximm_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_61->m_aximm_ARID.bind(*p_61_m_aximm_ARID);
        p_61_m_aximm_ARID->set_sv_netview_offsetfromdp(10131656);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_61_m_aximm_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_61->m_aximm_ARLEN.bind(*p_61_m_aximm_ARLEN);
        p_61_m_aximm_ARLEN->set_sv_netview_offsetfromdp(10131712);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_61_m_aximm_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_61->m_aximm_ARSIZE.bind(*p_61_m_aximm_ARSIZE);
        p_61_m_aximm_ARSIZE->set_sv_netview_offsetfromdp(10131768);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_m_aximm_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->m_aximm_ARBURST.bind(*p_61_m_aximm_ARBURST);
        p_61_m_aximm_ARBURST->set_sv_netview_offsetfromdp(10131824);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_61_m_aximm_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_61->m_aximm_ARLOCK.bind(*p_61_m_aximm_ARLOCK);
        p_61_m_aximm_ARLOCK->set_sv_netview_offsetfromdp(10131880);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_m_aximm_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->m_aximm_ARCACHE.bind(*p_61_m_aximm_ARCACHE);
        p_61_m_aximm_ARCACHE->set_sv_netview_offsetfromdp(10131936);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_61_m_aximm_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_61->m_aximm_ARPROT.bind(*p_61_m_aximm_ARPROT);
        p_61_m_aximm_ARPROT->set_sv_netview_offsetfromdp(10131992);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_m_aximm_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->m_aximm_ARREGION.bind(*p_61_m_aximm_ARREGION);
        p_61_m_aximm_ARREGION->set_sv_netview_offsetfromdp(10132048);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_m_aximm_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->m_aximm_ARQOS.bind(*p_61_m_aximm_ARQOS);
        p_61_m_aximm_ARQOS->set_sv_netview_offsetfromdp(10132104);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_61_m_aximm_ARUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_61->m_aximm_ARUSER.bind(*p_61_m_aximm_ARUSER);
        p_61_m_aximm_ARUSER->set_sv_netview_offsetfromdp(10132160);
        xsim_sc_channel<0, bool > *p_61_m_aximm_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_aximm_RVALID.bind(*p_61_m_aximm_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_aximm_RVALID);
        xsim_sc_channel<0, bool > *p_61_m_aximm_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_aximm_RREADY.bind(*p_61_m_aximm_RREADY);
        p_61_m_aximm_RREADY->set_sv_netview_offsetfromdp(10132272);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_61_m_aximm_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_61->m_aximm_RDATA.bind(*p_61_m_aximm_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_aximm_RDATA);
        xsim_sc_channel<0, bool > *p_61_m_aximm_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_aximm_RLAST.bind(*p_61_m_aximm_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_aximm_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_61_m_aximm_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_61->m_aximm_RID.bind(*p_61_m_aximm_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_aximm_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_m_aximm_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->m_aximm_RRESP.bind(*p_61_m_aximm_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_aximm_RRESP);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_61_m_aximm_RUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_61->m_aximm_RUSER.bind(*p_61_m_aximm_RUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_aximm_RUSER);
        xsim_sc_channel<0, bool > *p_61_m_aximm_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_aximm_BVALID.bind(*p_61_m_aximm_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_aximm_BVALID);
        xsim_sc_channel<0, bool > *p_61_m_aximm_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_aximm_BREADY.bind(*p_61_m_aximm_BREADY);
        p_61_m_aximm_BREADY->set_sv_netview_offsetfromdp(10132664);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_m_aximm_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->m_aximm_BRESP.bind(*p_61_m_aximm_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_aximm_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_61_m_aximm_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_61->m_aximm_BID.bind(*p_61_m_aximm_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_aximm_BID);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_61_m_aximm_BUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_61->m_aximm_BUSER.bind(*p_61_m_aximm_BUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_aximm_BUSER);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_61_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_61->s_axi_awaddr.bind(*p_61_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_61_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_61->s_axi_awlen.bind(*p_61_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_61_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_61->s_axi_awsize.bind(*p_61_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->s_axi_awburst.bind(*p_61_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_61_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_61->s_axi_awlock.bind(*p_61_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->s_axi_awcache.bind(*p_61_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_61_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_61->s_axi_awprot.bind(*p_61_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->s_axi_awregion.bind(*p_61_s_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->s_axi_awqos.bind(*p_61_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_61_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_awvalid.bind(*p_61_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_61_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_awready.bind(*p_61_s_axi_awready);
        p_61_s_axi_awready->set_sv_netview_offsetfromdp(10133448);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_61_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_61->s_axi_wdata.bind(*p_61_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->s_axi_wstrb.bind(*p_61_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_61_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_wlast.bind(*p_61_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_61_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_wvalid.bind(*p_61_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_61_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_wready.bind(*p_61_s_axi_wready);
        p_61_s_axi_wready->set_sv_netview_offsetfromdp(10133728);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->s_axi_bresp.bind(*p_61_s_axi_bresp);
        p_61_s_axi_bresp->set_sv_netview_offsetfromdp(10133784);
        xsim_sc_channel<0, bool > *p_61_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_bvalid.bind(*p_61_s_axi_bvalid);
        p_61_s_axi_bvalid->set_sv_netview_offsetfromdp(10133840);
        xsim_sc_channel<0, bool > *p_61_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_bready.bind(*p_61_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_61_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_61->s_axi_araddr.bind(*p_61_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_61_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_61->s_axi_arlen.bind(*p_61_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_61_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_61->s_axi_arsize.bind(*p_61_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->s_axi_arburst.bind(*p_61_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_61_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_61->s_axi_arlock.bind(*p_61_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->s_axi_arcache.bind(*p_61_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_61_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_61->s_axi_arprot.bind(*p_61_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->s_axi_arregion.bind(*p_61_s_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->s_axi_arqos.bind(*p_61_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_61_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_arvalid.bind(*p_61_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_61_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_arready.bind(*p_61_s_axi_arready);
        p_61_s_axi_arready->set_sv_netview_offsetfromdp(10134512);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_61_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_61->s_axi_rdata.bind(*p_61_s_axi_rdata);
        p_61_s_axi_rdata->set_sv_netview_offsetfromdp(10134568);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->s_axi_rresp.bind(*p_61_s_axi_rresp);
        p_61_s_axi_rresp->set_sv_netview_offsetfromdp(10134624);
        xsim_sc_channel<0, bool > *p_61_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_rlast.bind(*p_61_s_axi_rlast);
        p_61_s_axi_rlast->set_sv_netview_offsetfromdp(10134680);
        xsim_sc_channel<0, bool > *p_61_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_rvalid.bind(*p_61_s_axi_rvalid);
        p_61_s_axi_rvalid->set_sv_netview_offsetfromdp(10134736);
        xsim_sc_channel<0, bool > *p_61_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_rready.bind(*p_61_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_rready);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_61_usr_irq_req = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_61->usr_irq_req.bind(*p_61_usr_irq_req);
        (*_glb_hdl_sc_channel_map).push_back(p_61_usr_irq_req);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_61_usr_irq_ack = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_61->usr_irq_ack.bind(*p_61_usr_irq_ack);
        p_61_usr_irq_ack->set_sv_netview_offsetfromdp(10134904);
        sc_inst_62 = new pfm_top_smartconnect_0_0(".pfm_top_wrapper.pfm_top_i.static_region.smartconnect_0");
        sc_inst_62->xsim_set_dbg_index(196);
        xsim_sc_channel<0, bool > *p_62_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_62->aclk.bind(*p_62_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_62_aclk);
        xsim_sc_channel<0, bool > *p_62_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_62->aresetn.bind(*p_62_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_62_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_62_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_62->S00_AXI_awid.bind(*p_62_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_62_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_62->S00_AXI_awaddr.bind(*p_62_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_62_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_62->S00_AXI_awlen.bind(*p_62_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->S00_AXI_awsize.bind(*p_62_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->S00_AXI_awburst.bind(*p_62_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_62_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_62->S00_AXI_awlock.bind(*p_62_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->S00_AXI_awcache.bind(*p_62_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->S00_AXI_awprot.bind(*p_62_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->S00_AXI_awqos.bind(*p_62_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_S00_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->S00_AXI_awuser.bind(*p_62_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_62_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->S00_AXI_awvalid.bind(*p_62_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_62_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_62->S00_AXI_awready.bind(*p_62_S00_AXI_awready);
        p_62_S00_AXI_awready->set_sv_netview_offsetfromdp(10135736);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->S00_AXI_wdata.bind(*p_62_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->S00_AXI_wstrb.bind(*p_62_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_62_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_62->S00_AXI_wlast.bind(*p_62_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_wlast);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_S00_AXI_wuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->S00_AXI_wuser.bind(*p_62_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_62_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->S00_AXI_wvalid.bind(*p_62_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_62_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_62->S00_AXI_wready.bind(*p_62_S00_AXI_wready);
        p_62_S00_AXI_wready->set_sv_netview_offsetfromdp(10136072);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_62_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_62->S00_AXI_bid.bind(*p_62_S00_AXI_bid);
        p_62_S00_AXI_bid->set_sv_netview_offsetfromdp(10136128);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->S00_AXI_bresp.bind(*p_62_S00_AXI_bresp);
        p_62_S00_AXI_bresp->set_sv_netview_offsetfromdp(10136184);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_62_S00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_62->S00_AXI_buser.bind(*p_62_S00_AXI_buser);
        p_62_S00_AXI_buser->set_sv_netview_offsetfromdp(10136240);
        xsim_sc_channel<0, bool > *p_62_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->S00_AXI_bvalid.bind(*p_62_S00_AXI_bvalid);
        p_62_S00_AXI_bvalid->set_sv_netview_offsetfromdp(10136296);
        xsim_sc_channel<0, bool > *p_62_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_62->S00_AXI_bready.bind(*p_62_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_62_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_62->S00_AXI_arid.bind(*p_62_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_62_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_62->S00_AXI_araddr.bind(*p_62_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_62_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_62->S00_AXI_arlen.bind(*p_62_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->S00_AXI_arsize.bind(*p_62_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->S00_AXI_arburst.bind(*p_62_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_62_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_62->S00_AXI_arlock.bind(*p_62_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->S00_AXI_arcache.bind(*p_62_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->S00_AXI_arprot.bind(*p_62_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->S00_AXI_arqos.bind(*p_62_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_S00_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->S00_AXI_aruser.bind(*p_62_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_62_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->S00_AXI_arvalid.bind(*p_62_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_62_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_62->S00_AXI_arready.bind(*p_62_S00_AXI_arready);
        p_62_S00_AXI_arready->set_sv_netview_offsetfromdp(10137024);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_62_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_62->S00_AXI_rid.bind(*p_62_S00_AXI_rid);
        p_62_S00_AXI_rid->set_sv_netview_offsetfromdp(10137080);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->S00_AXI_rdata.bind(*p_62_S00_AXI_rdata);
        p_62_S00_AXI_rdata->set_sv_netview_offsetfromdp(10137136);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->S00_AXI_rresp.bind(*p_62_S00_AXI_rresp);
        p_62_S00_AXI_rresp->set_sv_netview_offsetfromdp(10137192);
        xsim_sc_channel<0, bool > *p_62_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_62->S00_AXI_rlast.bind(*p_62_S00_AXI_rlast);
        p_62_S00_AXI_rlast->set_sv_netview_offsetfromdp(10137248);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_S00_AXI_ruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->S00_AXI_ruser.bind(*p_62_S00_AXI_ruser);
        p_62_S00_AXI_ruser->set_sv_netview_offsetfromdp(10137304);
        xsim_sc_channel<0, bool > *p_62_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->S00_AXI_rvalid.bind(*p_62_S00_AXI_rvalid);
        p_62_S00_AXI_rvalid->set_sv_netview_offsetfromdp(10137360);
        xsim_sc_channel<0, bool > *p_62_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_62->S00_AXI_rready.bind(*p_62_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_M00_AXI_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->M00_AXI_awaddr.bind(*p_62_M00_AXI_awaddr);
        p_62_M00_AXI_awaddr->set_sv_netview_offsetfromdp(10137472);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_62_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_62->M00_AXI_awlen.bind(*p_62_M00_AXI_awlen);
        p_62_M00_AXI_awlen->set_sv_netview_offsetfromdp(10137528);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->M00_AXI_awsize.bind(*p_62_M00_AXI_awsize);
        p_62_M00_AXI_awsize->set_sv_netview_offsetfromdp(10137584);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->M00_AXI_awburst.bind(*p_62_M00_AXI_awburst);
        p_62_M00_AXI_awburst->set_sv_netview_offsetfromdp(10137640);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_62_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_62->M00_AXI_awlock.bind(*p_62_M00_AXI_awlock);
        p_62_M00_AXI_awlock->set_sv_netview_offsetfromdp(10137696);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->M00_AXI_awcache.bind(*p_62_M00_AXI_awcache);
        p_62_M00_AXI_awcache->set_sv_netview_offsetfromdp(10137752);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->M00_AXI_awprot.bind(*p_62_M00_AXI_awprot);
        p_62_M00_AXI_awprot->set_sv_netview_offsetfromdp(10137808);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->M00_AXI_awqos.bind(*p_62_M00_AXI_awqos);
        p_62_M00_AXI_awqos->set_sv_netview_offsetfromdp(10137864);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_M00_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->M00_AXI_awuser.bind(*p_62_M00_AXI_awuser);
        p_62_M00_AXI_awuser->set_sv_netview_offsetfromdp(10137920);
        xsim_sc_channel<0, bool > *p_62_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->M00_AXI_awvalid.bind(*p_62_M00_AXI_awvalid);
        p_62_M00_AXI_awvalid->set_sv_netview_offsetfromdp(10137976);
        xsim_sc_channel<0, bool > *p_62_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_62->M00_AXI_awready.bind(*p_62_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_M00_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_M00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->M00_AXI_wdata.bind(*p_62_M00_AXI_wdata);
        p_62_M00_AXI_wdata->set_sv_netview_offsetfromdp(10138088);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_M00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->M00_AXI_wstrb.bind(*p_62_M00_AXI_wstrb);
        p_62_M00_AXI_wstrb->set_sv_netview_offsetfromdp(10138144);
        xsim_sc_channel<0, bool > *p_62_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_62->M00_AXI_wlast.bind(*p_62_M00_AXI_wlast);
        p_62_M00_AXI_wlast->set_sv_netview_offsetfromdp(10138200);
        xsim_sc_channel<0, bool > *p_62_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->M00_AXI_wvalid.bind(*p_62_M00_AXI_wvalid);
        p_62_M00_AXI_wvalid->set_sv_netview_offsetfromdp(10138256);
        xsim_sc_channel<0, bool > *p_62_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_62->M00_AXI_wready.bind(*p_62_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->M00_AXI_bresp.bind(*p_62_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_62_M00_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_62_M00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_62->M00_AXI_buser.bind(*p_62_M00_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_62_M00_AXI_buser);
        xsim_sc_channel<0, bool > *p_62_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->M00_AXI_bvalid.bind(*p_62_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_62_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_62->M00_AXI_bready.bind(*p_62_M00_AXI_bready);
        p_62_M00_AXI_bready->set_sv_netview_offsetfromdp(10138536);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_M00_AXI_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->M00_AXI_araddr.bind(*p_62_M00_AXI_araddr);
        p_62_M00_AXI_araddr->set_sv_netview_offsetfromdp(10138592);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_62_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_62->M00_AXI_arlen.bind(*p_62_M00_AXI_arlen);
        p_62_M00_AXI_arlen->set_sv_netview_offsetfromdp(10138648);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->M00_AXI_arsize.bind(*p_62_M00_AXI_arsize);
        p_62_M00_AXI_arsize->set_sv_netview_offsetfromdp(10138704);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->M00_AXI_arburst.bind(*p_62_M00_AXI_arburst);
        p_62_M00_AXI_arburst->set_sv_netview_offsetfromdp(10138760);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_62_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_62->M00_AXI_arlock.bind(*p_62_M00_AXI_arlock);
        p_62_M00_AXI_arlock->set_sv_netview_offsetfromdp(10138816);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->M00_AXI_arcache.bind(*p_62_M00_AXI_arcache);
        p_62_M00_AXI_arcache->set_sv_netview_offsetfromdp(10138872);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->M00_AXI_arprot.bind(*p_62_M00_AXI_arprot);
        p_62_M00_AXI_arprot->set_sv_netview_offsetfromdp(10138928);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->M00_AXI_arqos.bind(*p_62_M00_AXI_arqos);
        p_62_M00_AXI_arqos->set_sv_netview_offsetfromdp(10138984);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_M00_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->M00_AXI_aruser.bind(*p_62_M00_AXI_aruser);
        p_62_M00_AXI_aruser->set_sv_netview_offsetfromdp(10139040);
        xsim_sc_channel<0, bool > *p_62_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->M00_AXI_arvalid.bind(*p_62_M00_AXI_arvalid);
        p_62_M00_AXI_arvalid->set_sv_netview_offsetfromdp(10139096);
        xsim_sc_channel<0, bool > *p_62_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_62->M00_AXI_arready.bind(*p_62_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_M00_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_M00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->M00_AXI_rdata.bind(*p_62_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_62_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->M00_AXI_rresp.bind(*p_62_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_62_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_62_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_62->M00_AXI_rlast.bind(*p_62_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_62_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_62_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->M00_AXI_rvalid.bind(*p_62_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_62_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_62->M00_AXI_rready.bind(*p_62_M00_AXI_rready);
        p_62_M00_AXI_rready->set_sv_netview_offsetfromdp(10139432);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_62_M01_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_62->M01_AXI_awaddr.bind(*p_62_M01_AXI_awaddr);
        p_62_M01_AXI_awaddr->set_sv_netview_offsetfromdp(10139488);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_62_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_62->M01_AXI_awlen.bind(*p_62_M01_AXI_awlen);
        p_62_M01_AXI_awlen->set_sv_netview_offsetfromdp(10139544);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->M01_AXI_awsize.bind(*p_62_M01_AXI_awsize);
        p_62_M01_AXI_awsize->set_sv_netview_offsetfromdp(10139600);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->M01_AXI_awburst.bind(*p_62_M01_AXI_awburst);
        p_62_M01_AXI_awburst->set_sv_netview_offsetfromdp(10139656);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_62_M01_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_62->M01_AXI_awlock.bind(*p_62_M01_AXI_awlock);
        p_62_M01_AXI_awlock->set_sv_netview_offsetfromdp(10139712);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_M01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->M01_AXI_awcache.bind(*p_62_M01_AXI_awcache);
        p_62_M01_AXI_awcache->set_sv_netview_offsetfromdp(10139768);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->M01_AXI_awprot.bind(*p_62_M01_AXI_awprot);
        p_62_M01_AXI_awprot->set_sv_netview_offsetfromdp(10139824);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_M01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->M01_AXI_awqos.bind(*p_62_M01_AXI_awqos);
        p_62_M01_AXI_awqos->set_sv_netview_offsetfromdp(10139880);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_M01_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->M01_AXI_awuser.bind(*p_62_M01_AXI_awuser);
        p_62_M01_AXI_awuser->set_sv_netview_offsetfromdp(10139936);
        xsim_sc_channel<0, bool > *p_62_M01_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->M01_AXI_awvalid.bind(*p_62_M01_AXI_awvalid);
        p_62_M01_AXI_awvalid->set_sv_netview_offsetfromdp(10139992);
        xsim_sc_channel<0, bool > *p_62_M01_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_62->M01_AXI_awready.bind(*p_62_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_M01_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_M01_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->M01_AXI_wdata.bind(*p_62_M01_AXI_wdata);
        p_62_M01_AXI_wdata->set_sv_netview_offsetfromdp(10140104);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_M01_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->M01_AXI_wstrb.bind(*p_62_M01_AXI_wstrb);
        p_62_M01_AXI_wstrb->set_sv_netview_offsetfromdp(10140160);
        xsim_sc_channel<0, bool > *p_62_M01_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_62->M01_AXI_wlast.bind(*p_62_M01_AXI_wlast);
        p_62_M01_AXI_wlast->set_sv_netview_offsetfromdp(10140216);
        xsim_sc_channel<0, bool > *p_62_M01_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->M01_AXI_wvalid.bind(*p_62_M01_AXI_wvalid);
        p_62_M01_AXI_wvalid->set_sv_netview_offsetfromdp(10140272);
        xsim_sc_channel<0, bool > *p_62_M01_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_62->M01_AXI_wready.bind(*p_62_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_M01_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->M01_AXI_bresp.bind(*p_62_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_62_M01_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_62_M01_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_62->M01_AXI_buser.bind(*p_62_M01_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_62_M01_AXI_buser);
        xsim_sc_channel<0, bool > *p_62_M01_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->M01_AXI_bvalid.bind(*p_62_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_M01_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_62_M01_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_62->M01_AXI_bready.bind(*p_62_M01_AXI_bready);
        p_62_M01_AXI_bready->set_sv_netview_offsetfromdp(10140552);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_62_M01_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_62->M01_AXI_araddr.bind(*p_62_M01_AXI_araddr);
        p_62_M01_AXI_araddr->set_sv_netview_offsetfromdp(10140608);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_62_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_62->M01_AXI_arlen.bind(*p_62_M01_AXI_arlen);
        p_62_M01_AXI_arlen->set_sv_netview_offsetfromdp(10140664);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->M01_AXI_arsize.bind(*p_62_M01_AXI_arsize);
        p_62_M01_AXI_arsize->set_sv_netview_offsetfromdp(10140720);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->M01_AXI_arburst.bind(*p_62_M01_AXI_arburst);
        p_62_M01_AXI_arburst->set_sv_netview_offsetfromdp(10140776);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_62_M01_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_62->M01_AXI_arlock.bind(*p_62_M01_AXI_arlock);
        p_62_M01_AXI_arlock->set_sv_netview_offsetfromdp(10140832);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_M01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->M01_AXI_arcache.bind(*p_62_M01_AXI_arcache);
        p_62_M01_AXI_arcache->set_sv_netview_offsetfromdp(10140888);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->M01_AXI_arprot.bind(*p_62_M01_AXI_arprot);
        p_62_M01_AXI_arprot->set_sv_netview_offsetfromdp(10140944);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_M01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->M01_AXI_arqos.bind(*p_62_M01_AXI_arqos);
        p_62_M01_AXI_arqos->set_sv_netview_offsetfromdp(10141000);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_M01_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->M01_AXI_aruser.bind(*p_62_M01_AXI_aruser);
        p_62_M01_AXI_aruser->set_sv_netview_offsetfromdp(10141056);
        xsim_sc_channel<0, bool > *p_62_M01_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->M01_AXI_arvalid.bind(*p_62_M01_AXI_arvalid);
        p_62_M01_AXI_arvalid->set_sv_netview_offsetfromdp(10141112);
        xsim_sc_channel<0, bool > *p_62_M01_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_62->M01_AXI_arready.bind(*p_62_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_M01_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_M01_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->M01_AXI_rdata.bind(*p_62_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_62_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->M01_AXI_rresp.bind(*p_62_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_62_M01_AXI_rresp);
        xsim_sc_channel<0, bool > *p_62_M01_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_62->M01_AXI_rlast.bind(*p_62_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_62_M01_AXI_rlast);
        xsim_sc_channel<0, bool > *p_62_M01_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->M01_AXI_rvalid.bind(*p_62_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_M01_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_62_M01_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_62->M01_AXI_rready.bind(*p_62_M01_AXI_rready);
        p_62_M01_AXI_rready->set_sv_netview_offsetfromdp(10141448);
    }


extern "C"
    void implicit_HDL_SCcleanup()
    {
        delete sc_inst_1;
        delete sc_inst_2;
        delete sc_inst_3;
        delete sc_inst_4;
        delete sc_inst_5;
        delete sc_inst_6;
        delete sc_inst_7;
        delete sc_inst_8;
        delete sc_inst_9;
        delete sc_inst_10;
        delete sc_inst_11;
        delete sc_inst_12;
        delete sc_inst_13;
        delete sc_inst_14;
        delete sc_inst_15;
        delete sc_inst_16;
        delete sc_inst_17;
        delete sc_inst_18;
        delete sc_inst_19;
        delete sc_inst_20;
        delete sc_inst_21;
        delete sc_inst_22;
        delete sc_inst_23;
        delete sc_inst_24;
        delete sc_inst_25;
        delete sc_inst_26;
        delete sc_inst_27;
        delete sc_inst_28;
        delete sc_inst_29;
        delete sc_inst_30;
        delete sc_inst_31;
        delete sc_inst_32;
        delete sc_inst_33;
        delete sc_inst_34;
        delete sc_inst_35;
        delete sc_inst_36;
        delete sc_inst_37;
        delete sc_inst_38;
        delete sc_inst_39;
        delete sc_inst_40;
        delete sc_inst_41;
        delete sc_inst_42;
        delete sc_inst_43;
        delete sc_inst_44;
        delete sc_inst_45;
        delete sc_inst_46;
        delete sc_inst_47;
        delete sc_inst_48;
        delete sc_inst_49;
        delete sc_inst_50;
        delete sc_inst_51;
        delete sc_inst_52;
        delete sc_inst_53;
        delete sc_inst_54;
        delete sc_inst_55;
        delete sc_inst_56;
        delete sc_inst_57;
        delete sc_inst_58;
        delete sc_inst_59;
        delete sc_inst_60;
        delete sc_inst_61;
        delete sc_inst_62;
    }
