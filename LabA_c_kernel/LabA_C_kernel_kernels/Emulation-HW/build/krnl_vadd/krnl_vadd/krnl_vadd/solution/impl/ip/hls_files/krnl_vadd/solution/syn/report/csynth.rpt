

================================================================
== Synthesis Summary Report of 'krnl_vadd'
================================================================
+ General Information: 
    * Date:           Fri Oct 11 23:28:37 2024
    * Version:        2022.1 (Build 3526262 on Mon Apr 18 15:47:01 MDT 2022)
    * Project:        krnl_vadd
    * Solution:       solution (Vitis Kernel Flow Target)
    * Product family: virtexuplus
    * Target device:  xcu50-fsvh2104-2-e
    

+ Performance & Resource Estimates: 
    
    PS: '+' for module; 'o' for loop; '*' for dataflow
    +--------------------+--------+-------+---------+--------+----------+---------+------+----------+---------+----+------------+------------+-----+
    |       Modules      |  Issue |       | Latency | Latency| Iteration|         | Trip |          |         |    |            |            |     |
    |       & Loops      |  Type  | Slack | (cycles)|  (ns)  |  Latency | Interval| Count| Pipelined|  BRAM   | DSP|     FF     |     LUT    | URAM|
    +--------------------+--------+-------+---------+--------+----------+---------+------+----------+---------+----+------------+------------+-----+
    |+ krnl_vadd         |  Timing|  -0.00|        -|       -|         -|        -|     -|        no|  2 (~0%)|   -|  3159 (~0%)|  4427 (~0%)|    -|
    | o VITIS_LOOP_75_1  |       -|   2.43|        -|       -|         -|        -|     -|        no|        -|   -|           -|           -|    -|
    |  o readA           |      II|   2.43|        -|       -|        74|        2|     -|       yes|        -|   -|           -|           -|    -|
    |  o vadd_wrteC      |       -|   2.43|        -|       -|         3|        1|     -|       yes|        -|   -|           -|           -|    -|
    +--------------------+--------+-------+---------+--------+----------+---------+------+----------+---------+----+------------+------------+-----+


================================================================
== HW Interfaces
================================================================
* M_AXI
+-------------+------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+
| Interface   | Data Width | Address Width | Latency | Offset | Register | Max Widen | Max Read     | Max Write    | Num Read    | Num Write   |
|             | (SW->HW)   |               |         |        |          | Bitwidth  | Burst Length | Burst Length | Outstanding | Outstanding |
+-------------+------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+
| m_axi_gmem  | 32 -> 32   | 64            | 64      | slave  | 0        | 512       | 256          | 16           | 16          | 16          |
| m_axi_gmem1 | 32 -> 32   | 64            | 64      | slave  | 0        | 512       | 16           | 256          | 16          | 16          |
+-------------+------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+

* S_AXILITE Interfaces
+---------------+------------+---------------+--------+----------+
| Interface     | Data Width | Address Width | Offset | Register |
+---------------+------------+---------------+--------+----------+
| s_axi_control | 32         | 6             | 16     | 0        |
+---------------+------------+---------------+--------+----------+

* S_AXILITE Registers
+---------------+------------+--------+-------+--------+----------------------------------+------------------------------------------------------------------------------------+
| Interface     | Register   | Offset | Width | Access | Description                      | Bit Fields                                                                         |
+---------------+------------+--------+-------+--------+----------------------------------+------------------------------------------------------------------------------------+
| s_axi_control | CTRL       | 0x00   | 32    | RW     | Control signals                  | 0=AP_START 1=AP_DONE 2=AP_IDLE 3=AP_READY 4=AP_CONTINUE 7=AUTO_RESTART 9=INTERRUPT |
| s_axi_control | GIER       | 0x04   | 32    | RW     | Global Interrupt Enable Register | 0=Enable                                                                           |
| s_axi_control | IP_IER     | 0x08   | 32    | RW     | IP Interrupt Enable Register     | 0=CHAN0_INT_EN 1=CHAN1_INT_EN                                                      |
| s_axi_control | IP_ISR     | 0x0c   | 32    | RW     | IP Interrupt Status Register     | 0=CHAN0_INT_ST 1=CHAN1_INT_ST                                                      |
| s_axi_control | a_1        | 0x10   | 32    | W      | Data signal of a                 |                                                                                    |
| s_axi_control | a_2        | 0x14   | 32    | W      | Data signal of a                 |                                                                                    |
| s_axi_control | b_1        | 0x1c   | 32    | W      | Data signal of b                 |                                                                                    |
| s_axi_control | b_2        | 0x20   | 32    | W      | Data signal of b                 |                                                                                    |
| s_axi_control | c_1        | 0x28   | 32    | W      | Data signal of c                 |                                                                                    |
| s_axi_control | c_2        | 0x2c   | 32    | W      | Data signal of c                 |                                                                                    |
| s_axi_control | n_elements | 0x34   | 32    | W      | Data signal of n_elements        |                                                                                    |
+---------------+------------+--------+-------+--------+----------------------------------+------------------------------------------------------------------------------------+

* REGISTER
+-------------+----------+
| Interface   | Bitwidth |
+-------------+----------+
| event_done  | 1        |
| event_start | 1        |
+-------------+----------+

* TOP LEVEL CONTROL
+-----------+---------------+-----------+
| Interface | Type          | Ports     |
+-----------+---------------+-----------+
| ap_clk    | clock         | ap_clk    |
| ap_rst_n  | reset         | ap_rst_n  |
| interrupt | interrupt     | interrupt |
| ap_ctrl   | ap_ctrl_chain |           |
+-----------+---------------+-----------+


================================================================
== SW I/O Information
================================================================
* Top Function Arguments
+------------+-----------+------------+
| Argument   | Direction | Datatype   |
+------------+-----------+------------+
| a          | in        | int*       |
| b          | in        | int*       |
| c          | out       | int*       |
| n_elements | in        | int const  |
+------------+-----------+------------+

* SW-to-HW Mapping
+------------+---------------+-----------+----------+--------------------------------------+
| Argument   | HW Interface  | HW Type   | HW Usage | HW Info                              |
+------------+---------------+-----------+----------+--------------------------------------+
| a          | m_axi_gmem    | interface |          |                                      |
| a          | s_axi_control | register  | offset   | name=a_1 offset=0x10 range=32        |
| a          | s_axi_control | register  | offset   | name=a_2 offset=0x14 range=32        |
| b          | m_axi_gmem    | interface |          |                                      |
| b          | s_axi_control | register  | offset   | name=b_1 offset=0x1c range=32        |
| b          | s_axi_control | register  | offset   | name=b_2 offset=0x20 range=32        |
| c          | m_axi_gmem1   | interface |          |                                      |
| c          | s_axi_control | register  | offset   | name=c_1 offset=0x28 range=32        |
| c          | s_axi_control | register  | offset   | name=c_2 offset=0x2c range=32        |
| n_elements | s_axi_control | register  |          | name=n_elements offset=0x34 range=32 |
+------------+---------------+-----------+----------+--------------------------------------+


================================================================
== M_AXI Burst Information
================================================================
 Note: All burst requests might be further partitioned into multiple requests during RTL generation based on max_read_burst_length or max_write_burst_length settings.

* Inferred Burst Summary
+--------------+------------+-----------+----------+-------+----------------------------------------------------------------------------------------------------------+
| HW Interface | Loop       | Direction | Length   | Width | Location                                                                                                 |
+--------------+------------+-----------+----------+-------+----------------------------------------------------------------------------------------------------------+
| m_axi_gmem1  | vadd_wrteC | write     | variable | 32    | /home/ubuntu/Desktop/02-mixing-c-rtl-kernels/LabA_c_kernel/LabA_C_kernel_kernels/src/krnl_vadd.cpp:90:17 |
+--------------+------------+-----------+----------+-------+----------------------------------------------------------------------------------------------------------+

* Inferred Bursts and Widening Missed
+--------------+----------+-----------------+----------------------------------------------------------------------------------------+------------+----------------------------------------------------------------------------------------------------------+
| HW Interface | Variable | Loop            | Problem                                                                                | Resolution | Location                                                                                                 |
+--------------+----------+-----------------+----------------------------------------------------------------------------------------+------------+----------------------------------------------------------------------------------------------------------+
| m_axi_gmem   | a        | VITIS_LOOP_75_1 | Stride is incompatible                                                                 | 214-230    | /home/ubuntu/Desktop/02-mixing-c-rtl-kernels/LabA_c_kernel/LabA_C_kernel_kernels/src/krnl_vadd.cpp:75:22 |
| m_axi_gmem   | b        | VITIS_LOOP_75_1 | Stride is incompatible                                                                 | 214-230    | /home/ubuntu/Desktop/02-mixing-c-rtl-kernels/LabA_c_kernel/LabA_C_kernel_kernels/src/krnl_vadd.cpp:75:22 |
| m_axi_gmem1  | c        | VITIS_LOOP_75_1 | Stride is incompatible                                                                 | 214-230    | /home/ubuntu/Desktop/02-mixing-c-rtl-kernels/LabA_c_kernel/LabA_C_kernel_kernels/src/krnl_vadd.cpp:75:22 |
| m_axi_gmem   |          |                 | Could not burst due to multiple potential reads to the same bundle in the same region. | 214-224    | /home/ubuntu/Desktop/02-mixing-c-rtl-kernels/LabA_c_kernel/LabA_C_kernel_kernels/src/krnl_vadd.cpp:82:21 |
+--------------+----------+-----------------+----------------------------------------------------------------------------------------+------------+----------------------------------------------------------------------------------------------------------+

    * Resolution URL: www.xilinx.com/cgi-bin/docs/rdoc?v=2022.1;t=hls+guidance;d=XXX-YYY.html (replace XXX-YYY with column value)

================================================================
== Bind Op Report
================================================================
+------------------------+-----+--------+------------+-----+--------+---------+
| Name                   | DSP | Pragma | Variable   | Op  | Impl   | Latency |
+------------------------+-----+--------+------------+-----+--------+---------+
| + krnl_vadd            | 0   |        |            |     |        |         |
|   add_ln79_fu_271_p2   | -   |        | add_ln79   | add | fabric | 0       |
|   add_ln79_1_fu_276_p2 | -   |        | add_ln79_1 | add | fabric | 0       |
|   i_fu_281_p2          | -   |        | i          | add | fabric | 0       |
|   sub_ln79_fu_291_p2   | -   |        | sub_ln79   | sub | fabric | 0       |
|   add_ln84_fu_347_p2   | -   |        | add_ln84   | add | fabric | 0       |
|   add_ln85_fu_362_p2   | -   |        | add_ln85   | add | fabric | 0       |
|   j_fu_377_p2          | -   |        | j          | add | fabric | 0       |
|   add_ln79_3_fu_397_p2 | -   |        | add_ln79_3 | add | fabric | 0       |
|   add_ln92_fu_452_p2   | -   |        | add_ln92   | add | fabric | 0       |
|   j_1_fu_437_p2        | -   |        | j_1        | add | fabric | 0       |
+------------------------+-----+--------+------------+-----+--------+---------+


================================================================
== Bind Storage Report
================================================================
+-------------+------+------+--------+----------+---------+------+---------+
| Name        | BRAM | URAM | Pragma | Variable | Storage | Impl | Latency |
+-------------+------+------+--------+----------+---------+------+---------+
| + krnl_vadd | 2    | 0    |        |          |         |      |         |
|   arrayA_U  | 1    | -    |        | arrayA   | ram_1p  | auto | 1       |
|   arrayB_U  | 1    | -    |        | arrayB   | ram_1p  | auto | 1       |
+-------------+------+------+--------+----------+---------+------+---------+


================================================================
== Pragma Report
================================================================
* Valid Pragma Syntax
+-----------+---------------------------------------------------------------------+-----------------------------------------------------------+
| Type      | Options                                                             | Location                                                  |
+-----------+---------------------------------------------------------------------+-----------------------------------------------------------+
| interface | m_axi offset=SLAVE bundle=gmem port=a max_read_burst_length = 256   | ../../../../src/krnl_vadd.cpp:61 in krnl_vadd, a          |
| interface | m_axi offset=SLAVE bundle=gmem port=b max_read_burst_length = 256   | ../../../../src/krnl_vadd.cpp:62 in krnl_vadd, b          |
| interface | m_axi offset=SLAVE bundle=gmem1 port=c max_write_burst_length = 256 | ../../../../src/krnl_vadd.cpp:63 in krnl_vadd, c          |
| interface | s_axilite port=a bundle=control                                     | ../../../../src/krnl_vadd.cpp:65 in krnl_vadd, a          |
| interface | s_axilite port=b bundle=control                                     | ../../../../src/krnl_vadd.cpp:66 in krnl_vadd, b          |
| interface | s_axilite port=c bundle=control                                     | ../../../../src/krnl_vadd.cpp:67 in krnl_vadd, c          |
| interface | s_axilite port=n_elements bundle=control                            | ../../../../src/krnl_vadd.cpp:69 in krnl_vadd, n_elements |
| interface | s_axilite port=return bundle=control                                | ../../../../src/krnl_vadd.cpp:70 in krnl_vadd, return     |
| pipeline  | ii = 1 rewind                                                       | ../../../../src/krnl_vadd.cpp:83 in krnl_vadd             |
| pipeline  | ii = 1 rewind                                                       | ../../../../src/krnl_vadd.cpp:91 in krnl_vadd             |
+-----------+---------------------------------------------------------------------+-----------------------------------------------------------+


